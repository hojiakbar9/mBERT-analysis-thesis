id,classname,method_name,method_sig,method_def_line,mut_location,mut_start,mut_end,mut_operator,orig_token,pred_token,pred_pos,pred_score,masked_expr,masked_seq
0,Node.java,attr,String attr(String attributeKey),69,70,2108,2114,MethodCallMutator,notNull,name,0,0.097645946,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
1,Node.java,attr,String attr(String attributeKey),69,70,2108,2114,MethodCallMutator,notNull,valid,1,0.05831334,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
2,Node.java,attr,String attr(String attributeKey),69,70,2108,2114,MethodCallMutator,notNull,check,2,0.04455796,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
3,Node.java,attr,String attr(String attributeKey),69,70,2108,2114,MethodCallMutator,notNull,validate,3,0.04088443,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
4,Node.java,attr,String attr(String attributeKey),69,70,2108,2114,MethodCallMutator,notNull,ok,4,0.024846686,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
5,Node.java,attr,String attr(String attributeKey),69,70,2116,2127,IdentifierMutator-Variable,attributeKey,attribute,0,0.4601736,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
6,Node.java,attr,String attr(String attributeKey),69,70,2116,2127,IdentifierMutator-Variable,attributeKey,attr,1,0.21071579,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
7,Node.java,attr,String attr(String attributeKey),69,70,2116,2127,IdentifierMutator-Variable,attributeKey,Attributes,2,0.03750135,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
8,Node.java,attr,String attr(String attributeKey),69,70,2116,2127,IdentifierMutator-Variable,attributeKey,this,3,0.034641623,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
9,Node.java,attr,String attr(String attributeKey),69,70,2116,2127,IdentifierMutator-Variable,attributeKey,params,4,0.023529416,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
10,Node.java,attr,String attr(String attributeKey),69,72,2144,2150,MethodCallMutator,hasAttr,has,0,0.8414865,<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
11,Node.java,attr,String attr(String attributeKey),69,72,2144,2150,MethodCallMutator,hasAttr,get,1,0.019090844,<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
12,Node.java,attr,String attr(String attributeKey),69,72,2144,2150,MethodCallMutator,hasAttr,empty,2,0.018748786,<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
13,Node.java,attr,String attr(String attributeKey),69,72,2144,2150,MethodCallMutator,hasAttr,required,3,0.009038833,<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
14,Node.java,attr,String attr(String attributeKey),69,72,2144,2150,MethodCallMutator,hasAttr,has,4,0.007145452,<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
15,Node.java,attr,String attr(String attributeKey),69,72,2152,2163,IdentifierMutator-Variable,attributeKey,attribute,0,0.5231921,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
16,Node.java,attr,String attr(String attributeKey),69,72,2152,2163,IdentifierMutator-Variable,attributeKey,key,1,0.23312533,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
17,Node.java,attr,String attr(String attributeKey),69,72,2152,2163,IdentifierMutator-Variable,attributeKey,Attribute,2,0.05069054,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
18,Node.java,attr,String attr(String attributeKey),69,72,2152,2163,IdentifierMutator-Variable,attributeKey,attr,3,0.033411868,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
19,Node.java,attr,String attr(String attributeKey),69,72,2152,2163,IdentifierMutator-Variable,attributeKey,name,4,0.019258242,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
20,Node.java,attr,String attr(String attributeKey),69,73,2197,2199,MethodCallMutator,get,attr,1,0.0099813435,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
21,Node.java,attr,String attr(String attributeKey),69,73,2197,2199,MethodCallMutator,get,attribute,3,0.0010180902,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
22,Node.java,attr,String attr(String attributeKey),69,73,2197,2199,MethodCallMutator,get,value,4,9.5109356E-4,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
23,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,IdentifierMutator-Variable,attributes,attribute,1,0.109837696,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
24,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,IdentifierMutator-Variable,attributes,att,2,0.013488323,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
25,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,IdentifierMutator-Variable,attributes,Attributes,3,0.0055193505,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
26,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,IdentifierMutator-Variable,attributes,this,4,0.004518824,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
27,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,FieldReferenceMutator,attributes,attribute,1,0.109837696,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
28,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,FieldReferenceMutator,attributes,att,2,0.013488323,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
29,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,FieldReferenceMutator,attributes,Attributes,3,0.0055193505,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
30,Node.java,attr,String attr(String attributeKey),69,73,2186,2195,FieldReferenceMutator,attributes,this,4,0.004518824,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
31,Node.java,attr,String attr(String attributeKey),69,73,2201,2212,IdentifierMutator-Variable,attributeKey,key,0,0.35218126,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
32,Node.java,attr,String attr(String attributeKey),69,73,2201,2212,IdentifierMutator-Variable,attributeKey,attribute,1,0.3298255,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
33,Node.java,attr,String attr(String attributeKey),69,73,2201,2212,IdentifierMutator-Variable,attributeKey,attr,2,0.24948205,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
34,Node.java,attr,String attr(String attributeKey),69,73,2201,2212,IdentifierMutator-Variable,attributeKey,0,3,0.017833784,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
35,Node.java,attr,String attr(String attributeKey),69,73,2201,2212,IdentifierMutator-Variable,attributeKey,name,4,0.008358639,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
36,Node.java,attr,String attr(String attributeKey),69,74,2260,2269,MethodCallMutator,startsWith,has,0,0.37519673,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
37,Node.java,attr,String attr(String attributeKey),69,74,2260,2269,MethodCallMutator,startsWith,match,1,0.13860466,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
38,Node.java,attr,String attr(String attributeKey),69,74,2260,2269,MethodCallMutator,startsWith,is,2,0.114222035,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
39,Node.java,attr,String attr(String attributeKey),69,74,2260,2269,MethodCallMutator,startsWith,split,3,0.0683979,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
40,Node.java,attr,String attr(String attributeKey),69,74,2260,2269,MethodCallMutator,startsWith,include,4,0.045548227,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
41,Node.java,attr,String attr(String attributeKey),69,74,2246,2256,MethodCallMutator,toLowerCase,length,0,0.9412449,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
42,Node.java,attr,String attr(String attributeKey),69,74,2246,2256,MethodCallMutator,toLowerCase,name,1,0.012761218,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
43,Node.java,attr,String attr(String attributeKey),69,74,2246,2256,MethodCallMutator,toLowerCase,string,2,0.010078851,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
44,Node.java,attr,String attr(String attributeKey),69,74,2246,2256,MethodCallMutator,toLowerCase,strip,3,0.00807845,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
45,Node.java,attr,String attr(String attributeKey),69,74,2246,2256,MethodCallMutator,toLowerCase,value,4,0.00518696,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
46,Node.java,attr,String attr(String attributeKey),69,74,2233,2244,IdentifierMutator-Variable,attributeKey,key,0,0.81566703,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
47,Node.java,attr,String attr(String attributeKey),69,74,2233,2244,IdentifierMutator-Variable,attributeKey,attribute,1,0.08870509,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
48,Node.java,attr,String attr(String attributeKey),69,74,2233,2244,IdentifierMutator-Variable,attributeKey,attr,2,0.020841403,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
49,Node.java,attr,String attr(String attributeKey),69,74,2233,2244,IdentifierMutator-Variable,attributeKey,name,3,0.020199602,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
50,Node.java,attr,String attr(String attributeKey),69,74,2233,2244,IdentifierMutator-Variable,attributeKey,Key,4,0.009081106,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
51,Node.java,attr,String attr(String attributeKey),69,74,2271,2276,IdentifierMutator-Literal,"""abs:""",abs,0,0.6168523,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
52,Node.java,attr,String attr(String attributeKey),69,74,2271,2276,IdentifierMutator-Literal,"""abs:""",url,1,0.06030317,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
53,Node.java,attr,String attr(String attributeKey),69,74,2271,2276,IdentifierMutator-Literal,"""abs:""",Abs,2,0.05642292,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
54,Node.java,attr,String attr(String attributeKey),69,74,2271,2276,IdentifierMutator-Literal,"""abs:""",http,3,0.0364529,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
55,Node.java,attr,String attr(String attributeKey),69,74,2271,2276,IdentifierMutator-Literal,"""abs:""",absolute,4,0.02236008,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
56,Node.java,attr,String attr(String attributeKey),69,75,2299,2304,MethodCallMutator,absUrl,abs,0,0.21257213,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
57,Node.java,attr,String attr(String attributeKey),69,75,2299,2304,MethodCallMutator,absUrl,escape,1,0.17890589,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
58,Node.java,attr,String attr(String attributeKey),69,75,2299,2304,MethodCallMutator,absUrl,capitalize,2,0.09786868,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
59,Node.java,attr,String attr(String attributeKey),69,75,2299,2304,MethodCallMutator,absUrl,encode,3,0.08181688,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
60,Node.java,attr,String attr(String attributeKey),69,75,2299,2304,MethodCallMutator,absUrl,trim,4,0.041210797,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
61,Node.java,attr,String attr(String attributeKey),69,75,2319,2327,MethodCallMutator,substring,replace,0,0.4307918,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
62,Node.java,attr,String attr(String attributeKey),69,75,2319,2327,MethodCallMutator,substring,split,1,0.29888093,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
63,Node.java,attr,String attr(String attributeKey),69,75,2319,2327,MethodCallMutator,substring,repeat,2,0.05967207,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
64,Node.java,attr,String attr(String attributeKey),69,75,2319,2327,MethodCallMutator,substring,slice,3,0.051518895,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
65,Node.java,attr,String attr(String attributeKey),69,75,2319,2327,MethodCallMutator,substring,remove,4,0.036622994,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
66,Node.java,attr,String attr(String attributeKey),69,75,2306,2317,IdentifierMutator-Variable,attributeKey,url,0,0.3777737,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
67,Node.java,attr,String attr(String attributeKey),69,75,2306,2317,IdentifierMutator-Variable,attributeKey,attribute,1,0.15340137,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
68,Node.java,attr,String attr(String attributeKey),69,75,2306,2317,IdentifierMutator-Variable,attributeKey,key,2,0.11553157,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
69,Node.java,attr,String attr(String attributeKey),69,75,2306,2317,IdentifierMutator-Variable,attributeKey,attr,3,0.076137885,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
70,Node.java,attr,String attr(String attributeKey),69,75,2306,2317,IdentifierMutator-Variable,attributeKey,uri,4,0.050586406,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
71,Node.java,attr,String attr(String attributeKey),69,75,2336,2341,MethodCallMutator,length,value,1,0.0054399204,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
72,Node.java,attr,String attr(String attributeKey),69,75,2336,2341,MethodCallMutator,length,split,2,0.0039944104,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
73,Node.java,attr,String attr(String attributeKey),69,75,2336,2341,MethodCallMutator,length,get,3,0.0024584641,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
74,Node.java,attr,String attr(String attributeKey),69,75,2336,2341,MethodCallMutator,length,name,4,0.002430879,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
75,Node.java,attr,String attr(String attributeKey),69,75,2329,2334,IdentifierMutator-Literal,"""abs:""",abs,0,0.96639735,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
76,Node.java,attr,String attr(String attributeKey),69,75,2329,2334,IdentifierMutator-Literal,"""abs:""",Abs,1,0.021116052,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
77,Node.java,attr,String attr(String attributeKey),69,75,2329,2334,IdentifierMutator-Literal,"""abs:""",prefix,2,0.0014696257,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
78,Node.java,attr,String attr(String attributeKey),69,75,2329,2334,IdentifierMutator-Literal,"""abs:""",url,3,0.0010180983,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
79,Node.java,attr,String attr(String attributeKey),69,75,2329,2334,IdentifierMutator-Literal,"""abs:""",rel,4,6.188308E-4,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
80,Node.java,attr,String attr(String attributeKey),69,76,2368,2369,IdentifierMutator-Literal,"""""",null,0,0.60743797,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
81,Node.java,attr,String attr(String attributeKey),69,76,2368,2369,IdentifierMutator-Literal,"""""",undefined,2,0.052534062,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
82,Node.java,attr,String attr(String attributeKey),69,76,2368,2369,IdentifierMutator-Literal,"""""",url,3,0.032515343,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
83,Node.java,attr,String attr(String attributeKey),69,76,2368,2369,IdentifierMutator-Literal,"""""","''",4,0.017884387,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (hasAttr(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
84,Node.java,attributes,Attributes attributes(),83,84,2591,2600,IdentifierMutator-Variable,attributes,attribute,1,0.05009775,<mask>,"Attributes attributes() {
        return<mask>;
    }"
85,Node.java,attributes,Attributes attributes(),83,84,2591,2600,IdentifierMutator-Variable,attributes,this,2,0.012205256,<mask>,"Attributes attributes() {
        return<mask>;
    }"
86,Node.java,attributes,Attributes attributes(),83,84,2591,2600,IdentifierMutator-Variable,attributes,null,3,0.00793501,<mask>,"Attributes attributes() {
        return<mask>;
    }"
87,Node.java,attributes,Attributes attributes(),83,84,2591,2600,IdentifierMutator-Variable,attributes,true,4,0.005861705,<mask>,"Attributes attributes() {
        return<mask>;
    }"
88,Node.java,attributes,Attributes attributes(),83,84,2591,2600,FieldReferenceMutator,attributes,attribute,1,0.05009775,<mask>,"Attributes attributes() {
        return<mask>;
    }"
89,Node.java,attributes,Attributes attributes(),83,84,2591,2600,FieldReferenceMutator,attributes,this,2,0.012205256,<mask>,"Attributes attributes() {
        return<mask>;
    }"
90,Node.java,attributes,Attributes attributes(),83,84,2591,2600,FieldReferenceMutator,attributes,null,3,0.00793501,<mask>,"Attributes attributes() {
        return<mask>;
    }"
91,Node.java,attributes,Attributes attributes(),83,84,2591,2600,FieldReferenceMutator,attributes,true,4,0.005861705,<mask>,"Attributes attributes() {
        return<mask>;
    }"
92,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2929,2931,MethodCallMutator,put,add,2,0.030581623,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
93,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2929,2931,MethodCallMutator,put,set,3,0.021039039,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
94,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2929,2931,MethodCallMutator,put,attr,4,0.0043093185,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
95,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,IdentifierMutator-Variable,attributes,attribute,1,0.01289071,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
96,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,IdentifierMutator-Variable,attributes,Attributes,2,0.0023537038,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
97,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,IdentifierMutator-Variable,attributes,ributes,3,0.0020368248,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
98,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,IdentifierMutator-Variable,attributes,rs,4,0.0016856604,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
99,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,FieldReferenceMutator,attributes,attribute,1,0.01289071,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
100,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,FieldReferenceMutator,attributes,Attributes,2,0.0023537038,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
101,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,FieldReferenceMutator,attributes,ributes,3,0.0020368248,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
102,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2918,2927,FieldReferenceMutator,attributes,rs,4,0.0016856604,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
103,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2933,2944,IdentifierMutator-Variable,attributeKey,key,0,0.8288261,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
104,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2933,2944,IdentifierMutator-Variable,attributeKey,attribute,1,0.07130725,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
105,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2933,2944,IdentifierMutator-Variable,attributeKey,attr,2,0.04530645,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
106,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2933,2944,IdentifierMutator-Variable,attributeKey,Key,3,0.01781133,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
107,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2933,2944,IdentifierMutator-Variable,attributeKey,name,4,0.010350233,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
108,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2947,2960,IdentifierMutator-Variable,attributeValue,value,0,0.7670979,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
109,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2947,2960,IdentifierMutator-Variable,attributeValue,attribute,1,0.17351753,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
110,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2947,2960,IdentifierMutator-Variable,attributeValue,Value,2,0.02680577,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
111,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2947,2960,IdentifierMutator-Variable,attributeValue,Attribute,3,0.006514622,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
112,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,94,2947,2960,IdentifierMutator-Variable,attributeValue,value,4,0.0034012697,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
113,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,95,2979,2982,IdentifierMutator-ThisAccess,this,node,0,0.37677994,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
114,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,95,2979,2982,IdentifierMutator-ThisAccess,this,null,2,0.036439702,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
115,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,95,2979,2982,IdentifierMutator-ThisAccess,this,true,3,0.026914654,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
116,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",93,95,2979,2982,IdentifierMutator-ThisAccess,this,attribute,4,0.023713397,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
117,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3235,3241,MethodCallMutator,notNull,name,0,0.26173,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        return attributes.hasKey(attributeKey);
    }"
118,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3235,3241,MethodCallMutator,notNull,string,1,0.11245235,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        return attributes.hasKey(attributeKey);
    }"
119,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3235,3241,MethodCallMutator,notNull,required,2,0.04002834,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        return attributes.hasKey(attributeKey);
    }"
120,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3235,3241,MethodCallMutator,notNull,text,3,0.02912921,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        return attributes.hasKey(attributeKey);
    }"
121,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3235,3241,MethodCallMutator,notNull,word,4,0.025790615,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        return attributes.hasKey(attributeKey);
    }"
122,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3243,3254,IdentifierMutator-Variable,attributeKey,attribute,0,0.632958,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);
        return attributes.hasKey(attributeKey);
    }"
123,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3243,3254,IdentifierMutator-Variable,attributeKey,attr,1,0.10808001,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);
        return attributes.hasKey(attributeKey);
    }"
124,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3243,3254,IdentifierMutator-Variable,attributeKey,name,2,0.026037741,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);
        return attributes.hasKey(attributeKey);
    }"
125,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3243,3254,IdentifierMutator-Variable,attributeKey,value,3,0.020751338,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);
        return attributes.hasKey(attributeKey);
    }"
126,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,104,3243,3254,IdentifierMutator-Variable,attributeKey,this,4,0.010941488,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);
        return attributes.hasKey(attributeKey);
    }"
127,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3284,3289,MethodCallMutator,hasKey,get,0,0.80610937,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.<mask>(attributeKey);
    }"
128,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3284,3289,MethodCallMutator,hasKey,has,1,0.1618038,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.<mask>(attributeKey);
    }"
129,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3284,3289,MethodCallMutator,hasKey,contains,2,0.013994533,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.<mask>(attributeKey);
    }"
130,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3284,3289,MethodCallMutator,hasKey,key,3,0.0072400374,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.<mask>(attributeKey);
    }"
131,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3284,3289,MethodCallMutator,hasKey,get,4,0.0025423989,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.<mask>(attributeKey);
    }"
132,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,IdentifierMutator-Variable,attributes,attribute,1,0.024753079,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
133,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,IdentifierMutator-Variable,attributes,node,2,0.014260066,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
134,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,IdentifierMutator-Variable,attributes,model,3,0.011525917,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
135,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,IdentifierMutator-Variable,attributes,map,4,0.009774076,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
136,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,FieldReferenceMutator,attributes,attribute,1,0.024753079,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
137,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,FieldReferenceMutator,attributes,node,2,0.014260066,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
138,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,FieldReferenceMutator,attributes,model,3,0.011525917,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
139,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3273,3282,FieldReferenceMutator,attributes,map,4,0.009774076,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return<mask>.hasKey(attributeKey);
    }"
140,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3291,3302,IdentifierMutator-Variable,attributeKey,key,0,0.8310561,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.hasKey(<mask>);
    }"
141,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3291,3302,IdentifierMutator-Variable,attributeKey,attribute,1,0.06495122,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.hasKey(<mask>);
    }"
142,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3291,3302,IdentifierMutator-Variable,attributeKey,name,2,0.040620323,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.hasKey(<mask>);
    }"
143,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3291,3302,IdentifierMutator-Variable,attributeKey,attr,3,0.025199372,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.hasKey(<mask>);
    }"
144,Node.java,hasAttr,boolean hasAttr(String attributeKey),103,105,3291,3302,IdentifierMutator-Variable,attributeKey,Key,4,0.0074115205,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        return attributes.hasKey(<mask>);
    }"
145,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3529,3535,MethodCallMutator,notNull,name,0,0.20177382,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
146,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3529,3535,MethodCallMutator,notNull,valid,1,0.054696407,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
147,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3529,3535,MethodCallMutator,notNull,required,2,0.049006265,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
148,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3529,3535,MethodCallMutator,notNull,ok,3,0.044882797,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
149,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3529,3535,MethodCallMutator,notNull,string,4,0.041588537,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
150,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3537,3548,IdentifierMutator-Variable,attributeKey,attribute,0,0.6743974,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
151,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3537,3548,IdentifierMutator-Variable,attributeKey,attr,1,0.13766599,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
152,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3537,3548,IdentifierMutator-Variable,attributeKey,this,2,0.024283087,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
153,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3537,3548,IdentifierMutator-Variable,attributeKey,name,3,0.019086098,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
154,Node.java,removeAttr,Node removeAttr(String attributeKey),113,114,3537,3548,IdentifierMutator-Variable,attributeKey,Attributes,4,0.013696793,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
155,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3571,3576,MethodCallMutator,remove,delete,1,0.00938854,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
156,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3571,3576,MethodCallMutator,remove,add,2,0.002851549,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
157,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3571,3576,MethodCallMutator,remove,clear,3,0.0010401283,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
158,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3571,3576,MethodCallMutator,remove,Remove,4,7.3663634E-4,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
159,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,IdentifierMutator-Variable,attributes,attribute,1,0.012441661,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
160,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,IdentifierMutator-Variable,attributes,nodes,2,0.0032105495,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
161,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,IdentifierMutator-Variable,attributes,names,3,0.0022383237,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
162,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,IdentifierMutator-Variable,attributes,Attributes,4,0.0017424868,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
163,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,FieldReferenceMutator,attributes,attribute,1,0.012441661,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
164,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,FieldReferenceMutator,attributes,nodes,2,0.0032105495,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
165,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,FieldReferenceMutator,attributes,names,3,0.0022383237,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
166,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3560,3569,FieldReferenceMutator,attributes,Attributes,4,0.0017424868,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
167,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3578,3589,IdentifierMutator-Variable,attributeKey,key,0,0.417647,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
168,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3578,3589,IdentifierMutator-Variable,attributeKey,attribute,1,0.38262483,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
169,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3578,3589,IdentifierMutator-Variable,attributeKey,attr,2,0.08098928,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
170,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3578,3589,IdentifierMutator-Variable,attributeKey,this,3,0.030833017,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
171,Node.java,removeAttr,Node removeAttr(String attributeKey),113,115,3578,3589,IdentifierMutator-Variable,attributeKey,Attribute,4,0.019794991,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
172,Node.java,removeAttr,Node removeAttr(String attributeKey),113,116,3608,3611,IdentifierMutator-ThisAccess,this,node,1,0.15996777,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
173,Node.java,removeAttr,Node removeAttr(String attributeKey),113,116,3608,3611,IdentifierMutator-ThisAccess,this,myself,2,0.027519919,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
174,Node.java,removeAttr,Node removeAttr(String attributeKey),113,116,3608,3611,IdentifierMutator-ThisAccess,this,null,3,0.02230349,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
175,Node.java,removeAttr,Node removeAttr(String attributeKey),113,116,3608,3611,IdentifierMutator-ThisAccess,this,self,4,0.015511654,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
176,Node.java,baseUri,String baseUri(),123,124,3740,3746,IdentifierMutator-Variable,baseUri,"""""",0,0.23708415,<mask>,"String baseUri() {
        return<mask>;
    }"
177,Node.java,baseUri,String baseUri(),123,124,3740,3746,IdentifierMutator-Variable,baseUri,base,1,0.17537747,<mask>,"String baseUri() {
        return<mask>;
    }"
178,Node.java,baseUri,String baseUri(),123,124,3740,3746,IdentifierMutator-Variable,baseUri,url,2,0.091050595,<mask>,"String baseUri() {
        return<mask>;
    }"
179,Node.java,baseUri,String baseUri(),123,124,3740,3746,IdentifierMutator-Variable,baseUri,path,3,0.06443002,<mask>,"String baseUri() {
        return<mask>;
    }"
180,Node.java,baseUri,String baseUri(),123,124,3740,3746,IdentifierMutator-Variable,baseUri,null,4,0.061412632,<mask>,"String baseUri() {
        return<mask>;
    }"
181,Node.java,baseUri,String baseUri(),123,124,3740,3746,FieldReferenceMutator,baseUri,"""""",0,0.23708415,<mask>,"String baseUri() {
        return<mask>;
    }"
182,Node.java,baseUri,String baseUri(),123,124,3740,3746,FieldReferenceMutator,baseUri,base,1,0.17537747,<mask>,"String baseUri() {
        return<mask>;
    }"
183,Node.java,baseUri,String baseUri(),123,124,3740,3746,FieldReferenceMutator,baseUri,url,2,0.091050595,<mask>,"String baseUri() {
        return<mask>;
    }"
184,Node.java,baseUri,String baseUri(),123,124,3740,3746,FieldReferenceMutator,baseUri,path,3,0.06443002,<mask>,"String baseUri() {
        return<mask>;
    }"
185,Node.java,baseUri,String baseUri(),123,124,3740,3746,FieldReferenceMutator,baseUri,null,4,0.061412632,<mask>,"String baseUri() {
        return<mask>;
    }"
186,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3909,3915,MethodCallMutator,notNull,string,0,0.19775833,Validate.<mask>(baseUri),"void setBaseUri(String baseUri) {
        Validate.<mask>(baseUri);
        this.baseUri = baseUri;
    }"
187,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3909,3915,MethodCallMutator,notNull,validate,1,0.07671781,Validate.<mask>(baseUri),"void setBaseUri(String baseUri) {
        Validate.<mask>(baseUri);
        this.baseUri = baseUri;
    }"
188,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3909,3915,MethodCallMutator,notNull,String,2,0.0741096,Validate.<mask>(baseUri),"void setBaseUri(String baseUri) {
        Validate.<mask>(baseUri);
        this.baseUri = baseUri;
    }"
189,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3909,3915,MethodCallMutator,notNull,valid,3,0.07399667,Validate.<mask>(baseUri),"void setBaseUri(String baseUri) {
        Validate.<mask>(baseUri);
        this.baseUri = baseUri;
    }"
190,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3909,3915,MethodCallMutator,notNull,Null,4,0.065846466,Validate.<mask>(baseUri),"void setBaseUri(String baseUri) {
        Validate.<mask>(baseUri);
        this.baseUri = baseUri;
    }"
191,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3917,3923,IdentifierMutator-Variable,baseUri,this,0,0.46576622,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(<mask>);
        this.baseUri = baseUri;
    }"
192,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3917,3923,IdentifierMutator-Variable,baseUri,resource,1,0.07690572,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(<mask>);
        this.baseUri = baseUri;
    }"
193,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3917,3923,IdentifierMutator-Variable,baseUri,uri,2,0.06163175,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(<mask>);
        this.baseUri = baseUri;
    }"
194,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3917,3923,IdentifierMutator-Variable,baseUri,context,3,0.03856404,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(<mask>);
        this.baseUri = baseUri;
    }"
195,Node.java,setBaseUri,void setBaseUri(String baseUri),131,132,3917,3923,IdentifierMutator-Variable,baseUri,request,4,0.034114342,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(<mask>);
        this.baseUri = baseUri;
    }"
196,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3947,3947,AssignmentMutator,this.baseUri=baseUri,*,0,0.355338,this.baseUri <mask>= baseUri,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri<mask>= baseUri;
    }"
197,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3947,3947,AssignmentMutator,this.baseUri=baseUri,|,1,0.27205607,this.baseUri <mask>= baseUri,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri<mask>= baseUri;
    }"
198,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3947,3947,AssignmentMutator,this.baseUri=baseUri,,2,0.101608366,this.baseUri <mask>= baseUri,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri<mask>= baseUri;
    }"
199,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3947,3947,AssignmentMutator,this.baseUri=baseUri,^,3,0.06472901,this.baseUri <mask>= baseUri,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri<mask>= baseUri;
    }"
200,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3947,3947,AssignmentMutator,this.baseUri=baseUri,/,4,0.022565547,this.baseUri <mask>= baseUri,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri<mask>= baseUri;
    }"
201,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3946,IdentifierMutator-Variable,this.baseUri,base,0,0.24832614,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask> = baseUri;
    }"
202,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3946,IdentifierMutator-Variable,this.baseUri,url,1,0.2072337,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask> = baseUri;
    }"
203,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3946,IdentifierMutator-Variable,this.baseUri,path,2,0.07957246,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask> = baseUri;
    }"
204,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3946,IdentifierMutator-Variable,this.baseUri,URI,3,0.06046918,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask> = baseUri;
    }"
205,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3946,IdentifierMutator-Variable,this.baseUri,prefix,4,0.053841624,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask> = baseUri;
    }"
206,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3938,IdentifierMutator-ThisAccess,this,super,2,8.807396E-4,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask>.baseUri = baseUri;
    }"
207,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3938,IdentifierMutator-ThisAccess,this,config,3,7.20367E-4,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask>.baseUri = baseUri;
    }"
208,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3935,3938,IdentifierMutator-ThisAccess,this,m,4,4.8750697E-4,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);<mask>.baseUri = baseUri;
    }"
209,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3940,3946,FieldReferenceMutator,baseUri,uri,0,0.6727599,this.<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.<mask> = baseUri;
    }"
210,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3940,3946,FieldReferenceMutator,baseUri,base,1,0.19396228,this.<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.<mask> = baseUri;
    }"
211,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3940,3946,FieldReferenceMutator,baseUri,url,2,0.0344557,this.<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.<mask> = baseUri;
    }"
212,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3940,3946,FieldReferenceMutator,baseUri,iri,3,0.018354306,this.<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.<mask> = baseUri;
    }"
213,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3940,3946,FieldReferenceMutator,baseUri,prefix,4,0.011216723,this.<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.<mask> = baseUri;
    }"
214,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3950,3956,IdentifierMutator-Variable,baseUri,null,0,0.28559914,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri =<mask>;
    }"
215,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3950,3956,IdentifierMutator-Variable,baseUri,url,1,0.17343324,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri =<mask>;
    }"
216,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3950,3956,IdentifierMutator-Variable,baseUri,value,2,0.05811004,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri =<mask>;
    }"
217,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3950,3956,IdentifierMutator-Variable,baseUri,"""""",3,0.03291337,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri =<mask>;
    }"
218,Node.java,setBaseUri,void setBaseUri(String baseUri),131,133,3950,3956,IdentifierMutator-Variable,baseUri,base,4,0.029519675,<mask>,"void setBaseUri(String baseUri) {
        Validate.notNull(baseUri);
        this.baseUri =<mask>;
    }"
219,Node.java,absUrl,String absUrl(String attributeKey),156,157,5080,5087,MethodCallMutator,notEmpty,name,0,0.13516647,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
220,Node.java,absUrl,String absUrl(String attributeKey),156,157,5080,5087,MethodCallMutator,notEmpty,url,1,0.07606921,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
221,Node.java,absUrl,String absUrl(String attributeKey),156,157,5080,5087,MethodCallMutator,notEmpty,abs,2,0.07534348,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
222,Node.java,absUrl,String absUrl(String attributeKey),156,157,5080,5087,MethodCallMutator,notEmpty,string,3,0.063115455,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
223,Node.java,absUrl,String absUrl(String attributeKey),156,157,5080,5087,MethodCallMutator,notEmpty,required,4,0.040112738,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
224,Node.java,absUrl,String absUrl(String attributeKey),156,157,5089,5100,IdentifierMutator-Variable,attributeKey,attr,0,0.32784235,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
225,Node.java,absUrl,String absUrl(String attributeKey),156,157,5089,5100,IdentifierMutator-Variable,attributeKey,attribute,1,0.2710366,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
226,Node.java,absUrl,String absUrl(String attributeKey),156,157,5089,5100,IdentifierMutator-Variable,attributeKey,base,2,0.12776467,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
227,Node.java,absUrl,String absUrl(String attributeKey),156,157,5089,5100,IdentifierMutator-Variable,attributeKey,url,3,0.07041652,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
228,Node.java,absUrl,String absUrl(String attributeKey),156,157,5089,5100,IdentifierMutator-Variable,attributeKey,key,4,0.03425699,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
229,Node.java,absUrl,String absUrl(String attributeKey),156,159,5129,5132,MethodCallMutator,attr,url,0,0.22056952,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
230,Node.java,absUrl,String absUrl(String attributeKey),156,159,5129,5132,MethodCallMutator,attr,get,1,0.099910155,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
231,Node.java,absUrl,String absUrl(String attributeKey),156,159,5129,5132,MethodCallMutator,attr,rel,2,0.09569656,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
232,Node.java,absUrl,String absUrl(String attributeKey),156,159,5129,5132,MethodCallMutator,attr,attribute,3,0.0567507,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
233,Node.java,absUrl,String absUrl(String attributeKey),156,159,5129,5132,MethodCallMutator,attr,href,4,0.026253486,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
234,Node.java,absUrl,String absUrl(String attributeKey),156,159,5134,5145,IdentifierMutator-Variable,attributeKey,key,0,0.42939982,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
235,Node.java,absUrl,String absUrl(String attributeKey),156,159,5134,5145,IdentifierMutator-Variable,attributeKey,attribute,1,0.22947627,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
236,Node.java,absUrl,String absUrl(String attributeKey),156,159,5134,5145,IdentifierMutator-Variable,attributeKey,attr,2,0.122687206,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
237,Node.java,absUrl,String absUrl(String attributeKey),156,159,5134,5145,IdentifierMutator-Variable,attributeKey,true,3,0.028578712,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
238,Node.java,absUrl,String absUrl(String attributeKey),156,159,5134,5145,IdentifierMutator-Variable,attributeKey,name,4,0.022714164,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
239,Node.java,absUrl,String absUrl(String attributeKey),156,160,5161,5161,UnaryOperatorMutator,!,.,2,0.026860831,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
240,Node.java,absUrl,String absUrl(String attributeKey),156,160,5161,5161,UnaryOperatorMutator,!,...,3,0.013722415,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
241,Node.java,absUrl,String absUrl(String attributeKey),156,160,5161,5161,UnaryOperatorMutator,!,un,4,0.0135322595,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
242,Node.java,absUrl,String absUrl(String attributeKey),156,160,5162,5168,MethodCallMutator,hasAttr,has,0,0.49968502,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
243,Node.java,absUrl,String absUrl(String attributeKey),156,160,5162,5168,MethodCallMutator,hasAttr,empty,1,0.13356632,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
244,Node.java,absUrl,String absUrl(String attributeKey),156,160,5162,5168,MethodCallMutator,hasAttr,abs,2,0.0754888,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
245,Node.java,absUrl,String absUrl(String attributeKey),156,160,5162,5168,MethodCallMutator,hasAttr,filter,3,0.01552441,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
246,Node.java,absUrl,String absUrl(String attributeKey),156,160,5162,5168,MethodCallMutator,hasAttr,optional,4,0.010733886,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
247,Node.java,absUrl,String absUrl(String attributeKey),156,160,5170,5181,IdentifierMutator-Variable,attributeKey,attribute,0,0.65460193,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
248,Node.java,absUrl,String absUrl(String attributeKey),156,160,5170,5181,IdentifierMutator-Variable,attributeKey,attr,1,0.19185503,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
249,Node.java,absUrl,String absUrl(String attributeKey),156,160,5170,5181,IdentifierMutator-Variable,attributeKey,key,2,0.020086406,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
250,Node.java,absUrl,String absUrl(String attributeKey),156,160,5170,5181,IdentifierMutator-Variable,attributeKey,url,3,0.018798843,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
251,Node.java,absUrl,String absUrl(String attributeKey),156,160,5170,5181,IdentifierMutator-Variable,attributeKey,name,4,0.015235329,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
252,Node.java,absUrl,String absUrl(String attributeKey),156,161,5206,5207,IdentifierMutator-Literal,"""""",null,1,0.22183514,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
253,Node.java,absUrl,String absUrl(String attributeKey),156,161,5206,5207,IdentifierMutator-Literal,"""""",url,2,0.045214437,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
254,Node.java,absUrl,String absUrl(String attributeKey),156,161,5206,5207,IdentifierMutator-Literal,"""""","''",3,0.013560632,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
255,Node.java,absUrl,String absUrl(String attributeKey),156,161,5206,5207,IdentifierMutator-Literal,"""""",false,4,0.0047650216,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
256,Node.java,absUrl,String absUrl(String attributeKey),156,166,5346,5346,AssignmentMutator,base=newjava.net.URL(baseUri),||,0,0.34099576,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
257,Node.java,absUrl,String absUrl(String attributeKey),156,166,5346,5346,AssignmentMutator,base=newjava.net.URL(baseUri),|,1,0.10138489,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
258,Node.java,absUrl,String absUrl(String attributeKey),156,166,5346,5346,AssignmentMutator,base=newjava.net.URL(baseUri),//,2,0.066043414,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
259,Node.java,absUrl,String absUrl(String attributeKey),156,166,5346,5346,AssignmentMutator,base=newjava.net.URL(baseUri),,3,0.062498838,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
260,Node.java,absUrl,String absUrl(String attributeKey),156,166,5346,5346,AssignmentMutator,base=newjava.net.URL(baseUri),*,4,0.05796184,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
261,Node.java,absUrl,String absUrl(String attributeKey),156,166,5342,5345,IdentifierMutator-Variable,base,url,2,0.0046901065,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
262,Node.java,absUrl,String absUrl(String attributeKey),156,166,5342,5345,IdentifierMutator-Variable,base,abs,3,0.0010097974,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
263,Node.java,absUrl,String absUrl(String attributeKey),156,166,5342,5345,IdentifierMutator-Variable,base,Base,4,2.8928005E-4,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
264,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,IdentifierMutator-Variable,baseUri,base,0,0.8831686,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
265,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,IdentifierMutator-Variable,baseUri,url,1,0.081878416,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
266,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,IdentifierMutator-Variable,baseUri,absolute,2,0.003556409,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
267,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,IdentifierMutator-Variable,baseUri,href,3,0.003037725,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
268,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,IdentifierMutator-Variable,baseUri,attribute,4,0.0024976449,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
269,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,FieldReferenceMutator,baseUri,base,0,0.8831686,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
270,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,FieldReferenceMutator,baseUri,url,1,0.081878416,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
271,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,FieldReferenceMutator,baseUri,absolute,2,0.003556409,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
272,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,FieldReferenceMutator,baseUri,href,3,0.003037725,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
273,Node.java,absUrl,String absUrl(String attributeKey),156,166,5357,5363,FieldReferenceMutator,baseUri,attribute,4,0.0024976449,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
274,Node.java,absUrl,String absUrl(String attributeKey),156,169,5557,5562,IdentifierMutator-Variable,relUrl,base,0,0.9963877,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
275,Node.java,absUrl,String absUrl(String attributeKey),156,169,5557,5562,IdentifierMutator-Variable,relUrl,url,1,0.0011549887,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
276,Node.java,absUrl,String absUrl(String attributeKey),156,169,5557,5562,IdentifierMutator-Variable,relUrl,absolute,2,4.946186E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
277,Node.java,absUrl,String absUrl(String attributeKey),156,169,5557,5562,IdentifierMutator-Variable,relUrl,relative,3,1.7767579E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
278,Node.java,absUrl,String absUrl(String attributeKey),156,169,5557,5562,IdentifierMutator-Variable,relUrl,href,4,1.5192402E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
279,Node.java,absUrl,String absUrl(String attributeKey),156,170,5597,5610,MethodCallMutator,toExternalForm,url,0,0.3038324,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
280,Node.java,absUrl,String absUrl(String attributeKey),156,170,5597,5610,MethodCallMutator,toExternalForm,build,1,0.12235545,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
281,Node.java,absUrl,String absUrl(String attributeKey),156,170,5597,5610,MethodCallMutator,toExternalForm,external,2,0.076216206,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
282,Node.java,absUrl,String absUrl(String attributeKey),156,170,5597,5610,MethodCallMutator,toExternalForm,absolute,3,0.06183878,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
283,Node.java,absUrl,String absUrl(String attributeKey),156,170,5597,5610,MethodCallMutator,toExternalForm,abs,4,0.031665042,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
284,Node.java,absUrl,String absUrl(String attributeKey),156,170,5593,5595,IdentifierMutator-Variable,abs,base,1,0.0027152875,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
285,Node.java,absUrl,String absUrl(String attributeKey),156,170,5593,5595,IdentifierMutator-Variable,abs,absolute,2,2.84188E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
286,Node.java,absUrl,String absUrl(String attributeKey),156,170,5593,5595,IdentifierMutator-Variable,abs,res,3,2.458563E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
287,Node.java,absUrl,String absUrl(String attributeKey),156,170,5593,5595,IdentifierMutator-Variable,abs,rel,4,2.2421897E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
288,Node.java,absUrl,String absUrl(String attributeKey),156,172,5667,5670,IdentifierMutator-Variable,base,Base,2,4.1595305E-4,<mask>," nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
289,Node.java,absUrl,String absUrl(String attributeKey),156,172,5667,5670,IdentifierMutator-Variable,base,url,3,3.3469524E-4,<mask>," nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
290,Node.java,absUrl,String absUrl(String attributeKey),156,172,5667,5670,IdentifierMutator-Variable,base,absolute,4,2.0072458E-4,<mask>," nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
291,Node.java,absUrl,String absUrl(String attributeKey),156,172,5673,5678,IdentifierMutator-Variable,relUrl,rel,0,0.24243623,<mask>," make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
292,Node.java,absUrl,String absUrl(String attributeKey),156,172,5673,5678,IdentifierMutator-Variable,relUrl,url,1,0.08762206,<mask>," make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
293,Node.java,absUrl,String absUrl(String attributeKey),156,172,5673,5678,IdentifierMutator-Variable,relUrl,attribute,2,0.06682643,<mask>," make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
294,Node.java,absUrl,String absUrl(String attributeKey),156,172,5673,5678,IdentifierMutator-Variable,relUrl,url,3,0.041967496,<mask>," make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
295,Node.java,absUrl,String absUrl(String attributeKey),156,172,5673,5678,IdentifierMutator-Variable,relUrl,rel,4,0.03908467,<mask>," make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
296,Node.java,absUrl,String absUrl(String attributeKey),156,173,5709,5722,MethodCallMutator,toExternalForm,url,0,0.27823624,abs.<mask>(),"     URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
297,Node.java,absUrl,String absUrl(String attributeKey),156,173,5709,5722,MethodCallMutator,toExternalForm,build,1,0.13764422,abs.<mask>(),"     URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
298,Node.java,absUrl,String absUrl(String attributeKey),156,173,5709,5722,MethodCallMutator,toExternalForm,external,2,0.08248354,abs.<mask>(),"     URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
299,Node.java,absUrl,String absUrl(String attributeKey),156,173,5709,5722,MethodCallMutator,toExternalForm,format,3,0.039680947,abs.<mask>(),"     URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
300,Node.java,absUrl,String absUrl(String attributeKey),156,173,5709,5722,MethodCallMutator,toExternalForm,get,4,0.034816053,abs.<mask>(),"     URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
301,Node.java,absUrl,String absUrl(String attributeKey),156,173,5705,5707,IdentifierMutator-Variable,abs,base,1,0.0036911257,<mask>,"       URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
302,Node.java,absUrl,String absUrl(String attributeKey),156,173,5705,5707,IdentifierMutator-Variable,abs,url,2,3.9593028E-4,<mask>,"       URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
303,Node.java,absUrl,String absUrl(String attributeKey),156,173,5705,5707,IdentifierMutator-Variable,abs,res,3,3.6207255E-4,<mask>,"       URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
304,Node.java,absUrl,String absUrl(String attributeKey),156,173,5705,5707,IdentifierMutator-Variable,abs,rel,4,2.977785E-4,<mask>,"       URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
    }"
305,Node.java,absUrl,String absUrl(String attributeKey),156,175,5798,5799,IdentifierMutator-Literal,"""""",null,0,0.49918416,<mask>,"               base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
    }"
306,Node.java,absUrl,String absUrl(String attributeKey),156,175,5798,5799,IdentifierMutator-Literal,"""""",url,2,0.15649751,<mask>,"               base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
    }"
307,Node.java,absUrl,String absUrl(String attributeKey),156,175,5798,5799,IdentifierMutator-Literal,"""""",base,3,0.040898424,<mask>,"               base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
    }"
308,Node.java,absUrl,String absUrl(String attributeKey),156,175,5798,5799,IdentifierMutator-Literal,"""""","''",4,0.024777329,<mask>,"               base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
    }"
309,Node.java,childNode,Node childNode(int index),185,186,6026,6028,MethodCallMutator,get,item,1,0.046622567,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
310,Node.java,childNode,Node childNode(int index),185,186,6026,6028,MethodCallMutator,get,column,2,0.006246263,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
311,Node.java,childNode,Node childNode(int index),185,186,6026,6028,MethodCallMutator,get,child,3,0.0046897237,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
312,Node.java,childNode,Node childNode(int index),185,186,6026,6028,MethodCallMutator,get,remove,4,0.0041810037,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
313,Node.java,childNode,Node childNode(int index),185,186,6015,6024,IdentifierMutator-Variable,childNodes,children,0,0.80395085,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
314,Node.java,childNode,Node childNode(int index),185,186,6015,6024,IdentifierMutator-Variable,childNodes,nodes,1,0.08626561,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
315,Node.java,childNode,Node childNode(int index),185,186,6015,6024,IdentifierMutator-Variable,childNodes,child,2,0.02589042,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
316,Node.java,childNode,Node childNode(int index),185,186,6015,6024,IdentifierMutator-Variable,childNodes,list,3,0.009000036,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
317,Node.java,childNode,Node childNode(int index),185,186,6015,6024,IdentifierMutator-Variable,childNodes,node,4,0.008922574,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
318,Node.java,childNode,Node childNode(int index),185,186,6015,6024,FieldReferenceMutator,childNodes,children,0,0.80395085,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
319,Node.java,childNode,Node childNode(int index),185,186,6015,6024,FieldReferenceMutator,childNodes,nodes,1,0.08626561,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
320,Node.java,childNode,Node childNode(int index),185,186,6015,6024,FieldReferenceMutator,childNodes,child,2,0.02589042,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
321,Node.java,childNode,Node childNode(int index),185,186,6015,6024,FieldReferenceMutator,childNodes,list,3,0.009000036,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
322,Node.java,childNode,Node childNode(int index),185,186,6015,6024,FieldReferenceMutator,childNodes,node,4,0.008922574,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
323,Node.java,childNode,Node childNode(int index),185,186,6030,6034,IdentifierMutator-Variable,index,Index,2,4.137334E-4,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
324,Node.java,childNode,Node childNode(int index),185,186,6030,6034,IdentifierMutator-Variable,index,0,3,1.5204703E-4,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
325,Node.java,childNode,Node childNode(int index),185,186,6030,6034,IdentifierMutator-Variable,index,i,4,4.3733864E-5,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
326,Node.java,childNodes,List<Node> childNodes(),194,195,6348,6363,MethodCallMutator,unmodifiableList,list,0,0.45148128,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
327,Node.java,childNodes,List<Node> childNodes(),194,195,6348,6363,MethodCallMutator,unmodifiableList,List,1,0.4093461,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
328,Node.java,childNodes,List<Node> childNodes(),194,195,6348,6363,MethodCallMutator,unmodifiableList,lists,2,0.08844107,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
329,Node.java,childNodes,List<Node> childNodes(),194,195,6348,6363,MethodCallMutator,unmodifiableList,reverse,3,0.0053996546,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
330,Node.java,childNodes,List<Node> childNodes(),194,195,6348,6363,MethodCallMutator,unmodifiableList,filter,4,0.004985166,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
331,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,IdentifierMutator-Variable,childNodes,children,0,0.5956141,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
332,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,IdentifierMutator-Variable,childNodes,list,1,0.17415245,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
333,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,IdentifierMutator-Variable,childNodes,result,2,0.030072838,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
334,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,IdentifierMutator-Variable,childNodes,node,3,0.02569763,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
335,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,IdentifierMutator-Variable,childNodes,this,4,0.017828498,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
336,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,FieldReferenceMutator,childNodes,children,0,0.5956141,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
337,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,FieldReferenceMutator,childNodes,list,1,0.17415245,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
338,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,FieldReferenceMutator,childNodes,result,2,0.030072838,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
339,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,FieldReferenceMutator,childNodes,node,3,0.02569763,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
340,Node.java,childNodes,List<Node> childNodes(),194,195,6365,6374,FieldReferenceMutator,childNodes,this,4,0.017828498,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
341,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6458,6464,MethodCallMutator,toArray,slice,0,0.2620747,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
342,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6458,6464,MethodCallMutator,toArray,Array,1,0.24654038,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
343,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6458,6464,MethodCallMutator,toArray,map,2,0.08302289,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
344,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6458,6464,MethodCallMutator,toArray,values,3,0.060818866,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
345,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6458,6464,MethodCallMutator,toArray,get,4,0.04775904,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
346,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,IdentifierMutator-Variable,childNodes,children,0,0.37280458,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
347,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,IdentifierMutator-Variable,childNodes,nodes,1,0.29602855,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
348,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,IdentifierMutator-Variable,childNodes,child,2,0.09056759,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
349,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,IdentifierMutator-Variable,childNodes,node,3,0.08395526,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
350,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,IdentifierMutator-Variable,childNodes,array,4,0.029694706,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
351,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,FieldReferenceMutator,childNodes,children,0,0.37280458,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
352,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,FieldReferenceMutator,childNodes,nodes,1,0.29602855,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
353,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,FieldReferenceMutator,childNodes,child,2,0.09056759,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
354,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,FieldReferenceMutator,childNodes,node,3,0.08395526,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
355,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6447,6456,FieldReferenceMutator,childNodes,array,4,0.029694706,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
356,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6488,6491,MethodCallMutator,size,length,1,0.011698059,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
357,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6488,6491,MethodCallMutator,size,count,2,0.001115053,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
358,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6488,6491,MethodCallMutator,size,shape,3,6.865843E-4,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
359,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6475,6484,MethodCallMutator,childNodes,children,0,0.28643596,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
360,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6475,6484,MethodCallMutator,childNodes,Array,1,0.19626264,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
361,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6475,6484,MethodCallMutator,childNodes,values,2,0.0865222,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
362,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6475,6484,MethodCallMutator,childNodes,Children,3,0.07149817,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
363,Node.java,childNodesAsArray,Node[] childNodesAsArray(),198,199,6475,6484,MethodCallMutator,childNodes,List,4,0.06745306,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
364,Node.java,parent,Node parent(),206,207,6646,6655,IdentifierMutator-Variable,parentNode,parent,0,0.6362043,<mask>,"Node parent() {
        return<mask>;
    }"
365,Node.java,parent,Node parent(),206,207,6646,6655,IdentifierMutator-Variable,parentNode,node,1,0.107871704,<mask>,"Node parent() {
        return<mask>;
    }"
366,Node.java,parent,Node parent(),206,207,6646,6655,IdentifierMutator-Variable,parentNode,null,2,0.10147042,<mask>,"Node parent() {
        return<mask>;
    }"
367,Node.java,parent,Node parent(),206,207,6646,6655,IdentifierMutator-Variable,parentNode,this,3,0.08596264,<mask>,"Node parent() {
        return<mask>;
    }"
368,Node.java,parent,Node parent(),206,207,6646,6655,IdentifierMutator-Variable,parentNode,root,4,0.009199268,<mask>,"Node parent() {
        return<mask>;
    }"
369,Node.java,parent,Node parent(),206,207,6646,6655,FieldReferenceMutator,parentNode,parent,0,0.6362043,<mask>,"Node parent() {
        return<mask>;
    }"
370,Node.java,parent,Node parent(),206,207,6646,6655,FieldReferenceMutator,parentNode,node,1,0.107871704,<mask>,"Node parent() {
        return<mask>;
    }"
371,Node.java,parent,Node parent(),206,207,6646,6655,FieldReferenceMutator,parentNode,null,2,0.10147042,<mask>,"Node parent() {
        return<mask>;
    }"
372,Node.java,parent,Node parent(),206,207,6646,6655,FieldReferenceMutator,parentNode,this,3,0.08596264,<mask>,"Node parent() {
        return<mask>;
    }"
373,Node.java,parent,Node parent(),206,207,6646,6655,FieldReferenceMutator,parentNode,root,4,0.009199268,<mask>,"Node parent() {
        return<mask>;
    }"
374,Node.java,ownerDocument,Document ownerDocument(),214,215,6885,6896,BinaryOperatorMutator,instanceof,==,0,0.5292728,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
375,Node.java,ownerDocument,Document ownerDocument(),214,215,6885,6896,BinaryOperatorMutator,instanceof,==,1,0.21057475,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
376,Node.java,ownerDocument,Document ownerDocument(),214,215,6885,6896,BinaryOperatorMutator,instanceof,!=,2,0.10551761,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
377,Node.java,ownerDocument,Document ownerDocument(),214,215,6885,6896,BinaryOperatorMutator,instanceof,is,3,0.041339185,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
378,Node.java,ownerDocument,Document ownerDocument(),214,215,6885,6896,BinaryOperatorMutator,instanceof,===,4,0.022689214,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
379,Node.java,ownerDocument,Document ownerDocument(),214,215,6881,6884,IdentifierMutator-ThisAccess,this,parent,1,0.0014528185,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
380,Node.java,ownerDocument,Document ownerDocument(),214,215,6881,6884,IdentifierMutator-ThisAccess,this,This,2,2.0815735E-4,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
381,Node.java,ownerDocument,Document ownerDocument(),214,215,6881,6884,IdentifierMutator-ThisAccess,this,document,4,1.3590319E-4,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
382,Node.java,ownerDocument,Document ownerDocument(),214,215,6897,6904,TypeReferenceMutator,org.jsoup.nodes.Document,Document,0,0.9991411,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
383,Node.java,ownerDocument,Document ownerDocument(),214,215,6897,6904,TypeReferenceMutator,org.jsoup.nodes.Document,Document,1,6.725906E-4,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
384,Node.java,ownerDocument,Document ownerDocument(),214,215,6897,6904,TypeReferenceMutator,org.jsoup.nodes.Document,document,2,4.77007E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
385,Node.java,ownerDocument,Document ownerDocument(),214,215,6897,6904,TypeReferenceMutator,org.jsoup.nodes.Document,Node,3,3.18289E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
386,Node.java,ownerDocument,Document ownerDocument(),214,215,6897,6904,TypeReferenceMutator,org.jsoup.nodes.Document,Element,4,3.0252768E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
387,Node.java,ownerDocument,Document ownerDocument(),214,216,6926,6940,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),this,0,0.9238433,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
388,Node.java,ownerDocument,Document ownerDocument(),214,216,6926,6940,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),document,1,0.040102568,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
389,Node.java,ownerDocument,Document ownerDocument(),214,216,6926,6940,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),parent,2,0.0100561315,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
390,Node.java,ownerDocument,Document ownerDocument(),214,216,6926,6940,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),null,3,0.008672474,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
391,Node.java,ownerDocument,Document ownerDocument(),214,216,6926,6940,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),doc,4,0.0028350367,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
392,Node.java,ownerDocument,Document ownerDocument(),214,217,6970,6973,BinaryOperatorMutator,==,=,2,0.014727041,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
393,Node.java,ownerDocument,Document ownerDocument(),214,217,6970,6973,BinaryOperatorMutator,==,===,3,0.013192903,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
394,Node.java,ownerDocument,Document ownerDocument(),214,217,6970,6973,BinaryOperatorMutator,==,!=,4,0.0053720674,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
395,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,IdentifierMutator-Variable,parentNode,this,0,0.8005388,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
396,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,IdentifierMutator-Variable,parentNode,parent,1,0.1384563,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
397,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,IdentifierMutator-Variable,parentNode,document,2,0.011334877,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
398,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,IdentifierMutator-Variable,parentNode,node,3,0.007742833,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
399,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,IdentifierMutator-Variable,parentNode,null,4,0.004431924,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
400,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,FieldReferenceMutator,parentNode,this,0,0.8005388,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
401,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,FieldReferenceMutator,parentNode,parent,1,0.1384563,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
402,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,FieldReferenceMutator,parentNode,document,2,0.011334877,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
403,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,FieldReferenceMutator,parentNode,node,3,0.007742833,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
404,Node.java,ownerDocument,Document ownerDocument(),214,217,6960,6969,FieldReferenceMutator,parentNode,null,4,0.004431924,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
405,Node.java,ownerDocument,Document ownerDocument(),214,217,6974,6977,IdentifierMutator-Literal,null,this,1,0.006002826,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
406,Node.java,ownerDocument,Document ownerDocument(),214,217,6974,6977,IdentifierMutator-Literal,null,document,2,0.001377035,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
407,Node.java,ownerDocument,Document ownerDocument(),214,217,6974,6977,IdentifierMutator-Literal,null,node,3,0.0012116093,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
408,Node.java,ownerDocument,Document ownerDocument(),214,218,6999,7002,IdentifierMutator-Literal,null,this,1,0.16422714,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
409,Node.java,ownerDocument,Document ownerDocument(),214,218,6999,7002,IdentifierMutator-Literal,null,parent,2,0.011523586,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
410,Node.java,ownerDocument,Document ownerDocument(),214,218,6999,7002,IdentifierMutator-Literal,null,document,3,0.007632549,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
411,Node.java,ownerDocument,Document ownerDocument(),214,218,6999,7002,IdentifierMutator-Literal,null,undefined,4,0.0044113477,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
412,Node.java,ownerDocument,Document ownerDocument(),214,220,7048,7060,MethodCallMutator,ownerDocument,clone,0,0.5835352,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
413,Node.java,ownerDocument,Document ownerDocument(),214,220,7048,7060,MethodCallMutator,ownerDocument,document,1,0.10633413,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
414,Node.java,ownerDocument,Document ownerDocument(),214,220,7048,7060,MethodCallMutator,ownerDocument,parent,2,0.09607331,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
415,Node.java,ownerDocument,Document ownerDocument(),214,220,7048,7060,MethodCallMutator,ownerDocument,owner,3,0.050673254,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
416,Node.java,ownerDocument,Document ownerDocument(),214,220,7048,7060,MethodCallMutator,ownerDocument,copy,4,0.025796205,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
417,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,IdentifierMutator-Variable,parentNode,this,0,0.38696137,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
418,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,IdentifierMutator-Variable,parentNode,node,1,0.20713063,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
419,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,IdentifierMutator-Variable,parentNode,parent,2,0.1490285,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
420,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,IdentifierMutator-Variable,parentNode,super,3,0.14571154,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
421,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,IdentifierMutator-Variable,parentNode,element,4,0.016727071,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
422,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,FieldReferenceMutator,parentNode,this,0,0.38696137,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
423,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,FieldReferenceMutator,parentNode,node,1,0.20713063,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
424,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,FieldReferenceMutator,parentNode,parent,2,0.1490285,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
425,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,FieldReferenceMutator,parentNode,super,3,0.14571154,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
426,Node.java,ownerDocument,Document ownerDocument(),214,220,7037,7046,FieldReferenceMutator,parentNode,element,4,0.016727071,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
427,Node.java,remove,void remove(),226,227,7238,7244,MethodCallMutator,notNull,null,0,0.16525409,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
428,Node.java,remove,void remove(),226,227,7238,7244,MethodCallMutator,notNull,valid,1,0.072494835,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
429,Node.java,remove,void remove(),226,227,7238,7244,MethodCallMutator,notNull,not,2,0.043082226,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
430,Node.java,remove,void remove(),226,227,7238,7244,MethodCallMutator,notNull,check,3,0.040549003,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
431,Node.java,remove,void remove(),226,227,7238,7244,MethodCallMutator,notNull,empty,4,0.03641666,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
432,Node.java,remove,void remove(),226,227,7246,7255,IdentifierMutator-Variable,parentNode,parent,0,0.4362268,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
433,Node.java,remove,void remove(),226,227,7246,7255,IdentifierMutator-Variable,parentNode,this,1,0.37577066,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
434,Node.java,remove,void remove(),226,227,7246,7255,IdentifierMutator-Variable,parentNode,node,2,0.04472695,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
435,Node.java,remove,void remove(),226,227,7246,7255,IdentifierMutator-Variable,parentNode,null,3,0.00867428,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
436,Node.java,remove,void remove(),226,227,7246,7255,IdentifierMutator-Variable,parentNode,self,4,0.008138837,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
437,Node.java,remove,void remove(),226,227,7246,7255,FieldReferenceMutator,parentNode,parent,0,0.4362268,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
438,Node.java,remove,void remove(),226,227,7246,7255,FieldReferenceMutator,parentNode,this,1,0.37577066,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
439,Node.java,remove,void remove(),226,227,7246,7255,FieldReferenceMutator,parentNode,node,2,0.04472695,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
440,Node.java,remove,void remove(),226,227,7246,7255,FieldReferenceMutator,parentNode,null,3,0.00867428,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
441,Node.java,remove,void remove(),226,227,7246,7255,FieldReferenceMutator,parentNode,self,4,0.008138837,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
442,Node.java,remove,void remove(),226,228,7278,7288,MethodCallMutator,removeChild,remove,0,0.88705325,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
443,Node.java,remove,void remove(),226,228,7278,7288,MethodCallMutator,removeChild,add,1,0.040177006,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
444,Node.java,remove,void remove(),226,228,7278,7288,MethodCallMutator,removeChild,delete,2,0.017636532,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
445,Node.java,remove,void remove(),226,228,7278,7288,MethodCallMutator,removeChild,append,3,0.0042702644,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
446,Node.java,remove,void remove(),226,228,7278,7288,MethodCallMutator,removeChild,Remove,4,0.004052949,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
447,Node.java,remove,void remove(),226,228,7267,7276,IdentifierMutator-Variable,parentNode,parent,0,0.8080943,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
448,Node.java,remove,void remove(),226,228,7267,7276,IdentifierMutator-Variable,parentNode,node,1,0.12179533,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
449,Node.java,remove,void remove(),226,228,7267,7276,IdentifierMutator-Variable,parentNode,container,2,0.008109275,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
450,Node.java,remove,void remove(),226,228,7267,7276,IdentifierMutator-Variable,parentNode,parent,3,0.0061676996,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
451,Node.java,remove,void remove(),226,228,7267,7276,IdentifierMutator-Variable,parentNode,root,4,0.0048444034,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
452,Node.java,remove,void remove(),226,228,7267,7276,FieldReferenceMutator,parentNode,parent,0,0.8080943,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
453,Node.java,remove,void remove(),226,228,7267,7276,FieldReferenceMutator,parentNode,node,1,0.12179533,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
454,Node.java,remove,void remove(),226,228,7267,7276,FieldReferenceMutator,parentNode,container,2,0.008109275,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
455,Node.java,remove,void remove(),226,228,7267,7276,FieldReferenceMutator,parentNode,parent,3,0.0061676996,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
456,Node.java,remove,void remove(),226,228,7267,7276,FieldReferenceMutator,parentNode,root,4,0.0048444034,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
457,Node.java,remove,void remove(),226,228,7290,7293,IdentifierMutator-ThisAccess,this,child,1,0.13750304,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
458,Node.java,remove,void remove(),226,228,7290,7293,IdentifierMutator-ThisAccess,this,node,2,0.13025331,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
459,Node.java,remove,void remove(),226,228,7290,7293,IdentifierMutator-ThisAccess,this,parent,3,0.026089497,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
460,Node.java,remove,void remove(),226,228,7290,7293,IdentifierMutator-ThisAccess,this,self,4,0.021735713,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
461,Node.java,replaceWith,void replaceWith(Node in),235,236,7508,7514,MethodCallMutator,notNull,null,0,0.41633207,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
462,Node.java,replaceWith,void replaceWith(Node in),235,236,7508,7514,MethodCallMutator,notNull,object,1,0.2543269,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
463,Node.java,replaceWith,void replaceWith(Node in),235,236,7508,7514,MethodCallMutator,notNull,node,2,0.12636189,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
464,Node.java,replaceWith,void replaceWith(Node in),235,236,7508,7514,MethodCallMutator,notNull,not,3,0.042114064,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
465,Node.java,replaceWith,void replaceWith(Node in),235,236,7508,7514,MethodCallMutator,notNull,graph,4,0.0133540565,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
466,Node.java,replaceWith,void replaceWith(Node in),235,236,7516,7517,IdentifierMutator-Variable,in,this,1,0.050477542,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
467,Node.java,replaceWith,void replaceWith(Node in),235,236,7516,7517,IdentifierMutator-Variable,in,ins,2,2.2421863E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
468,Node.java,replaceWith,void replaceWith(Node in),235,236,7516,7517,IdentifierMutator-Variable,in,out,3,2.0718055E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
469,Node.java,replaceWith,void replaceWith(Node in),235,236,7516,7517,IdentifierMutator-Variable,in,parent,4,1.5737042E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
470,Node.java,replaceWith,void replaceWith(Node in),235,237,7538,7544,MethodCallMutator,notNull,null,0,0.8215706,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
471,Node.java,replaceWith,void replaceWith(Node in),235,237,7538,7544,MethodCallMutator,notNull,node,1,0.03603016,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
472,Node.java,replaceWith,void replaceWith(Node in),235,237,7538,7544,MethodCallMutator,notNull,object,2,0.035352077,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
473,Node.java,replaceWith,void replaceWith(Node in),235,237,7538,7544,MethodCallMutator,notNull,graph,3,0.015336272,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
474,Node.java,replaceWith,void replaceWith(Node in),235,237,7538,7544,MethodCallMutator,notNull,Null,4,0.008714576,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
475,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,IdentifierMutator-Variable,parentNode,this,0,0.5907477,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
476,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,IdentifierMutator-Variable,parentNode,in,1,0.26867065,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
477,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,IdentifierMutator-Variable,parentNode,parent,2,0.06868322,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
478,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,IdentifierMutator-Variable,parentNode,out,3,0.02329433,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
479,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,IdentifierMutator-Variable,parentNode,null,4,0.0061522727,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
480,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,FieldReferenceMutator,parentNode,this,0,0.5907477,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
481,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,FieldReferenceMutator,parentNode,in,1,0.26867065,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
482,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,FieldReferenceMutator,parentNode,parent,2,0.06868322,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
483,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,FieldReferenceMutator,parentNode,out,3,0.02329433,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
484,Node.java,replaceWith,void replaceWith(Node in),235,237,7546,7555,FieldReferenceMutator,parentNode,null,4,0.0061522727,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
485,Node.java,replaceWith,void replaceWith(Node in),235,238,7578,7589,MethodCallMutator,replaceChild,replace,0,0.86106193,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
486,Node.java,replaceWith,void replaceWith(Node in),235,238,7578,7589,MethodCallMutator,replaceChild,replace,1,0.109839424,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
487,Node.java,replaceWith,void replaceWith(Node in),235,238,7578,7589,MethodCallMutator,replaceChild,insert,2,0.0070565394,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
488,Node.java,replaceWith,void replaceWith(Node in),235,238,7578,7589,MethodCallMutator,replaceChild,insert,3,0.0032174764,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
489,Node.java,replaceWith,void replaceWith(Node in),235,238,7578,7589,MethodCallMutator,replaceChild,add,4,0.0016431882,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
490,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,IdentifierMutator-Variable,parentNode,parent,0,0.8167315,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
491,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,IdentifierMutator-Variable,parentNode,node,1,0.0645854,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
492,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,IdentifierMutator-Variable,parentNode,out,2,0.028392911,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
493,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,IdentifierMutator-Variable,parentNode,super,3,0.02399395,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
494,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,IdentifierMutator-Variable,parentNode,this,4,0.008477612,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
495,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,FieldReferenceMutator,parentNode,parent,0,0.8167315,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
496,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,FieldReferenceMutator,parentNode,node,1,0.0645854,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
497,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,FieldReferenceMutator,parentNode,out,2,0.028392911,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
498,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,FieldReferenceMutator,parentNode,super,3,0.02399395,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
499,Node.java,replaceWith,void replaceWith(Node in),235,238,7567,7576,FieldReferenceMutator,parentNode,this,4,0.008477612,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
500,Node.java,replaceWith,void replaceWith(Node in),235,238,7591,7594,IdentifierMutator-ThisAccess,this,0,0,0.47081,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
501,Node.java,replaceWith,void replaceWith(Node in),235,238,7591,7594,IdentifierMutator-ThisAccess,this,child,1,0.095121786,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
502,Node.java,replaceWith,void replaceWith(Node in),235,238,7591,7594,IdentifierMutator-ThisAccess,this,i,3,0.0731736,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
503,Node.java,replaceWith,void replaceWith(Node in),235,238,7591,7594,IdentifierMutator-ThisAccess,this,1,4,0.045318026,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
504,Node.java,replaceWith,void replaceWith(Node in),235,238,7597,7598,IdentifierMutator-Variable,in,this,2,9.874783E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
505,Node.java,replaceWith,void replaceWith(Node in),235,238,7597,7598,IdentifierMutator-Variable,in,inside,3,4.5638872E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
506,Node.java,replaceWith,void replaceWith(Node in),235,238,7597,7598,IdentifierMutator-Variable,in,out,4,2.7903353E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
507,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7688,7691,BinaryOperatorMutator,!=,==,1,0.43626446,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
508,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7688,7691,BinaryOperatorMutator,!=,=,2,0.011576069,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
509,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7688,7691,BinaryOperatorMutator,!=,==,3,0.002900928,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
510,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7688,7691,BinaryOperatorMutator,!=,===,4,6.143476E-4,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
511,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7687,IdentifierMutator-Variable,this.parentNode,this,0,0.9275973,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
512,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7687,IdentifierMutator-Variable,this.parentNode,parent,1,0.059486795,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
513,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7687,IdentifierMutator-Variable,this.parentNode,super,2,0.0016602091,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
514,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7687,IdentifierMutator-Variable,this.parentNode,node,3,0.001147848,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
515,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7687,IdentifierMutator-Variable,this.parentNode,this,4,7.7661057E-4,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
516,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7676,IdentifierMutator-ThisAccess,this,parent,2,2.7232607E-5,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
517,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7676,IdentifierMutator-ThisAccess,this,This,3,8.408797E-6,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
518,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7673,7676,IdentifierMutator-ThisAccess,this,super,4,5.588309E-6,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
519,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7678,7687,FieldReferenceMutator,parentNode,parent,0,0.98066586,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
520,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7678,7687,FieldReferenceMutator,parentNode,node,1,0.006593348,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
521,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7678,7687,FieldReferenceMutator,parentNode,root,2,0.0013379545,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
522,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7678,7687,FieldReferenceMutator,parentNode,tree,3,0.0010033794,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
523,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7678,7687,FieldReferenceMutator,parentNode,child,4,9.697367E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
524,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7692,7695,IdentifierMutator-Literal,null,this,1,0.006230758,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
525,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7692,7695,IdentifierMutator-Literal,null,node,2,0.004320916,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
526,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7692,7695,IdentifierMutator-Literal,null,parent,3,0.0011827516,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
527,Node.java,setParentNode,void setParentNode(Node parentNode),241,242,7692,7695,IdentifierMutator-Literal,null,root,4,3.892802E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
528,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7726,7736,MethodCallMutator,removeChild,remove,0,0.485557,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
529,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7726,7736,MethodCallMutator,removeChild,add,1,0.11368077,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
530,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7726,7736,MethodCallMutator,removeChild,set,2,0.04191533,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
531,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7726,7736,MethodCallMutator,removeChild,close,3,0.034104783,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
532,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7726,7736,MethodCallMutator,removeChild,init,4,0.03072516,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
533,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7724,IdentifierMutator-Variable,this.parentNode,parent,0,0.8040805,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
534,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7724,IdentifierMutator-Variable,this.parentNode,node,1,0.096045166,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
535,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7724,IdentifierMutator-Variable,this.parentNode,parent,2,0.03636713,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
536,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7724,IdentifierMutator-Variable,this.parentNode,container,3,0.00992055,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
537,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7724,IdentifierMutator-Variable,this.parentNode,Node,4,0.004818369,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
538,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7713,IdentifierMutator-ThisAccess,this,parent,2,2.6666354E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
539,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7713,IdentifierMutator-ThisAccess,this,super,3,7.826902E-6,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
540,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7710,7713,IdentifierMutator-ThisAccess,this,that,4,2.829684E-6,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
541,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7715,7724,FieldReferenceMutator,parentNode,parent,0,0.96268034,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
542,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7715,7724,FieldReferenceMutator,parentNode,node,1,0.023117805,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
543,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7715,7724,FieldReferenceMutator,parentNode,container,2,0.0020777788,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
544,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7715,7724,FieldReferenceMutator,parentNode,tree,3,0.0010578607,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
545,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7715,7724,FieldReferenceMutator,parentNode,root,4,8.80225E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
546,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7738,7741,IdentifierMutator-ThisAccess,this,parent,1,0.0013681275,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
547,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7738,7741,IdentifierMutator-ThisAccess,this,node,2,7.226611E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
548,Node.java,setParentNode,void setParentNode(Node parentNode),241,243,7738,7741,IdentifierMutator-ThisAccess,this,true,3,3.5879004E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
549,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7768,7768,AssignmentMutator,this.parentNode=parentNode,|,0,0.63684773,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
550,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7768,7768,AssignmentMutator,this.parentNode=parentNode,*,1,0.14211403,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
551,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7768,7768,AssignmentMutator,this.parentNode=parentNode,&,2,0.03298141,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
552,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7768,7768,AssignmentMutator,this.parentNode=parentNode,!,3,0.029971892,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
553,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7768,7768,AssignmentMutator,this.parentNode=parentNode,2,4,0.023421092,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
554,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7767,IdentifierMutator-Variable,this.parentNode,this,0,0.4714662,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
555,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7767,IdentifierMutator-Variable,this.parentNode,parent,1,0.34403715,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
556,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7767,IdentifierMutator-Variable,this.parentNode,node,2,0.08508681,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
557,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7767,IdentifierMutator-Variable,this.parentNode,super,3,0.021890042,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
558,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7767,IdentifierMutator-Variable,this.parentNode,root,4,0.020796709,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
559,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7756,IdentifierMutator-ThisAccess,this,parent,2,4.6181717E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
560,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7756,IdentifierMutator-ThisAccess,this,super,3,7.430377E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
561,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7753,7756,IdentifierMutator-ThisAccess,this,node,4,2.5979458E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
562,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7758,7767,FieldReferenceMutator,parentNode,parent,0,0.99092054,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
563,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7758,7767,FieldReferenceMutator,parentNode,node,1,0.005611508,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
564,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7758,7767,FieldReferenceMutator,parentNode,Parent,2,4.6887045E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
565,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7758,7767,FieldReferenceMutator,parentNode,child,3,3.3048357E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
566,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7758,7767,FieldReferenceMutator,parentNode,root,4,2.9942932E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
567,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7771,7780,IdentifierMutator-Variable,parentNode,null,0,0.96779346,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
568,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7771,7780,IdentifierMutator-Variable,parentNode,this,1,0.010713059,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
569,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7771,7780,IdentifierMutator-Variable,parentNode,parent,2,0.008887131,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
570,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7771,7780,IdentifierMutator-Variable,parentNode,node,3,0.0064262445,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
571,Node.java,setParentNode,void setParentNode(Node parentNode),241,244,7771,7780,IdentifierMutator-Variable,parentNode,undefined,4,0.0012343249,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
572,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7860,7865,MethodCallMutator,isTrue,true,0,0.48376986,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
573,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7860,7865,MethodCallMutator,isTrue,check,1,0.1985505,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
574,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7860,7865,MethodCallMutator,isTrue,condition,2,0.13202748,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
575,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7860,7865,MethodCallMutator,isTrue,not,3,0.038534842,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
576,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7860,7865,MethodCallMutator,isTrue,test,4,0.026461104,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
577,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7881,7884,BinaryOperatorMutator,==,=,1,0.09756931,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
578,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7881,7884,BinaryOperatorMutator,==,",",2,0.028111057,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
579,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7881,7884,BinaryOperatorMutator,==,!=,3,0.027808154,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
580,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7880,IdentifierMutator-Variable,out.parentNode,out,0,0.98848224,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
581,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7880,IdentifierMutator-Variable,out.parentNode,in,1,0.009148271,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
582,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7880,IdentifierMutator-Variable,out.parentNode,Out,2,0.0016447811,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
583,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7880,IdentifierMutator-Variable,out.parentNode,out,3,1.4707455E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
584,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7880,IdentifierMutator-Variable,out.parentNode,outer,4,8.727967E-5,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
585,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7869,IdentifierMutator-Variable,out,in,1,0.22871351,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
586,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7869,IdentifierMutator-Variable,out,Out,2,0.004924867,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
587,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7869,IdentifierMutator-Variable,out,this,3,9.732549E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
588,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7867,7869,IdentifierMutator-Variable,out,outer,4,1.6284791E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
589,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7871,7880,FieldReferenceMutator,parentNode,parent,0,0.94882923,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
590,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7871,7880,FieldReferenceMutator,parentNode,node,1,0.037695326,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
591,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7871,7880,FieldReferenceMutator,parentNode,next,2,0.0021357709,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
592,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7871,7880,FieldReferenceMutator,parentNode,child,3,0.0020720589,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
593,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7871,7880,FieldReferenceMutator,parentNode,prev,4,9.590752E-4,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
594,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7885,7888,IdentifierMutator-ThisAccess,this,null,1,0.31077552,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
595,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7885,7888,IdentifierMutator-ThisAccess,this,out,2,0.15501411,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
596,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7885,7888,IdentifierMutator-ThisAccess,this,in,3,0.02805721,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
597,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,248,7885,7888,IdentifierMutator-ThisAccess,this,parent,4,0.013088231,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
598,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7909,7915,MethodCallMutator,notNull,null,0,0.37369275,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
599,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7909,7915,MethodCallMutator,notNull,remove,1,0.08126879,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
600,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7909,7915,MethodCallMutator,notNull,not,2,0.031258456,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
601,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7909,7915,MethodCallMutator,notNull,parent,3,0.024553115,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
602,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7909,7915,MethodCallMutator,notNull,check,4,0.024354003,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
603,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7917,7918,IdentifierMutator-Variable,in,out,1,0.047298774,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
604,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7917,7918,IdentifierMutator-Variable,in,this,2,5.470114E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
605,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7917,7918,IdentifierMutator-Variable,in,ins,3,2.3828156E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
606,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,249,7917,7918,IdentifierMutator-Variable,in,In,4,2.1591835E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
607,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7947,7950,BinaryOperatorMutator,!=,==,0,0.7295424,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
608,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7947,7950,BinaryOperatorMutator,!=,=,2,0.029734217,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
609,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7947,7950,BinaryOperatorMutator,!=,==,3,0.010482262,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
610,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7947,7950,BinaryOperatorMutator,!=,.,4,0.0011424244,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
611,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7946,IdentifierMutator-Variable,in.parentNode,in,0,0.976061,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
612,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7946,IdentifierMutator-Variable,in.parentNode,out,1,0.015697943,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
613,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7946,IdentifierMutator-Variable,in.parentNode,ins,2,0.0033076524,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
614,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7946,IdentifierMutator-Variable,in.parentNode,in,3,6.594933E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
615,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7946,IdentifierMutator-Variable,in.parentNode,parent,4,6.3103455E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
616,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7935,IdentifierMutator-Variable,in,out,1,0.0013022945,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
617,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7935,IdentifierMutator-Variable,in,ins,3,1.3826012E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
618,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7934,7935,IdentifierMutator-Variable,in,input,4,5.988801E-5,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
619,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7937,7946,FieldReferenceMutator,parentNode,parent,0,0.98742163,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
620,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7937,7946,FieldReferenceMutator,parentNode,node,1,0.002022753,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
621,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7937,7946,FieldReferenceMutator,parentNode,child,2,0.0015145359,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
622,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7937,7946,FieldReferenceMutator,parentNode,next,3,0.0011728365,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
623,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7937,7946,FieldReferenceMutator,parentNode,parents,4,8.7740255E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
624,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7951,7954,IdentifierMutator-Literal,null,this,1,0.1694159,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
625,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7951,7954,IdentifierMutator-Literal,null,out,2,0.025005534,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
626,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7951,7954,IdentifierMutator-Literal,null,parent,3,0.0049528503,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
627,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,250,7951,7954,IdentifierMutator-Literal,null,node,4,0.004363865,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
628,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7983,7993,MethodCallMutator,removeChild,remove,0,0.8108765,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
629,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7983,7993,MethodCallMutator,removeChild,add,1,0.044362564,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
630,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7983,7993,MethodCallMutator,removeChild,replace,2,0.042457037,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
631,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7983,7993,MethodCallMutator,removeChild,append,3,0.015188558,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
632,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7983,7993,MethodCallMutator,removeChild,del,4,0.011940637,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
633,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7981,IdentifierMutator-Variable,in.parentNode,out,0,0.65769523,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
634,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7981,IdentifierMutator-Variable,in.parentNode,parent,1,0.13193831,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
635,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7981,IdentifierMutator-Variable,in.parentNode,this,2,0.07894108,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
636,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7981,IdentifierMutator-Variable,in.parentNode,out,3,0.039366953,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
637,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7981,IdentifierMutator-Variable,in.parentNode,in,4,0.019961353,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
638,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7970,IdentifierMutator-Variable,in,out,2,0.005246241,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
639,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7970,IdentifierMutator-Variable,in,out,3,0.0010334481,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
640,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7969,7970,IdentifierMutator-Variable,in,ins,4,8.089896E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
641,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7972,7981,FieldReferenceMutator,parentNode,parent,0,0.9899233,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
642,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7972,7981,FieldReferenceMutator,parentNode,node,1,0.0074098636,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
643,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7972,7981,FieldReferenceMutator,parentNode,next,2,8.545794E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
644,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7972,7981,FieldReferenceMutator,parentNode,Parent,3,2.3872498E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
645,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7972,7981,FieldReferenceMutator,parentNode,child,4,2.0674708E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
646,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7995,7996,IdentifierMutator-Variable,in,out,1,0.17001766,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
647,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7995,7996,IdentifierMutator-Variable,in,this,2,0.020152459,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
648,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7995,7996,IdentifierMutator-Variable,in,self,3,6.647702E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
649,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,251,7995,7996,IdentifierMutator-Variable,in,ins,4,5.31627E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
650,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8037,8048,MethodCallMutator,siblingIndex,index,0,0.9396018,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
651,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8037,8048,MethodCallMutator,siblingIndex,position,1,0.01815929,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
652,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8037,8048,MethodCallMutator,siblingIndex,id,2,0.011959642,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
653,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8037,8048,MethodCallMutator,siblingIndex,size,3,0.0030209427,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
654,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8037,8048,MethodCallMutator,siblingIndex,number,4,0.0028574828,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
655,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8033,8035,IdentifierMutator-Variable,out,in,0,0.9385301,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
656,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8033,8035,IdentifierMutator-Variable,out,in,2,0.0063968566,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
657,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8033,8035,IdentifierMutator-Variable,out,this,3,0.005877816,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
658,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,253,8033,8035,IdentifierMutator-Variable,out,ins,4,0.0034297686,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
659,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8072,8074,MethodCallMutator,set,add,1,0.16268969,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
660,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8072,8074,MethodCallMutator,set,replace,2,0.07807827,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
661,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8072,8074,MethodCallMutator,set,put,3,0.071022086,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
662,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8072,8074,MethodCallMutator,set,insert,4,0.0296076,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
663,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,IdentifierMutator-Variable,childNodes,siblings,0,0.28025597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
664,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,IdentifierMutator-Variable,childNodes,children,1,0.13037787,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
665,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,IdentifierMutator-Variable,childNodes,nodes,2,0.087280415,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
666,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,IdentifierMutator-Variable,childNodes,out,3,0.02732186,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
667,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,IdentifierMutator-Variable,childNodes,indices,4,0.026425047,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
668,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,FieldReferenceMutator,childNodes,siblings,0,0.28025597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
669,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,FieldReferenceMutator,childNodes,children,1,0.13037787,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
670,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,FieldReferenceMutator,childNodes,nodes,2,0.087280415,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
671,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,FieldReferenceMutator,childNodes,out,3,0.02732186,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
672,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8061,8070,FieldReferenceMutator,childNodes,indices,4,0.026425047,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
673,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8076,8080,IdentifierMutator-Variable,index,out,1,0.042854954,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
674,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8076,8080,IdentifierMutator-Variable,index,in,2,0.0050389906,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
675,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8076,8080,IdentifierMutator-Variable,index,Index,3,0.002072001,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
676,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8076,8080,IdentifierMutator-Variable,index,0,4,0.0019758544,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
677,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8083,8084,IdentifierMutator-Variable,in,out,1,0.3674969,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
678,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8083,8084,IdentifierMutator-Variable,in,this,2,0.033657786,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
679,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,254,8083,8084,IdentifierMutator-Variable,in,node,3,0.007089899,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
680,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8109,8109,AssignmentMutator,in.parentNode=this,!,0,0.5296534,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
681,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8109,8109,AssignmentMutator,in.parentNode=this,|,1,0.3166121,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
682,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8109,8109,AssignmentMutator,in.parentNode=this,||,2,0.03922767,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
683,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8109,8109,AssignmentMutator,in.parentNode=this,*,3,0.03529428,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
684,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8109,8109,AssignmentMutator,in.parentNode=this,|,4,0.00970577,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
685,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8108,IdentifierMutator-Variable,in.parentNode,in,0,0.777726,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
686,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8108,IdentifierMutator-Variable,in.parentNode,out,1,0.15991867,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
687,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8108,IdentifierMutator-Variable,in.parentNode,in,2,0.021770403,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
688,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8108,IdentifierMutator-Variable,in.parentNode,index,3,0.0058510597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
689,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8108,IdentifierMutator-Variable,in.parentNode,parent,4,0.0041171825,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
690,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8097,IdentifierMutator-Variable,in,out,1,0.19568098,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
691,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8097,IdentifierMutator-Variable,in,ins,3,0.0052417153,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
692,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8096,8097,IdentifierMutator-Variable,in,out,4,0.0033644699,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
693,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8099,8108,FieldReferenceMutator,parentNode,parent,0,0.97630376,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
694,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8099,8108,FieldReferenceMutator,parentNode,node,1,0.009248881,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
695,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8099,8108,FieldReferenceMutator,parentNode,next,2,0.0060845907,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
696,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8099,8108,FieldReferenceMutator,parentNode,prev,3,0.00205835,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
697,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8099,8108,FieldReferenceMutator,parentNode,child,4,0.0018138079,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
698,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8112,8115,IdentifierMutator-ThisAccess,this,null,0,0.6367505,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
699,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8112,8115,IdentifierMutator-ThisAccess,this,out,1,0.22499056,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
700,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8112,8115,IdentifierMutator-ThisAccess,this,parent,3,0.017192394,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
701,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,255,8112,8115,IdentifierMutator-ThisAccess,this,in,4,0.009922998,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
702,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8129,8143,MethodCallMutator,setSiblingIndex,remove,0,0.52576506,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
703,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8129,8143,MethodCallMutator,setSiblingIndex,delete,1,0.22563672,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
704,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8129,8143,MethodCallMutator,setSiblingIndex,move,2,0.027332667,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
705,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8129,8143,MethodCallMutator,setSiblingIndex,index,3,0.020054951,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
706,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8129,8143,MethodCallMutator,setSiblingIndex,pop,4,0.009785792,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
707,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8126,8127,IdentifierMutator-Variable,in,out,1,0.33924824,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
708,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8126,8127,IdentifierMutator-Variable,in,this,3,0.02829465,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
709,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8126,8127,IdentifierMutator-Variable,in,out,4,0.009890511,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
710,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8145,8149,IdentifierMutator-Variable,index,0,1,0.0022028154,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
711,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8145,8149,IdentifierMutator-Variable,index,Index,2,0.002011847,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
712,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8145,8149,IdentifierMutator-Variable,index,in,3,6.2898884E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
713,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,256,8145,8149,IdentifierMutator-Variable,index,out,4,5.1079993E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
714,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8175,8175,AssignmentMutator,out.parentNode=null,|,0,0.2744085,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
715,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8175,8175,AssignmentMutator,out.parentNode=null,&,1,0.2600427,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
716,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8175,8175,AssignmentMutator,out.parentNode=null,!,2,0.16850221,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
717,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8175,8175,AssignmentMutator,out.parentNode=null,||,3,0.08855054,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
718,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8175,8175,AssignmentMutator,out.parentNode=null,*,4,0.084747955,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
719,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8174,IdentifierMutator-Variable,out.parentNode,in,0,0.87772435,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
720,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8174,IdentifierMutator-Variable,out.parentNode,out,1,0.029757408,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
721,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8174,IdentifierMutator-Variable,out.parentNode,in,2,0.017663533,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
722,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8174,IdentifierMutator-Variable,out.parentNode,index,3,0.017126255,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
723,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8174,IdentifierMutator-Variable,out.parentNode,this,4,0.009670108,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
724,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8163,IdentifierMutator-Variable,out,in,0,0.9012405,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
725,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8163,IdentifierMutator-Variable,out,in,1,0.080757365,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
726,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8163,IdentifierMutator-Variable,out,ins,3,0.0026551895,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
727,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8161,8163,IdentifierMutator-Variable,out,this,4,0.0021970118,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
728,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8165,8174,FieldReferenceMutator,parentNode,parent,0,0.9256674,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
729,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8165,8174,FieldReferenceMutator,parentNode,children,1,0.012803798,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
730,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8165,8174,FieldReferenceMutator,parentNode,node,2,0.011108591,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
731,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8165,8174,FieldReferenceMutator,parentNode,child,3,0.010256675,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
732,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8165,8174,FieldReferenceMutator,parentNode,parents,4,0.0073473877,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
733,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8178,8181,IdentifierMutator-Literal,null,out,0,0.61812454,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
734,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8178,8181,IdentifierMutator-Literal,null,this,1,0.13161397,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
735,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8178,8181,IdentifierMutator-Literal,null,in,3,0.06072379,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
736,Node.java,replaceChild,"void replaceChild(Node out, Node in)",247,257,8178,8181,IdentifierMutator-Literal,null,undefined,4,0.006630218,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
737,Node.java,removeChild,void removeChild(Node out),260,261,8251,8256,MethodCallMutator,isTrue,true,0,0.48096806,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
738,Node.java,removeChild,void removeChild(Node out),260,261,8251,8256,MethodCallMutator,isTrue,check,1,0.1741084,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
739,Node.java,removeChild,void removeChild(Node out),260,261,8251,8256,MethodCallMutator,isTrue,True,2,0.1242781,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
740,Node.java,removeChild,void removeChild(Node out),260,261,8251,8256,MethodCallMutator,isTrue,condition,3,0.025470495,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
741,Node.java,removeChild,void removeChild(Node out),260,261,8251,8256,MethodCallMutator,isTrue,ument,4,0.023486326,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
742,Node.java,removeChild,void removeChild(Node out),260,261,8272,8275,BinaryOperatorMutator,==,!=,2,0.08966335,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
743,Node.java,removeChild,void removeChild(Node out),260,261,8272,8275,BinaryOperatorMutator,==,=,3,0.07564739,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
744,Node.java,removeChild,void removeChild(Node out),260,261,8272,8275,BinaryOperatorMutator,==,:,4,0.030683467,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
745,Node.java,removeChild,void removeChild(Node out),260,261,8258,8271,IdentifierMutator-Variable,out.parentNode,out,0,0.9937364,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
746,Node.java,removeChild,void removeChild(Node out),260,261,8258,8271,IdentifierMutator-Variable,out.parentNode,in,1,0.0041298433,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
747,Node.java,removeChild,void removeChild(Node out),260,261,8258,8271,IdentifierMutator-Variable,out.parentNode,Out,2,0.0011463109,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
748,Node.java,removeChild,void removeChild(Node out),260,261,8258,8271,IdentifierMutator-Variable,out.parentNode,OUT,3,1.8672545E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
749,Node.java,removeChild,void removeChild(Node out),260,261,8258,8271,IdentifierMutator-Variable,out.parentNode,out,4,1.3502328E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
750,Node.java,removeChild,void removeChild(Node out),260,261,8258,8260,IdentifierMutator-Variable,out,in,1,0.003992035,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
751,Node.java,removeChild,void removeChild(Node out),260,261,8258,8260,IdentifierMutator-Variable,out,Out,2,0.0035276583,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
752,Node.java,removeChild,void removeChild(Node out),260,261,8258,8260,IdentifierMutator-Variable,out,OUT,3,2.7454665E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
753,Node.java,removeChild,void removeChild(Node out),260,261,8258,8260,IdentifierMutator-Variable,out,parent,4,1.6722597E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
754,Node.java,removeChild,void removeChild(Node out),260,261,8262,8271,FieldReferenceMutator,parentNode,parent,0,0.9629195,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
755,Node.java,removeChild,void removeChild(Node out),260,261,8262,8271,FieldReferenceMutator,parentNode,node,1,0.021025056,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
756,Node.java,removeChild,void removeChild(Node out),260,261,8262,8271,FieldReferenceMutator,parentNode,child,2,0.003573262,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
757,Node.java,removeChild,void removeChild(Node out),260,261,8262,8271,FieldReferenceMutator,parentNode,tree,3,0.0010581962,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
758,Node.java,removeChild,void removeChild(Node out),260,261,8262,8271,FieldReferenceMutator,parentNode,next,4,9.735534E-4,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
759,Node.java,removeChild,void removeChild(Node out),260,261,8276,8279,IdentifierMutator-ThisAccess,this,out,0,0.33289367,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
760,Node.java,removeChild,void removeChild(Node out),260,261,8276,8279,IdentifierMutator-ThisAccess,this,null,1,0.26614508,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
761,Node.java,removeChild,void removeChild(Node out),260,261,8276,8279,IdentifierMutator-ThisAccess,this,node,3,0.06746055,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
762,Node.java,removeChild,void removeChild(Node out),260,261,8276,8279,IdentifierMutator-ThisAccess,this,parent,4,0.015050102,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
763,Node.java,removeChild,void removeChild(Node out),260,262,8307,8318,MethodCallMutator,siblingIndex,index,0,0.9362033,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
764,Node.java,removeChild,void removeChild(Node out),260,262,8307,8318,MethodCallMutator,siblingIndex,id,1,0.011855876,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
765,Node.java,removeChild,void removeChild(Node out),260,262,8307,8318,MethodCallMutator,siblingIndex,position,2,0.010733755,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
766,Node.java,removeChild,void removeChild(Node out),260,262,8307,8318,MethodCallMutator,siblingIndex,node,3,0.0037415053,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
767,Node.java,removeChild,void removeChild(Node out),260,262,8307,8318,MethodCallMutator,siblingIndex,length,4,0.0021526597,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
768,Node.java,removeChild,void removeChild(Node out),260,262,8303,8305,IdentifierMutator-Variable,out,in,1,0.011404381,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
769,Node.java,removeChild,void removeChild(Node out),260,262,8303,8305,IdentifierMutator-Variable,out,this,2,0.0067368615,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
770,Node.java,removeChild,void removeChild(Node out),260,262,8303,8305,IdentifierMutator-Variable,out,parent,4,0.004444521,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
771,Node.java,removeChild,void removeChild(Node out),260,263,8342,8347,MethodCallMutator,remove,delete,1,0.06060056,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
772,Node.java,removeChild,void removeChild(Node out),260,263,8342,8347,MethodCallMutator,remove,get,2,0.03764246,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
773,Node.java,removeChild,void removeChild(Node out),260,263,8342,8347,MethodCallMutator,remove,pop,3,0.024116505,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
774,Node.java,removeChild,void removeChild(Node out),260,263,8342,8347,MethodCallMutator,remove,Remove,4,0.010915536,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
775,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,IdentifierMutator-Variable,childNodes,children,0,0.43821195,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
776,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,IdentifierMutator-Variable,childNodes,siblings,1,0.13084558,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
777,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,IdentifierMutator-Variable,childNodes,nodes,2,0.06437801,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
778,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,IdentifierMutator-Variable,childNodes,out,3,0.033792727,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
779,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,IdentifierMutator-Variable,childNodes,indices,4,0.026397359,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
780,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,FieldReferenceMutator,childNodes,children,0,0.43821195,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
781,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,FieldReferenceMutator,childNodes,siblings,1,0.13084558,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
782,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,FieldReferenceMutator,childNodes,nodes,2,0.06437801,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
783,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,FieldReferenceMutator,childNodes,out,3,0.033792727,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
784,Node.java,removeChild,void removeChild(Node out),260,263,8331,8340,FieldReferenceMutator,childNodes,indices,4,0.026397359,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
785,Node.java,removeChild,void removeChild(Node out),260,263,8349,8353,IdentifierMutator-Variable,index,out,1,0.421224,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
786,Node.java,removeChild,void removeChild(Node out),260,263,8349,8353,IdentifierMutator-Variable,index,in,2,0.01906257,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
787,Node.java,removeChild,void removeChild(Node out),260,263,8349,8353,IdentifierMutator-Variable,index,node,3,0.0029762478,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
788,Node.java,removeChild,void removeChild(Node out),260,263,8349,8353,IdentifierMutator-Variable,index,parent,4,0.0015670387,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
789,Node.java,removeChild,void removeChild(Node out),260,264,8365,8379,MethodCallMutator,reindexChildren,remove,0,0.2919852,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
790,Node.java,removeChild,void removeChild(Node out),260,264,8365,8379,MethodCallMutator,reindexChildren,clear,1,0.077526584,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
791,Node.java,removeChild,void removeChild(Node out),260,264,8365,8379,MethodCallMutator,reindexChildren,destroy,2,0.048891813,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
792,Node.java,removeChild,void removeChild(Node out),260,264,8365,8379,MethodCallMutator,reindexChildren,disconnect,3,0.037654195,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
793,Node.java,removeChild,void removeChild(Node out),260,264,8365,8379,MethodCallMutator,reindexChildren,dispose,4,0.03348545,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
794,Node.java,removeChild,void removeChild(Node out),260,265,8406,8406,AssignmentMutator,out.parentNode=null,!,0,0.41415513,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
795,Node.java,removeChild,void removeChild(Node out),260,265,8406,8406,AssignmentMutator,out.parentNode=null,&,1,0.17520517,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
796,Node.java,removeChild,void removeChild(Node out),260,265,8406,8406,AssignmentMutator,out.parentNode=null,|,2,0.096864395,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
797,Node.java,removeChild,void removeChild(Node out),260,265,8406,8406,AssignmentMutator,out.parentNode=null,||,3,0.054068036,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
798,Node.java,removeChild,void removeChild(Node out),260,265,8406,8406,AssignmentMutator,out.parentNode=null,*,4,0.042148445,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
799,Node.java,removeChild,void removeChild(Node out),260,265,8392,8405,IdentifierMutator-Variable,out.parentNode,out,0,0.522046,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
800,Node.java,removeChild,void removeChild(Node out),260,265,8392,8405,IdentifierMutator-Variable,out.parentNode,parent,1,0.082182765,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
801,Node.java,removeChild,void removeChild(Node out),260,265,8392,8405,IdentifierMutator-Variable,out.parentNode,index,2,0.06398624,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
802,Node.java,removeChild,void removeChild(Node out),260,265,8392,8405,IdentifierMutator-Variable,out.parentNode,node,3,0.050581284,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
803,Node.java,removeChild,void removeChild(Node out),260,265,8392,8405,IdentifierMutator-Variable,out.parentNode,child,4,0.04424047,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
804,Node.java,removeChild,void removeChild(Node out),260,265,8392,8394,IdentifierMutator-Variable,out,in,2,0.012700409,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
805,Node.java,removeChild,void removeChild(Node out),260,265,8392,8394,IdentifierMutator-Variable,out,this,3,0.008875282,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
806,Node.java,removeChild,void removeChild(Node out),260,265,8392,8394,IdentifierMutator-Variable,out,parent,4,0.0071560424,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
807,Node.java,removeChild,void removeChild(Node out),260,265,8396,8405,FieldReferenceMutator,parentNode,parent,0,0.93378174,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
808,Node.java,removeChild,void removeChild(Node out),260,265,8396,8405,FieldReferenceMutator,parentNode,child,1,0.0223483,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
809,Node.java,removeChild,void removeChild(Node out),260,265,8396,8405,FieldReferenceMutator,parentNode,children,2,0.011585017,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
810,Node.java,removeChild,void removeChild(Node out),260,265,8396,8405,FieldReferenceMutator,parentNode,node,3,0.006216063,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
811,Node.java,removeChild,void removeChild(Node out),260,265,8396,8405,FieldReferenceMutator,parentNode,parents,4,0.0039612213,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
812,Node.java,removeChild,void removeChild(Node out),260,265,8409,8412,IdentifierMutator-Literal,null,out,1,0.12046053,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
813,Node.java,removeChild,void removeChild(Node out),260,265,8409,8412,IdentifierMutator-Literal,null,this,2,0.069436006,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
814,Node.java,removeChild,void removeChild(Node out),260,265,8409,8412,IdentifierMutator-Literal,null,undefined,3,0.016921276,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
815,Node.java,removeChild,void removeChild(Node out),260,265,8409,8412,IdentifierMutator-Literal,null,parent,4,0.008119869,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
816,Node.java,addChildren,void addChildren(Node... children),268,270,8594,8601,IdentifierMutator-Variable,children,Children,2,7.728545E-5,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
817,Node.java,addChildren,void addChildren(Node... children),268,270,8594,8601,IdentifierMutator-Variable,children,Children,3,8.143714E-6,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
818,Node.java,addChildren,void addChildren(Node... children),268,270,8594,8601,IdentifierMutator-Variable,children,this,4,3.5037235E-6,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
819,Node.java,addChildren,void addChildren(Node... children),268,271,8618,8630,MethodCallMutator,reparentChild,remove,0,0.15995172,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
820,Node.java,addChildren,void addChildren(Node... children),268,271,8618,8630,MethodCallMutator,reparentChild,add,1,0.15783107,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
821,Node.java,addChildren,void addChildren(Node... children),268,271,8618,8630,MethodCallMutator,reparentChild,index,2,0.038642738,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
822,Node.java,addChildren,void addChildren(Node... children),268,271,8618,8630,MethodCallMutator,reparentChild,sort,3,0.036617346,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
823,Node.java,addChildren,void addChildren(Node... children),268,271,8618,8630,MethodCallMutator,reparentChild,visit,4,0.035002746,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
824,Node.java,addChildren,void addChildren(Node... children),268,271,8632,8636,IdentifierMutator-Variable,child,parent,1,4.3657166E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
825,Node.java,addChildren,void addChildren(Node... children),268,271,8632,8636,IdentifierMutator-Variable,child,Child,2,3.761574E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
826,Node.java,addChildren,void addChildren(Node... children),268,271,8632,8636,IdentifierMutator-Variable,child,children,4,1.198848E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
827,Node.java,addChildren,void addChildren(Node... children),268,272,8663,8665,MethodCallMutator,add,push,1,0.037791457,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
828,Node.java,addChildren,void addChildren(Node... children),268,272,8663,8665,MethodCallMutator,add,remove,2,0.013921541,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
829,Node.java,addChildren,void addChildren(Node... children),268,272,8663,8665,MethodCallMutator,add,append,3,0.0074052047,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
830,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,IdentifierMutator-Variable,childNodes,children,0,0.7690784,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
831,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,IdentifierMutator-Variable,childNodes,siblings,1,0.034082714,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
832,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,IdentifierMutator-Variable,childNodes,child,2,0.02393572,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
833,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,IdentifierMutator-Variable,childNodes,nodes,3,0.019685905,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
834,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,IdentifierMutator-Variable,childNodes,parents,4,0.012114218,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
835,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,FieldReferenceMutator,childNodes,children,0,0.7690784,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
836,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,FieldReferenceMutator,childNodes,siblings,1,0.034082714,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
837,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,FieldReferenceMutator,childNodes,child,2,0.02393572,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
838,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,FieldReferenceMutator,childNodes,nodes,3,0.019685905,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
839,Node.java,addChildren,void addChildren(Node... children),268,272,8652,8661,FieldReferenceMutator,childNodes,parents,4,0.012114218,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
840,Node.java,addChildren,void addChildren(Node... children),268,272,8667,8671,IdentifierMutator-Variable,child,Child,1,1.6074731E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
841,Node.java,addChildren,void addChildren(Node... children),268,272,8667,8671,IdentifierMutator-Variable,child,parent,2,1.558376E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
842,Node.java,addChildren,void addChildren(Node... children),268,272,8667,8671,IdentifierMutator-Variable,child,children,4,4.4587792E-5,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
843,Node.java,addChildren,void addChildren(Node... children),268,273,8693,8707,MethodCallMutator,setSiblingIndex,remove,0,0.41804132,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
844,Node.java,addChildren,void addChildren(Node... children),268,273,8693,8707,MethodCallMutator,setSiblingIndex,delete,1,0.090151206,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
845,Node.java,addChildren,void addChildren(Node... children),268,273,8693,8707,MethodCallMutator,setSiblingIndex,push,2,0.06935679,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
846,Node.java,addChildren,void addChildren(Node... children),268,273,8693,8707,MethodCallMutator,setSiblingIndex,move,3,0.06643987,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
847,Node.java,addChildren,void addChildren(Node... children),268,273,8693,8707,MethodCallMutator,setSiblingIndex,add,4,0.04201306,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
848,Node.java,addChildren,void addChildren(Node... children),268,273,8687,8691,IdentifierMutator-Variable,child,parent,2,0.0021912195,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
849,Node.java,addChildren,void addChildren(Node... children),268,273,8687,8691,IdentifierMutator-Variable,child,Child,3,0.001182629,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
850,Node.java,addChildren,void addChildren(Node... children),268,273,8687,8691,IdentifierMutator-Variable,child,this,4,7.1662245E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
851,Node.java,addChildren,void addChildren(Node... children),268,273,8726,8726,BinaryOperatorMutator,-,+,1,0.18607832,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
852,Node.java,addChildren,void addChildren(Node... children),268,273,8726,8726,BinaryOperatorMutator,-,)-,3,0.0023922361,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
853,Node.java,addChildren,void addChildren(Node... children),268,273,8726,8726,BinaryOperatorMutator,-,++,4,0.0012900619,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
854,Node.java,addChildren,void addChildren(Node... children),268,273,8720,8723,MethodCallMutator,size,length,2,1.5853705E-4,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
855,Node.java,addChildren,void addChildren(Node... children),268,273,8720,8723,MethodCallMutator,size,count,3,4.486283E-5,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
856,Node.java,addChildren,void addChildren(Node... children),268,273,8720,8723,MethodCallMutator,size,position,4,3.8291833E-5,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
857,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,IdentifierMutator-Variable,childNodes,children,0,0.98609656,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
858,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,IdentifierMutator-Variable,childNodes,Children,1,0.0055059167,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
859,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,IdentifierMutator-Variable,childNodes,child,2,0.0034105212,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
860,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,IdentifierMutator-Variable,childNodes,children,3,0.0012175487,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
861,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,IdentifierMutator-Variable,childNodes,parents,4,5.916985E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
862,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,FieldReferenceMutator,childNodes,children,0,0.98609656,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
863,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,FieldReferenceMutator,childNodes,Children,1,0.0055059167,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
864,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,FieldReferenceMutator,childNodes,child,2,0.0034105212,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
865,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,FieldReferenceMutator,childNodes,children,3,0.0012175487,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
866,Node.java,addChildren,void addChildren(Node... children),268,273,8709,8718,FieldReferenceMutator,childNodes,parents,4,5.916985E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
867,Node.java,addChildren,void addChildren(Node... children),268,273,8727,8727,IdentifierMutator-Literal,1,2,1,0.011725478,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
868,Node.java,addChildren,void addChildren(Node... children),268,273,8727,8727,IdentifierMutator-Literal,1,3,3,0.0012798014,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
869,Node.java,addChildren,void addChildren(Node... children),268,273,8727,8727,IdentifierMutator-Literal,1,0,4,4.1978416E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
870,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8827,8840,MethodCallMutator,noNullElements,null,0,0.18894103,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
871,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8827,8840,MethodCallMutator,noNullElements,Null,1,0.13807201,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
872,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8827,8840,MethodCallMutator,noNullElements,empty,2,0.0895351,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
873,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8827,8840,MethodCallMutator,noNullElements,check,3,0.085499465,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
874,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8827,8840,MethodCallMutator,noNullElements,array,4,0.060167342,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
875,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8842,8849,IdentifierMutator-Variable,children,index,1,0.06500558,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
876,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8842,8849,IdentifierMutator-Variable,children,child,2,0.018676238,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
877,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8842,8849,IdentifierMutator-Variable,children,Children,3,0.0058346777,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
878,Node.java,addChildren,"void addChildren(int index, Node... children)",277,278,8842,8849,IdentifierMutator-Variable,children,parent,4,0.0029736115,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
879,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8889,8891,BinaryOperatorMutator,-,)-,2,2.1009933E-4,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
880,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8889,8891,BinaryOperatorMutator,-,_,3,2.6662063E-5,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
881,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8889,8891,BinaryOperatorMutator,-,--,4,1.3578356E-5,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
882,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8888,IdentifierMutator-Variable,children.length,index,0,0.97861105,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
883,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8888,IdentifierMutator-Variable,children.length,size,1,0.008330582,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
884,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8888,IdentifierMutator-Variable,children.length,count,2,0.0060691116,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
885,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8888,IdentifierMutator-Variable,children.length,length,3,0.0023279786,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
886,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8888,IdentifierMutator-Variable,children.length,len,4,3.5790436E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
887,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8881,IdentifierMutator-Variable,children,child,1,0.0073052226,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
888,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8881,IdentifierMutator-Variable,children,arguments,3,2.5534522E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
889,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8874,8881,IdentifierMutator-Variable,children,parent,4,1.2907764E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
890,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8883,8888,FieldReferenceMutator,length,size,1,7.4757123E-4,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
891,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8883,8888,FieldReferenceMutator,length,count,3,2.4641928E-5,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
892,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8883,8888,FieldReferenceMutator,length,index,4,1.6917214E-5,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
893,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8892,8892,IdentifierMutator-Literal,1,2,1,0.004731048,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
894,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8892,8892,IdentifierMutator-Literal,1,index,2,9.624814E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
895,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8892,8892,IdentifierMutator-Literal,1,3,3,6.0631835E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
896,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8896,8899,BinaryOperatorMutator,>=,>,1,0.16030215,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
897,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8896,8899,BinaryOperatorMutator,>=,>,2,0.06425924,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
898,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8896,8899,BinaryOperatorMutator,>=,==,3,0.0031716283,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
899,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8896,8899,BinaryOperatorMutator,>=,!=,4,0.0010241788,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
900,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8895,8895,IdentifierMutator-Variable,i,in,2,7.159257E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
901,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8895,8895,IdentifierMutator-Variable,i,index,3,5.4869786E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
902,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8895,8895,IdentifierMutator-Variable,i,I,4,1.4261467E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
903,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8900,8900,IdentifierMutator-Literal,0,index,1,0.13117355,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
904,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8900,8900,IdentifierMutator-Literal,0,1,2,0.0025374005,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
905,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8900,8900,IdentifierMutator-Literal,0,2,4,1.6762358E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
906,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8904,8905,UnaryOperatorMutator,--,++,2,6.424113E-5,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
907,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8904,8905,UnaryOperatorMutator,--,-=,3,2.419793E-5,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
908,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8904,8905,UnaryOperatorMutator,--,=-,4,7.2206167E-6,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
909,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8903,8903,IdentifierMutator-Variable,i,in,2,9.959994E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
910,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8903,8903,IdentifierMutator-Variable,i,I,3,8.198025E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
911,Node.java,addChildren,"void addChildren(int index, Node... children)",277,279,8903,8903,IdentifierMutator-Variable,i,I,4,6.069881E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
912,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,ArrayAccessMutator,i,index,1,2.3852347E-4,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
913,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,ArrayAccessMutator,i,0,3,6.334387E-5,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
914,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,ArrayAccessMutator,i,I,4,3.9329E-5,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
915,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8932,8939,IdentifierMutator-Variable,children,child,1,6.132517E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
916,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8932,8939,IdentifierMutator-Variable,children,content,3,4.721417E-6,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
917,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8932,8939,IdentifierMutator-Variable,children,arguments,4,4.229354E-6,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
918,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,IdentifierMutator-Variable,i,index,1,2.3852347E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
919,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,IdentifierMutator-Variable,i,0,3,6.334387E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
920,Node.java,addChildren,"void addChildren(int index, Node... children)",277,280,8941,8941,IdentifierMutator-Variable,i,I,4,3.9329E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
921,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8957,8969,MethodCallMutator,reparentChild,validate,0,0.4409971,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
922,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8957,8969,MethodCallMutator,reparentChild,assert,1,0.13105504,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
923,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8957,8969,MethodCallMutator,reparentChild,check,2,0.06938424,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
924,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8957,8969,MethodCallMutator,reparentChild,remove,3,0.022368869,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
925,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8957,8969,MethodCallMutator,reparentChild,verify,4,0.015240328,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
926,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8971,8972,IdentifierMutator-Variable,in,child,1,4.969367E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
927,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8971,8972,IdentifierMutator-Variable,in,index,2,3.5165035E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
928,Node.java,addChildren,"void addChildren(int index, Node... children)",277,281,8971,8972,IdentifierMutator-Variable,in,ins,3,2.7431725E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
929,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8999,9001,MethodCallMutator,add,set,1,0.24301124,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
930,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8999,9001,MethodCallMutator,add,put,2,0.070402816,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
931,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8999,9001,MethodCallMutator,add,insert,3,0.017372157,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
932,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,IdentifierMutator-Variable,childNodes,children,0,0.79926324,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
933,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,IdentifierMutator-Variable,childNodes,nodes,1,0.029903093,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
934,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,IdentifierMutator-Variable,childNodes,siblings,2,0.011600046,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
935,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,IdentifierMutator-Variable,childNodes,stack,3,0.009288102,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
936,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,IdentifierMutator-Variable,childNodes,parents,4,0.008330988,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
937,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,FieldReferenceMutator,childNodes,children,0,0.79926324,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
938,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,FieldReferenceMutator,childNodes,nodes,1,0.029903093,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
939,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,FieldReferenceMutator,childNodes,siblings,2,0.011600046,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
940,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,FieldReferenceMutator,childNodes,stack,3,0.009288102,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
941,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,8988,8997,FieldReferenceMutator,childNodes,parents,4,0.008330988,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
942,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9003,9007,IdentifierMutator-Variable,index,i,1,0.009037365,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
943,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9003,9007,IdentifierMutator-Variable,index,Index,3,9.5268025E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
944,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9003,9007,IdentifierMutator-Variable,index,0,4,7.450808E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
945,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9010,9011,IdentifierMutator-Variable,in,child,1,0.027441157,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
946,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9010,9011,IdentifierMutator-Variable,in,this,3,0.005149564,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
947,Node.java,addChildren,"void addChildren(int index, Node... children)",277,282,9010,9011,IdentifierMutator-Variable,in,out,4,0.004104846,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
948,Node.java,addChildren,"void addChildren(int index, Node... children)",277,284,9033,9047,MethodCallMutator,reindexChildren,clear,0,0.11594945,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
949,Node.java,addChildren,"void addChildren(int index, Node... children)",277,284,9033,9047,MethodCallMutator,reindexChildren,notify,1,0.07121672,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
950,Node.java,addChildren,"void addChildren(int index, Node... children)",277,284,9033,9047,MethodCallMutator,reindexChildren,remove,2,0.068730675,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
951,Node.java,addChildren,"void addChildren(int index, Node... children)",277,284,9033,9047,MethodCallMutator,reindexChildren,close,3,0.06871507,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
952,Node.java,addChildren,"void addChildren(int index, Node... children)",277,284,9033,9047,MethodCallMutator,reindexChildren,reset,4,0.04006013,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
953,Node.java,reparentChild,void reparentChild(Node child),287,288,9132,9135,BinaryOperatorMutator,!=,==,0,0.77057356,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
954,Node.java,reparentChild,void reparentChild(Node child),287,288,9132,9135,BinaryOperatorMutator,!=,=,2,0.035261247,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
955,Node.java,reparentChild,void reparentChild(Node child),287,288,9132,9135,BinaryOperatorMutator,!=,==,3,0.0032792753,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
956,Node.java,reparentChild,void reparentChild(Node child),287,288,9132,9135,BinaryOperatorMutator,!=,===,4,0.0017207321,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
957,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9131,IdentifierMutator-Variable,child.parentNode,child,0,0.9584596,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
958,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9131,IdentifierMutator-Variable,child.parentNode,parent,1,0.03705338,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
959,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9131,IdentifierMutator-Variable,child.parentNode,child,2,5.5663986E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
960,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9131,IdentifierMutator-Variable,child.parentNode,children,3,3.7842864E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
961,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9131,IdentifierMutator-Variable,child.parentNode,current,4,1.74051E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
962,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9120,IdentifierMutator-Variable,child,parent,1,2.8793898E-4,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
963,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9120,IdentifierMutator-Variable,child,Child,3,6.7865745E-5,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
964,Node.java,reparentChild,void reparentChild(Node child),287,288,9116,9120,IdentifierMutator-Variable,child,children,4,4.1062594E-5,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
965,Node.java,reparentChild,void reparentChild(Node child),287,288,9122,9131,FieldReferenceMutator,parentNode,parent,0,0.9955272,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
966,Node.java,reparentChild,void reparentChild(Node child),287,288,9122,9131,FieldReferenceMutator,parentNode,node,1,0.0013118701,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
967,Node.java,reparentChild,void reparentChild(Node child),287,288,9122,9131,FieldReferenceMutator,parentNode,Parent,2,4.1415234E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
968,Node.java,reparentChild,void reparentChild(Node child),287,288,9122,9131,FieldReferenceMutator,parentNode,id,3,2.1990096E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
969,Node.java,reparentChild,void reparentChild(Node child),287,288,9122,9131,FieldReferenceMutator,parentNode,parents,4,1.995197E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
970,Node.java,reparentChild,void reparentChild(Node child),287,288,9136,9139,IdentifierMutator-Literal,null,this,1,0.06865001,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
971,Node.java,reparentChild,void reparentChild(Node child),287,288,9136,9139,IdentifierMutator-Literal,null,node,2,0.0032338668,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
972,Node.java,reparentChild,void reparentChild(Node child),287,288,9136,9139,IdentifierMutator-Literal,null,child,3,0.0024083678,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
973,Node.java,reparentChild,void reparentChild(Node child),287,288,9136,9139,IdentifierMutator-Literal,null,parent,4,0.0014327783,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
974,Node.java,reparentChild,void reparentChild(Node child),287,289,9171,9181,MethodCallMutator,removeChild,remove,0,0.66167134,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
975,Node.java,reparentChild,void reparentChild(Node child),287,289,9171,9181,MethodCallMutator,removeChild,add,1,0.06875305,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
976,Node.java,reparentChild,void reparentChild(Node child),287,289,9171,9181,MethodCallMutator,removeChild,replace,2,0.060254905,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
977,Node.java,reparentChild,void reparentChild(Node child),287,289,9171,9181,MethodCallMutator,removeChild,append,3,0.052979283,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
978,Node.java,reparentChild,void reparentChild(Node child),287,289,9171,9181,MethodCallMutator,removeChild,close,4,0.017736023,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
979,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9169,IdentifierMutator-Variable,child.parentNode,parent,0,0.68368584,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
980,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9169,IdentifierMutator-Variable,child.parentNode,this,1,0.2013947,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
981,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9169,IdentifierMutator-Variable,child.parentNode,node,2,0.039998427,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
982,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9169,IdentifierMutator-Variable,child.parentNode,parent,3,0.0174974,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
983,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9169,IdentifierMutator-Variable,child.parentNode,super,4,0.01068845,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
984,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9158,IdentifierMutator-Variable,child,parent,2,0.0019420455,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
985,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9158,IdentifierMutator-Variable,child,parent,3,0.0012669096,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
986,Node.java,reparentChild,void reparentChild(Node child),287,289,9154,9158,IdentifierMutator-Variable,child,this,4,6.3990464E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
987,Node.java,reparentChild,void reparentChild(Node child),287,289,9160,9169,FieldReferenceMutator,parentNode,parent,0,0.98578644,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
988,Node.java,reparentChild,void reparentChild(Node child),287,289,9160,9169,FieldReferenceMutator,parentNode,node,1,0.010530685,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
989,Node.java,reparentChild,void reparentChild(Node child),287,289,9160,9169,FieldReferenceMutator,parentNode,Parent,2,6.451779E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
990,Node.java,reparentChild,void reparentChild(Node child),287,289,9160,9169,FieldReferenceMutator,parentNode,next,3,3.1881413E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
991,Node.java,reparentChild,void reparentChild(Node child),287,289,9160,9169,FieldReferenceMutator,parentNode,body,4,2.0775091E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
992,Node.java,reparentChild,void reparentChild(Node child),287,289,9183,9187,IdentifierMutator-Variable,child,this,1,0.0045624888,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
993,Node.java,reparentChild,void reparentChild(Node child),287,289,9183,9187,IdentifierMutator-Variable,child,parent,2,6.126921E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
994,Node.java,reparentChild,void reparentChild(Node child),287,289,9183,9187,IdentifierMutator-Variable,child,self,4,2.7037147E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
995,Node.java,reparentChild,void reparentChild(Node child),287,290,9205,9217,MethodCallMutator,setParentNode,remove,0,0.26628438,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
996,Node.java,reparentChild,void reparentChild(Node child),287,290,9205,9217,MethodCallMutator,setParentNode,append,1,0.16835013,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
997,Node.java,reparentChild,void reparentChild(Node child),287,290,9205,9217,MethodCallMutator,setParentNode,replace,2,0.06282319,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
998,Node.java,reparentChild,void reparentChild(Node child),287,290,9205,9217,MethodCallMutator,setParentNode,add,3,0.062197953,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
999,Node.java,reparentChild,void reparentChild(Node child),287,290,9205,9217,MethodCallMutator,setParentNode,parent,4,0.04399304,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1000,Node.java,reparentChild,void reparentChild(Node child),287,290,9199,9203,IdentifierMutator-Variable,child,parent,2,3.052656E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1001,Node.java,reparentChild,void reparentChild(Node child),287,290,9199,9203,IdentifierMutator-Variable,child,Child,3,2.2606326E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1002,Node.java,reparentChild,void reparentChild(Node child),287,290,9199,9203,IdentifierMutator-Variable,child,Child,4,1.9731923E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1003,Node.java,reparentChild,void reparentChild(Node child),287,290,9219,9222,IdentifierMutator-ThisAccess,this,null,0,0.6040242,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1004,Node.java,reparentChild,void reparentChild(Node child),287,290,9219,9222,IdentifierMutator-ThisAccess,this,parent,1,0.22996068,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1005,Node.java,reparentChild,void reparentChild(Node child),287,290,9219,9222,IdentifierMutator-ThisAccess,this,node,3,0.014474745,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1006,Node.java,reparentChild,void reparentChild(Node child),287,290,9219,9222,IdentifierMutator-ThisAccess,this,child,4,0.012074523,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1007,Node.java,reindexChildren,void reindexChildren(),293,294,9295,9295,IdentifierMutator-Literal,0,1,1,0.0050304527,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1008,Node.java,reindexChildren,void reindexChildren(),293,294,9295,9295,IdentifierMutator-Literal,0,1,3,1.9424655E-4,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1009,Node.java,reindexChildren,void reindexChildren(),293,294,9295,9295,IdentifierMutator-Literal,0,2,4,1.6409275E-4,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1010,Node.java,reindexChildren,void reindexChildren(),293,294,9299,9301,BinaryOperatorMutator,<,++,2,0.0031557025,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1011,Node.java,reindexChildren,void reindexChildren(),293,294,9299,9301,BinaryOperatorMutator,<,.<,3,8.593593E-4,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1012,Node.java,reindexChildren,void reindexChildren(),293,294,9299,9301,BinaryOperatorMutator,<,<=,4,7.912365E-4,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1013,Node.java,reindexChildren,void reindexChildren(),293,294,9298,9298,IdentifierMutator-Variable,i,I,2,5.2263997E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1014,Node.java,reindexChildren,void reindexChildren(),293,294,9298,9298,IdentifierMutator-Variable,i,I,3,2.3807654E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1015,Node.java,reindexChildren,void reindexChildren(),293,294,9298,9298,IdentifierMutator-Variable,i,0,4,1.13706155E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1016,Node.java,reindexChildren,void reindexChildren(),293,294,9313,9316,MethodCallMutator,size,length,1,0.0027402584,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1017,Node.java,reindexChildren,void reindexChildren(),293,294,9313,9316,MethodCallMutator,size,count,3,7.070364E-5,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1018,Node.java,reindexChildren,void reindexChildren(),293,294,9313,9316,MethodCallMutator,size,rows,4,5.3366242E-5,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1019,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,IdentifierMutator-Variable,childNodes,children,0,0.44247404,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1020,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,IdentifierMutator-Variable,childNodes,nodes,1,0.21455598,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1021,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,IdentifierMutator-Variable,childNodes,siblings,2,0.14188778,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1022,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,IdentifierMutator-Variable,childNodes,node,3,0.016669948,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1023,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,IdentifierMutator-Variable,childNodes,child,4,0.013674701,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1024,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,FieldReferenceMutator,childNodes,children,0,0.44247404,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1025,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,FieldReferenceMutator,childNodes,nodes,1,0.21455598,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1026,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,FieldReferenceMutator,childNodes,siblings,2,0.14188778,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1027,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,FieldReferenceMutator,childNodes,node,3,0.016669948,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1028,Node.java,reindexChildren,void reindexChildren(),293,294,9302,9311,FieldReferenceMutator,childNodes,child,4,0.013674701,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1029,Node.java,reindexChildren,void reindexChildren(),293,294,9322,9323,UnaryOperatorMutator,++,++),2,0.0052344147,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1030,Node.java,reindexChildren,void reindexChildren(),293,294,9322,9323,UnaryOperatorMutator,++,++;,3,6.591635E-4,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1031,Node.java,reindexChildren,void reindexChildren(),293,294,9322,9323,UnaryOperatorMutator,++,--,4,1.7942673E-4,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1032,Node.java,reindexChildren,void reindexChildren(),293,294,9321,9321,IdentifierMutator-Variable,i,I,2,8.865654E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1033,Node.java,reindexChildren,void reindexChildren(),293,294,9321,9321,IdentifierMutator-Variable,i,I,3,3.300491E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1034,Node.java,reindexChildren,void reindexChildren(),293,294,9321,9321,IdentifierMutator-Variable,i,,4,2.49413E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1035,Node.java,reindexChildren,void reindexChildren(),293,295,9358,9372,MethodCallMutator,setSiblingIndex,remove,0,0.6233273,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1036,Node.java,reindexChildren,void reindexChildren(),293,295,9358,9372,MethodCallMutator,setSiblingIndex,delete,1,0.07899636,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1037,Node.java,reindexChildren,void reindexChildren(),293,295,9358,9372,MethodCallMutator,setSiblingIndex,index,2,0.044604644,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1038,Node.java,reindexChildren,void reindexChildren(),293,295,9358,9372,MethodCallMutator,setSiblingIndex,add,3,0.022157516,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1039,Node.java,reindexChildren,void reindexChildren(),293,295,9358,9372,MethodCallMutator,setSiblingIndex,push,4,0.0140774865,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1040,Node.java,reindexChildren,void reindexChildren(),293,295,9351,9353,MethodCallMutator,get,item,1,0.065875046,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1041,Node.java,reindexChildren,void reindexChildren(),293,295,9351,9353,MethodCallMutator,get,element,2,0.0028545281,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1042,Node.java,reindexChildren,void reindexChildren(),293,295,9351,9353,MethodCallMutator,get,atom,3,0.0024720286,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1043,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,IdentifierMutator-Variable,childNodes,children,0,0.7157592,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1044,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,IdentifierMutator-Variable,childNodes,nodes,1,0.10071826,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1045,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,IdentifierMutator-Variable,childNodes,child,2,0.035208497,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1046,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,IdentifierMutator-Variable,childNodes,siblings,3,0.021306414,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1047,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,IdentifierMutator-Variable,childNodes,children,4,0.012841235,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1048,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,FieldReferenceMutator,childNodes,children,0,0.7157592,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1049,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,FieldReferenceMutator,childNodes,nodes,1,0.10071826,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1050,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,FieldReferenceMutator,childNodes,child,2,0.035208497,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1051,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,FieldReferenceMutator,childNodes,siblings,3,0.021306414,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1052,Node.java,reindexChildren,void reindexChildren(),293,295,9340,9349,FieldReferenceMutator,childNodes,children,4,0.012841235,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1053,Node.java,reindexChildren,void reindexChildren(),293,295,9355,9355,IdentifierMutator-Variable,i,0,1,0.04208523,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1054,Node.java,reindexChildren,void reindexChildren(),293,295,9355,9355,IdentifierMutator-Variable,i,1,3,7.4050826E-4,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1055,Node.java,reindexChildren,void reindexChildren(),293,295,9355,9355,IdentifierMutator-Variable,i,j,4,5.8988825E-4,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1056,Node.java,reindexChildren,void reindexChildren(),293,295,9374,9374,IdentifierMutator-Variable,i,index,1,0.08465901,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1057,Node.java,reindexChildren,void reindexChildren(),293,295,9374,9374,IdentifierMutator-Variable,i,0,2,0.034393284,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1058,Node.java,reindexChildren,void reindexChildren(),293,295,9374,9374,IdentifierMutator-Variable,i,1,3,0.008226286,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1059,Node.java,reindexChildren,void reindexChildren(),293,295,9374,9374,IdentifierMutator-Variable,i,x,4,0.004234545,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1060,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9630,9639,MethodCallMutator,childNodes,children,0,0.8199479,parent().<mask>(),"List<Node> siblingNodes() {
        return parent().<mask>(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1061,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9630,9639,MethodCallMutator,childNodes,iblings,1,0.02205142,parent().<mask>(),"List<Node> siblingNodes() {
        return parent().<mask>(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1062,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9630,9639,MethodCallMutator,childNodes,node,2,0.016885625,parent().<mask>(),"List<Node> siblingNodes() {
        return parent().<mask>(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1063,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9630,9639,MethodCallMutator,childNodes,parents,3,0.012134037,parent().<mask>(),"List<Node> siblingNodes() {
        return parent().<mask>(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1064,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9630,9639,MethodCallMutator,childNodes,sort,4,0.010842434,parent().<mask>(),"List<Node> siblingNodes() {
        return parent().<mask>(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1065,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9621,9626,MethodCallMutator,parent,node,0,0.31735703,<mask>(),"List<Node> siblingNodes() {
        return<mask>().childNodes(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1066,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9621,9626,MethodCallMutator,parent,self,1,0.23012178,<mask>(),"List<Node> siblingNodes() {
        return<mask>().childNodes(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1067,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9621,9626,MethodCallMutator,parent,this,3,0.043429695,<mask>(),"List<Node> siblingNodes() {
        return<mask>().childNodes(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1068,Node.java,siblingNodes,List<Node> siblingNodes(),303,304,9621,9626,MethodCallMutator,parent,root,4,0.03789422,<mask>(),"List<Node> siblingNodes() {
        return<mask>().childNodes(); // TODO: should this strip out this node? i.e. not a sibling of self?
    }"
1069,Node.java,nextSibling,Node nextSibling(),311,312,9889,9892,BinaryOperatorMutator,==,=,2,0.040995438,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1070,Node.java,nextSibling,Node nextSibling(),311,312,9889,9892,BinaryOperatorMutator,==,!=,3,0.007977399,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1071,Node.java,nextSibling,Node nextSibling(),311,312,9889,9892,BinaryOperatorMutator,==,.,4,0.0060582682,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1072,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,IdentifierMutator-Variable,parentNode,parent,0,0.84937376,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1073,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,IdentifierMutator-Variable,parentNode,root,1,0.066754095,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1074,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,IdentifierMutator-Variable,parentNode,node,2,0.019058581,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1075,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,IdentifierMutator-Variable,parentNode,this,3,0.007973294,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1076,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,IdentifierMutator-Variable,parentNode,child,4,0.007381598,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1077,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,FieldReferenceMutator,parentNode,parent,0,0.84937376,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1078,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,FieldReferenceMutator,parentNode,root,1,0.066754095,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1079,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,FieldReferenceMutator,parentNode,node,2,0.019058581,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1080,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,FieldReferenceMutator,parentNode,this,3,0.007973294,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1081,Node.java,nextSibling,Node nextSibling(),311,312,9879,9888,FieldReferenceMutator,parentNode,child,4,0.007381598,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1082,Node.java,nextSibling,Node nextSibling(),311,312,9893,9896,IdentifierMutator-Literal,null,this,1,0.032957185,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1083,Node.java,nextSibling,Node nextSibling(),311,312,9893,9896,IdentifierMutator-Literal,null,root,2,0.028565131,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1084,Node.java,nextSibling,Node nextSibling(),311,312,9893,9896,IdentifierMutator-Literal,null,node,3,0.0069953417,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1085,Node.java,nextSibling,Node nextSibling(),311,312,9893,9896,IdentifierMutator-Literal,null,parent,4,0.0017088271,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1086,Node.java,nextSibling,Node nextSibling(),311,313,9918,9921,IdentifierMutator-Literal,null,this,1,0.0056259395,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1087,Node.java,nextSibling,Node nextSibling(),311,313,9918,9921,IdentifierMutator-Literal,null,root,2,0.0032886649,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1088,Node.java,nextSibling,Node nextSibling(),311,313,9918,9921,IdentifierMutator-Literal,null,node,3,0.0021232287,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1089,Node.java,nextSibling,Node nextSibling(),311,313,9918,9921,IdentifierMutator-Literal,null,parent,4,0.001829252,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1090,Node.java,nextSibling,Node nextSibling(),311,315,9971,9991,IdentifierMutator-Variable,parentNode.childNodes,siblings,0,0.5334479,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1091,Node.java,nextSibling,Node nextSibling(),311,315,9971,9991,IdentifierMutator-Variable,parentNode.childNodes,null,1,0.16358577,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1092,Node.java,nextSibling,Node nextSibling(),311,315,9971,9991,IdentifierMutator-Variable,parentNode.childNodes,list,2,0.07232898,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1093,Node.java,nextSibling,Node nextSibling(),311,315,9971,9991,IdentifierMutator-Variable,parentNode.childNodes,children,3,0.04773046,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1094,Node.java,nextSibling,Node nextSibling(),311,315,9971,9991,IdentifierMutator-Variable,parentNode.childNodes,nodes,4,0.028207662,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1095,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,IdentifierMutator-Variable,parentNode,parent,0,0.42096812,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1096,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,IdentifierMutator-Variable,parentNode,node,1,0.32583547,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1097,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,IdentifierMutator-Variable,parentNode,this,2,0.10110435,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1098,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,IdentifierMutator-Variable,parentNode,root,3,0.051981505,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1099,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,IdentifierMutator-Variable,parentNode,child,4,0.005935973,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1100,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,FieldReferenceMutator,parentNode,parent,0,0.42096812,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1101,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,FieldReferenceMutator,parentNode,node,1,0.32583547,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1102,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,FieldReferenceMutator,parentNode,this,2,0.10110435,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1103,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,FieldReferenceMutator,parentNode,root,3,0.051981505,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1104,Node.java,nextSibling,Node nextSibling(),311,315,9971,9980,FieldReferenceMutator,parentNode,child,4,0.005935973,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1105,Node.java,nextSibling,Node nextSibling(),311,315,9982,9991,FieldReferenceMutator,childNodes,children,0,0.9582523,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1106,Node.java,nextSibling,Node nextSibling(),311,315,9982,9991,FieldReferenceMutator,childNodes,iblings,1,0.0066903615,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1107,Node.java,nextSibling,Node nextSibling(),311,315,9982,9991,FieldReferenceMutator,childNodes,siblings,2,0.00617557,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1108,Node.java,nextSibling,Node nextSibling(),311,315,9982,9991,FieldReferenceMutator,childNodes,parents,3,0.0050757886,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1109,Node.java,nextSibling,Node nextSibling(),311,315,9982,9991,FieldReferenceMutator,childNodes,child,4,0.003489966,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1110,Node.java,nextSibling,Node nextSibling(),311,316,10018,10029,MethodCallMutator,siblingIndex,index,0,0.8886482,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1111,Node.java,nextSibling,Node nextSibling(),311,316,10018,10029,MethodCallMutator,siblingIndex,size,1,0.053792402,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1112,Node.java,nextSibling,Node nextSibling(),311,316,10018,10029,MethodCallMutator,siblingIndex,next,2,0.019602245,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1113,Node.java,nextSibling,Node nextSibling(),311,316,10018,10029,MethodCallMutator,siblingIndex,position,3,0.004804978,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1114,Node.java,nextSibling,Node nextSibling(),311,316,10018,10029,MethodCallMutator,siblingIndex,Index,4,0.0042394404,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1115,Node.java,nextSibling,Node nextSibling(),311,317,10051,10057,MethodCallMutator,notNull,valid,0,0.13627431,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1116,Node.java,nextSibling,Node nextSibling(),311,317,10051,10057,MethodCallMutator,notNull,check,1,0.06922914,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1117,Node.java,nextSibling,Node nextSibling(),311,317,10051,10057,MethodCallMutator,notNull,validate,2,0.036454204,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1118,Node.java,nextSibling,Node nextSibling(),311,317,10051,10057,MethodCallMutator,notNull,range,3,0.02676765,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1119,Node.java,nextSibling,Node nextSibling(),311,317,10051,10057,MethodCallMutator,notNull,id,4,0.026717307,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1120,Node.java,nextSibling,Node nextSibling(),311,317,10059,10063,IdentifierMutator-Variable,index,parent,1,0.011344735,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1121,Node.java,nextSibling,Node nextSibling(),311,317,10059,10063,IdentifierMutator-Variable,index,child,2,0.0011739593,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1122,Node.java,nextSibling,Node nextSibling(),311,317,10059,10063,IdentifierMutator-Variable,index,Index,3,8.8627276E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1123,Node.java,nextSibling,Node nextSibling(),311,317,10059,10063,IdentifierMutator-Variable,index,node,4,6.688866E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1124,Node.java,nextSibling,Node nextSibling(),311,318,10094,10096,BinaryOperatorMutator,>,==,0,0.30608848,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1125,Node.java,nextSibling,Node nextSibling(),311,318,10094,10096,BinaryOperatorMutator,>,>=,3,0.07044837,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1126,Node.java,nextSibling,Node nextSibling(),311,318,10094,10096,BinaryOperatorMutator,>,<,4,0.045181043,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1127,Node.java,nextSibling,Node nextSibling(),311,318,10088,10091,MethodCallMutator,size,length,1,3.091651E-4,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1128,Node.java,nextSibling,Node nextSibling(),311,318,10088,10091,MethodCallMutator,size,position,3,7.075142E-5,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1129,Node.java,nextSibling,Node nextSibling(),311,318,10088,10091,MethodCallMutator,size,count,4,5.3955384E-5,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1130,Node.java,nextSibling,Node nextSibling(),311,318,10079,10086,IdentifierMutator-Variable,siblings,iblings,1,0.10411446,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1131,Node.java,nextSibling,Node nextSibling(),311,318,10079,10086,IdentifierMutator-Variable,siblings,children,2,0.06727586,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1132,Node.java,nextSibling,Node nextSibling(),311,318,10079,10086,IdentifierMutator-Variable,siblings,parents,3,0.06267906,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1133,Node.java,nextSibling,Node nextSibling(),311,318,10079,10086,IdentifierMutator-Variable,siblings,names,4,0.012541719,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1134,Node.java,nextSibling,Node nextSibling(),311,318,10102,10102,BinaryOperatorMutator,+,-,1,0.007443162,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
1135,Node.java,nextSibling,Node nextSibling(),311,318,10102,10102,BinaryOperatorMutator,+,)+,3,4.1318513E-4,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
1136,Node.java,nextSibling,Node nextSibling(),311,318,10102,10102,BinaryOperatorMutator,+,Plus,4,5.8608708E-5,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
1137,Node.java,nextSibling,Node nextSibling(),311,318,10097,10101,IdentifierMutator-Variable,index,1,2,1.3167582E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1138,Node.java,nextSibling,Node nextSibling(),311,318,10097,10101,IdentifierMutator-Variable,index,0,3,1.24505505E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1139,Node.java,nextSibling,Node nextSibling(),311,318,10097,10101,IdentifierMutator-Variable,index,i,4,1.3467217E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1140,Node.java,nextSibling,Node nextSibling(),311,318,10103,10103,IdentifierMutator-Literal,1,2,1,0.006080939,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
1141,Node.java,nextSibling,Node nextSibling(),311,318,10103,10103,IdentifierMutator-Literal,1,0,3,0.0017865027,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
1142,Node.java,nextSibling,Node nextSibling(),311,318,10103,10103,IdentifierMutator-Literal,1,3,4,4.428576E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
1143,Node.java,nextSibling,Node nextSibling(),311,319,10134,10136,MethodCallMutator,get,item,1,0.035478618,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
1144,Node.java,nextSibling,Node nextSibling(),311,319,10134,10136,MethodCallMutator,get,remove,2,0.009331637,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
1145,Node.java,nextSibling,Node nextSibling(),311,319,10134,10136,MethodCallMutator,get,skip,3,0.0034046497,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
1146,Node.java,nextSibling,Node nextSibling(),311,319,10134,10136,MethodCallMutator,get,slice,4,0.001240925,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
1147,Node.java,nextSibling,Node nextSibling(),311,319,10125,10132,IdentifierMutator-Variable,siblings,sibling,1,1.9526729E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
1148,Node.java,nextSibling,Node nextSibling(),311,319,10125,10132,IdentifierMutator-Variable,siblings,children,2,1.579941E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
1149,Node.java,nextSibling,Node nextSibling(),311,319,10125,10132,IdentifierMutator-Variable,siblings,nodes,3,6.7203164E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
1150,Node.java,nextSibling,Node nextSibling(),311,319,10125,10132,IdentifierMutator-Variable,siblings,iblings,4,4.9416217E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
1151,Node.java,nextSibling,Node nextSibling(),311,319,10143,10143,BinaryOperatorMutator,+,-,1,0.033819813,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1152,Node.java,nextSibling,Node nextSibling(),311,319,10143,10143,BinaryOperatorMutator,+,)+,2,0.001370285,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1153,Node.java,nextSibling,Node nextSibling(),311,319,10143,10143,BinaryOperatorMutator,+,-,4,2.9919533E-5,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1154,Node.java,nextSibling,Node nextSibling(),311,319,10138,10142,IdentifierMutator-Variable,index,Index,2,1.8276772E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
1155,Node.java,nextSibling,Node nextSibling(),311,319,10138,10142,IdentifierMutator-Variable,index,i,3,1.0225483E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
1156,Node.java,nextSibling,Node nextSibling(),311,319,10138,10142,IdentifierMutator-Variable,index,x,4,9.945304E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
1157,Node.java,nextSibling,Node nextSibling(),311,319,10144,10144,IdentifierMutator-Literal,1,2,1,0.004820987,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
1158,Node.java,nextSibling,Node nextSibling(),311,319,10144,10144,IdentifierMutator-Literal,1,0,3,3.442998E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
1159,Node.java,nextSibling,Node nextSibling(),311,319,10144,10144,IdentifierMutator-Literal,1,3,4,1.2013961E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
1160,Node.java,nextSibling,Node nextSibling(),311,321,10180,10183,IdentifierMutator-Literal,null,sibling,1,0.066986375,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
1161,Node.java,nextSibling,Node nextSibling(),311,321,10180,10183,IdentifierMutator-Literal,null,parent,2,0.0139356125,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
1162,Node.java,nextSibling,Node nextSibling(),311,321,10180,10183,IdentifierMutator-Literal,null,node,3,0.011974564,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
1163,Node.java,nextSibling,Node nextSibling(),311,321,10180,10183,IdentifierMutator-Literal,null,root,4,0.0070348526,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
1164,Node.java,previousSibling,Node previousSibling(),328,329,10386,10406,IdentifierMutator-Variable,parentNode.childNodes,list,0,0.26738477,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1165,Node.java,previousSibling,Node previousSibling(),328,329,10386,10406,IdentifierMutator-Variable,parentNode.childNodes,siblings,1,0.26092416,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1166,Node.java,previousSibling,Node previousSibling(),328,329,10386,10406,IdentifierMutator-Variable,parentNode.childNodes,nodes,2,0.1164807,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1167,Node.java,previousSibling,Node previousSibling(),328,329,10386,10406,IdentifierMutator-Variable,parentNode.childNodes,children,3,0.07558292,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1168,Node.java,previousSibling,Node previousSibling(),328,329,10386,10406,IdentifierMutator-Variable,parentNode.childNodes,null,4,0.044798445,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1169,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,IdentifierMutator-Variable,parentNode,node,0,0.4146918,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1170,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,IdentifierMutator-Variable,parentNode,this,1,0.14981218,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1171,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,IdentifierMutator-Variable,parentNode,parent,2,0.105056494,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1172,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,IdentifierMutator-Variable,parentNode,root,3,0.032434214,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1173,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,IdentifierMutator-Variable,parentNode,current,4,0.02218463,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1174,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,FieldReferenceMutator,parentNode,node,0,0.4146918,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1175,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,FieldReferenceMutator,parentNode,this,1,0.14981218,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1176,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,FieldReferenceMutator,parentNode,parent,2,0.105056494,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1177,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,FieldReferenceMutator,parentNode,root,3,0.032434214,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1178,Node.java,previousSibling,Node previousSibling(),328,329,10386,10395,FieldReferenceMutator,parentNode,current,4,0.02218463,<mask>,"Node previousSibling() {
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1179,Node.java,previousSibling,Node previousSibling(),328,329,10397,10406,FieldReferenceMutator,childNodes,children,0,0.9483635,parentNode.<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1180,Node.java,previousSibling,Node previousSibling(),328,329,10397,10406,FieldReferenceMutator,childNodes,iblings,1,0.012517955,parentNode.<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1181,Node.java,previousSibling,Node previousSibling(),328,329,10397,10406,FieldReferenceMutator,childNodes,siblings,2,0.007759674,parentNode.<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1182,Node.java,previousSibling,Node previousSibling(),328,329,10397,10406,FieldReferenceMutator,childNodes,parents,3,0.007483072,parentNode.<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1183,Node.java,previousSibling,Node previousSibling(),328,329,10397,10406,FieldReferenceMutator,childNodes,child,4,0.0053751124,parentNode.<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1184,Node.java,previousSibling,Node previousSibling(),328,330,10433,10444,MethodCallMutator,siblingIndex,index,0,0.920983,<mask>(),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1185,Node.java,previousSibling,Node previousSibling(),328,330,10433,10444,MethodCallMutator,siblingIndex,previous,1,0.018220201,<mask>(),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1186,Node.java,previousSibling,Node previousSibling(),328,330,10433,10444,MethodCallMutator,siblingIndex,position,2,0.0047769444,<mask>(),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1187,Node.java,previousSibling,Node previousSibling(),328,330,10433,10444,MethodCallMutator,siblingIndex,size,3,0.0047368594,<mask>(),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1188,Node.java,previousSibling,Node previousSibling(),328,330,10433,10444,MethodCallMutator,siblingIndex,current,4,0.004328577,<mask>(),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1189,Node.java,previousSibling,Node previousSibling(),328,331,10466,10472,MethodCallMutator,notNull,index,0,0.21022685,Validate.<mask>(index),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1190,Node.java,previousSibling,Node previousSibling(),328,331,10466,10472,MethodCallMutator,notNull,index,1,0.06611347,Validate.<mask>(index),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1191,Node.java,previousSibling,Node previousSibling(),328,331,10466,10472,MethodCallMutator,notNull,Index,2,0.038402684,Validate.<mask>(index),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1192,Node.java,previousSibling,Node previousSibling(),328,331,10466,10472,MethodCallMutator,notNull,negative,3,0.03534482,Validate.<mask>(index),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1193,Node.java,previousSibling,Node previousSibling(),328,331,10466,10472,MethodCallMutator,notNull,int,4,0.03327357,Validate.<mask>(index),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1194,Node.java,previousSibling,Node previousSibling(),328,331,10474,10478,IdentifierMutator-Variable,index,parent,1,0.03329436,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1195,Node.java,previousSibling,Node previousSibling(),328,331,10474,10478,IdentifierMutator-Variable,index,child,2,0.0011195344,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1196,Node.java,previousSibling,Node previousSibling(),328,331,10474,10478,IdentifierMutator-Variable,index,node,3,0.0010486566,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1197,Node.java,previousSibling,Node previousSibling(),328,331,10474,10478,IdentifierMutator-Variable,index,element,4,9.540881E-4,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1198,Node.java,previousSibling,Node previousSibling(),328,332,10499,10501,BinaryOperatorMutator,>,==,2,0.08908323,index <mask> 0,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
1199,Node.java,previousSibling,Node previousSibling(),328,332,10499,10501,BinaryOperatorMutator,>,>=,3,0.048143957,index <mask> 0,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
1200,Node.java,previousSibling,Node previousSibling(),328,332,10499,10501,BinaryOperatorMutator,>,-,4,0.01690244,index <mask> 0,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
1201,Node.java,previousSibling,Node previousSibling(),328,332,10494,10498,IdentifierMutator-Variable,index,Index,1,4.8308776E-4,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1202,Node.java,previousSibling,Node previousSibling(),328,332,10494,10498,IdentifierMutator-Variable,index,size,3,3.432759E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1203,Node.java,previousSibling,Node previousSibling(),328,332,10494,10498,IdentifierMutator-Variable,index,parent,4,2.6205415E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
1204,Node.java,previousSibling,Node previousSibling(),328,332,10502,10502,IdentifierMutator-Literal,0,1,1,0.06782875,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
1205,Node.java,previousSibling,Node previousSibling(),328,332,10502,10502,IdentifierMutator-Literal,0,null,3,0.0017357818,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
1206,Node.java,previousSibling,Node previousSibling(),328,332,10502,10502,IdentifierMutator-Literal,0,index,4,6.8673404E-4,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
1207,Node.java,previousSibling,Node previousSibling(),328,333,10533,10535,MethodCallMutator,get,item,1,0.060571566,siblings.<mask>(index - 1),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
1208,Node.java,previousSibling,Node previousSibling(),328,333,10533,10535,MethodCallMutator,get,remove,2,0.0028910667,siblings.<mask>(index - 1),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
1209,Node.java,previousSibling,Node previousSibling(),328,333,10533,10535,MethodCallMutator,get,column,3,9.972963E-4,siblings.<mask>(index - 1),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
1210,Node.java,previousSibling,Node previousSibling(),328,333,10533,10535,MethodCallMutator,get,slice,4,9.972792E-4,siblings.<mask>(index - 1),"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
1211,Node.java,previousSibling,Node previousSibling(),328,333,10524,10531,IdentifierMutator-Variable,siblings,sibling,1,4.27139E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
1212,Node.java,previousSibling,Node previousSibling(),328,333,10524,10531,IdentifierMutator-Variable,siblings,children,2,1.9176836E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
1213,Node.java,previousSibling,Node previousSibling(),328,333,10524,10531,IdentifierMutator-Variable,siblings,nodes,3,1.7351449E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
1214,Node.java,previousSibling,Node previousSibling(),328,333,10524,10531,IdentifierMutator-Variable,siblings,iblings,4,2.4784158E-6,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
1215,Node.java,previousSibling,Node previousSibling(),328,333,10542,10542,BinaryOperatorMutator,-,+,2,0.007994499,index <mask> 1,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1216,Node.java,previousSibling,Node previousSibling(),328,333,10542,10542,BinaryOperatorMutator,-,)-,3,0.0015208493,index <mask> 1,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1217,Node.java,previousSibling,Node previousSibling(),328,333,10542,10542,BinaryOperatorMutator,-,-$,4,3.5686622E-4,index <mask> 1,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
1218,Node.java,previousSibling,Node previousSibling(),328,333,10537,10541,IdentifierMutator-Variable,index,Index,1,2.2197214E-4,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
1219,Node.java,previousSibling,Node previousSibling(),328,333,10537,10541,IdentifierMutator-Variable,index,x,3,4.2123855E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
1220,Node.java,previousSibling,Node previousSibling(),328,333,10537,10541,IdentifierMutator-Variable,index,i,4,1.8270279E-5,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
1221,Node.java,previousSibling,Node previousSibling(),328,333,10543,10543,IdentifierMutator-Literal,1,0,1,0.018620716,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
1222,Node.java,previousSibling,Node previousSibling(),328,333,10543,10543,IdentifierMutator-Literal,1,offset,3,0.0026955754,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
1223,Node.java,previousSibling,Node previousSibling(),328,333,10543,10543,IdentifierMutator-Literal,1,2,4,0.002644664,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
1224,Node.java,previousSibling,Node previousSibling(),328,335,10579,10582,IdentifierMutator-Literal,null,sibling,1,0.1099192,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
1225,Node.java,previousSibling,Node previousSibling(),328,335,10579,10582,IdentifierMutator-Literal,null,parent,2,0.028564636,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
1226,Node.java,previousSibling,Node previousSibling(),328,335,10579,10582,IdentifierMutator-Literal,null,node,3,0.025188977,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
1227,Node.java,previousSibling,Node previousSibling(),328,335,10579,10582,IdentifierMutator-Literal,null,root,4,0.0074150227,<mask>,"Node previousSibling() {
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
1228,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,IdentifierMutator-Variable,siblingIndex,index,0,0.36243558,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1229,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,IdentifierMutator-Variable,siblingIndex,0,1,0.14441584,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1230,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,IdentifierMutator-Variable,siblingIndex,sibling,2,0.1275713,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1231,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,IdentifierMutator-Variable,siblingIndex,i,3,0.12038843,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1232,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,IdentifierMutator-Variable,siblingIndex,1,4,0.108904496,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1233,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,FieldReferenceMutator,siblingIndex,index,0,0.36243558,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1234,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,FieldReferenceMutator,siblingIndex,0,1,0.14441584,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1235,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,FieldReferenceMutator,siblingIndex,sibling,2,0.1275713,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1236,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,FieldReferenceMutator,siblingIndex,i,3,0.12038843,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1237,Node.java,siblingIndex,Integer siblingIndex(),344,345,10885,10896,FieldReferenceMutator,siblingIndex,1,4,0.108904496,<mask>,"Integer siblingIndex() {
        return<mask>;
    }"
1238,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10990,10990,AssignmentMutator,this.siblingIndex=siblingIndex,|,0,0.8935026,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
1239,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10990,10990,AssignmentMutator,this.siblingIndex=siblingIndex,^,1,0.052176204,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
1240,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10990,10990,AssignmentMutator,this.siblingIndex=siblingIndex,*,2,0.034481168,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
1241,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10990,10990,AssignmentMutator,this.siblingIndex=siblingIndex,&,3,0.005468068,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
1242,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10990,10990,AssignmentMutator,this.siblingIndex=siblingIndex,/,4,0.0040113283,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
1243,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10989,IdentifierMutator-Variable,this.siblingIndex,index,0,0.8769896,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
1244,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10989,IdentifierMutator-Variable,this.siblingIndex,sibling,1,0.019961074,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
1245,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10989,IdentifierMutator-Variable,this.siblingIndex,i,2,0.01448176,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
1246,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10989,IdentifierMutator-Variable,this.siblingIndex,offset,3,0.005330489,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
1247,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10989,IdentifierMutator-Variable,this.siblingIndex,position,4,0.0048736604,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
1248,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10976,IdentifierMutator-ThisAccess,this,style,1,0.011455207,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
1249,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10976,IdentifierMutator-ThisAccess,this,super,2,0.007490424,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
1250,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10976,IdentifierMutator-ThisAccess,this,m,3,0.0043311785,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
1251,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10973,10976,IdentifierMutator-ThisAccess,this,parent,4,0.0042267134,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
1252,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10978,10989,FieldReferenceMutator,siblingIndex,index,0,0.9215798,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
1253,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10978,10989,FieldReferenceMutator,siblingIndex,selected,1,0.007338168,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
1254,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10978,10989,FieldReferenceMutator,siblingIndex,offset,2,0.0069815777,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
1255,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10978,10989,FieldReferenceMutator,siblingIndex,child,3,0.0040323357,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
1256,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10978,10989,FieldReferenceMutator,siblingIndex,Index,4,0.0040133563,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
1257,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10993,11004,IdentifierMutator-Variable,siblingIndex,index,0,0.7735068,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
1258,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10993,11004,IdentifierMutator-Variable,siblingIndex,Index,1,0.0918601,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
1259,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10993,11004,IdentifierMutator-Variable,siblingIndex,sibling,2,0.074713506,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
1260,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10993,11004,IdentifierMutator-Variable,siblingIndex,0,3,0.016289534,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
1261,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),348,349,10993,11004,IdentifierMutator-Variable,siblingIndex,i,4,0.012556835,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
1262,Node.java,outerHtml,String outerHtml(),356,357,11168,11168,BinaryOperatorMutator,*,x,1,0.11544527,32 <mask> 1024,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32<mask>1024);
        outerHtml(accum);
        return accum.toString();
    }"
1263,Node.java,outerHtml,String outerHtml(),356,357,11168,11168,BinaryOperatorMutator,*,**,2,0.07706994,32 <mask> 1024,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32<mask>1024);
        outerHtml(accum);
        return accum.toString();
    }"
1264,Node.java,outerHtml,String outerHtml(),356,357,11168,11168,BinaryOperatorMutator,*,^,3,0.06755836,32 <mask> 1024,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32<mask>1024);
        outerHtml(accum);
        return accum.toString();
    }"
1265,Node.java,outerHtml,String outerHtml(),356,357,11166,11167,IdentifierMutator-Literal,32,1024,0,0.57525164,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>*1024);
        outerHtml(accum);
        return accum.toString();
    }"
1266,Node.java,outerHtml,String outerHtml(),356,357,11166,11167,IdentifierMutator-Literal,32,1000,1,0.06410187,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>*1024);
        outerHtml(accum);
        return accum.toString();
    }"
1267,Node.java,outerHtml,String outerHtml(),356,357,11166,11167,IdentifierMutator-Literal,32,100,2,0.037176028,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>*1024);
        outerHtml(accum);
        return accum.toString();
    }"
1268,Node.java,outerHtml,String outerHtml(),356,357,11166,11167,IdentifierMutator-Literal,32,10000,3,0.03192292,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>*1024);
        outerHtml(accum);
        return accum.toString();
    }"
1269,Node.java,outerHtml,String outerHtml(),356,357,11166,11167,IdentifierMutator-Literal,32,768,4,0.025554098,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>*1024);
        outerHtml(accum);
        return accum.toString();
    }"
1270,Node.java,outerHtml,String outerHtml(),356,357,11169,11172,IdentifierMutator-Literal,1024,32,0,0.1031964,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
1271,Node.java,outerHtml,String outerHtml(),356,357,11169,11172,IdentifierMutator-Literal,1024,64,1,0.0658413,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
1272,Node.java,outerHtml,String outerHtml(),356,357,11169,11172,IdentifierMutator-Literal,1024,36,2,0.052059878,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
1273,Node.java,outerHtml,String outerHtml(),356,357,11169,11172,IdentifierMutator-Literal,1024,40,3,0.03673228,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
1274,Node.java,outerHtml,String outerHtml(),356,357,11169,11172,IdentifierMutator-Literal,1024,31,4,0.03490808,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
1275,Node.java,outerHtml,String outerHtml(),356,358,11184,11192,MethodCallMutator,outerHtml,print,0,0.16656755,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);<mask>(accum);
        return accum.toString();
    }"
1276,Node.java,outerHtml,String outerHtml(),356,358,11184,11192,MethodCallMutator,outerHtml,output,1,0.09956461,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);<mask>(accum);
        return accum.toString();
    }"
1277,Node.java,outerHtml,String outerHtml(),356,358,11184,11192,MethodCallMutator,outerHtml,html,2,0.054835353,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);<mask>(accum);
        return accum.toString();
    }"
1278,Node.java,outerHtml,String outerHtml(),356,358,11184,11192,MethodCallMutator,outerHtml,render,3,0.038429752,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);<mask>(accum);
        return accum.toString();
    }"
1279,Node.java,outerHtml,String outerHtml(),356,358,11184,11192,MethodCallMutator,outerHtml,append,4,0.037718058,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);<mask>(accum);
        return accum.toString();
    }"
1280,Node.java,outerHtml,String outerHtml(),356,358,11194,11198,IdentifierMutator-Variable,accum,acc,1,0.15193339,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(<mask>);
        return accum.toString();
    }"
1281,Node.java,outerHtml,String outerHtml(),356,358,11194,11198,IdentifierMutator-Variable,accum,ctr,2,0.04505703,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(<mask>);
        return accum.toString();
    }"
1282,Node.java,outerHtml,String outerHtml(),356,358,11194,11198,IdentifierMutator-Variable,accum,app,3,0.03238633,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(<mask>);
        return accum.toString();
    }"
1283,Node.java,outerHtml,String outerHtml(),356,358,11194,11198,IdentifierMutator-Variable,accum,true,4,0.01797846,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(<mask>);
        return accum.toString();
    }"
1284,Node.java,outerHtml,String outerHtml(),356,359,11223,11230,MethodCallMutator,toString,String,0,0.28839993,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return accum.<mask>();
    }"
1285,Node.java,outerHtml,String outerHtml(),356,359,11223,11230,MethodCallMutator,toString,build,1,0.2590299,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return accum.<mask>();
    }"
1286,Node.java,outerHtml,String outerHtml(),356,359,11223,11230,MethodCallMutator,toString,string,2,0.12048077,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return accum.<mask>();
    }"
1287,Node.java,outerHtml,String outerHtml(),356,359,11223,11230,MethodCallMutator,toString,html,3,0.050925132,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return accum.<mask>();
    }"
1288,Node.java,outerHtml,String outerHtml(),356,359,11223,11230,MethodCallMutator,toString,replace,4,0.03401688,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return accum.<mask>();
    }"
1289,Node.java,outerHtml,String outerHtml(),356,359,11217,11221,IdentifierMutator-Variable,accum,result,1,9.519829E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return<mask>.toString();
    }"
1290,Node.java,outerHtml,String outerHtml(),356,359,11217,11221,IdentifierMutator-Variable,accum,buf,2,8.2759256E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return<mask>.toString();
    }"
1291,Node.java,outerHtml,String outerHtml(),356,359,11217,11221,IdentifierMutator-Variable,accum,acc,3,3.3642058E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return<mask>.toString();
    }"
1292,Node.java,outerHtml,String outerHtml(),356,359,11217,11221,IdentifierMutator-Variable,accum,out,4,3.1481506E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(32*1024);
        outerHtml(accum);
        return<mask>.toString();
    }"
1293,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11370,11377,MethodCallMutator,traverse,walk,0,0.17194602,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
1294,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11370,11377,MethodCallMutator,traverse,exit,1,0.071009494,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
1295,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11370,11377,MethodCallMutator,traverse,next,2,0.05123341,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
1296,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11370,11377,MethodCallMutator,traverse,exec,3,0.040636867,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
1297,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11370,11377,MethodCallMutator,traverse,output,4,0.036300734,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
1298,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11341,11345,IdentifierMutator-Variable,accum,acc,0,0.09720921,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
1299,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11341,11345,IdentifierMutator-Variable,accum,output,2,0.04253034,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
1300,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11341,11345,IdentifierMutator-Variable,accum,app,3,0.04130607,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
1301,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11341,11345,IdentifierMutator-Variable,accum,builder,4,0.033845402,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
1302,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11348,11364,MethodCallMutator,getOutputSettings,context,0,0.08083521,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
1303,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11348,11364,MethodCallMutator,getOutputSettings,indent,1,0.04579899,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
1304,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11348,11364,MethodCallMutator,getOutputSettings,build,2,0.033088222,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
1305,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11348,11364,MethodCallMutator,getOutputSettings,root,3,0.031719103,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
1306,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11348,11364,MethodCallMutator,getOutputSettings,builder,4,0.027731484,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
1307,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11379,11382,IdentifierMutator-ThisAccess,this,node,0,0.2735717,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
1308,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11379,11382,IdentifierMutator-ThisAccess,this,true,2,0.023887314,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
1309,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11379,11382,IdentifierMutator-ThisAccess,this,output,3,0.0236126,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
1310,Node.java,outerHtml,void outerHtml(StringBuilder accum),362,363,11379,11382,IdentifierMutator-ThisAccess,this,false,4,0.015515514,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
1311,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11647,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",settings,0,0.5464257,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
1312,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11647,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",null,1,0.17945637,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
1313,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11647,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",s,2,0.044713866,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
1314,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11647,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",this,3,0.017299436,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
1315,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11647,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",output,4,0.014836076,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
1316,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11567,11570,BinaryOperatorMutator,!=,==,1,0.0557868,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1317,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11567,11570,BinaryOperatorMutator,!=,==,2,0.0013111217,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1318,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11567,11570,BinaryOperatorMutator,!=,=,3,4.8892316E-4,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1319,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11567,11570,BinaryOperatorMutator,!=,->,4,2.0678117E-4,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1320,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11564,MethodCallMutator,ownerDocument,owner,0,0.81401825,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1321,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11564,MethodCallMutator,ownerDocument,parent,1,0.051494755,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1322,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11564,MethodCallMutator,ownerDocument,document,2,0.039915245,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1323,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11564,MethodCallMutator,ownerDocument,Owner,3,0.008672801,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1324,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11552,11564,MethodCallMutator,ownerDocument,element,4,0.0063771694,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1325,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11571,11574,IdentifierMutator-Literal,null,NULL,2,1.4811882E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1326,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11571,11574,IdentifierMutator-Literal,null,this,3,1.2713949E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1327,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11571,11574,IdentifierMutator-Literal,null,nil,4,1.2465887E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
1328,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11594,11607,MethodCallMutator,outputSettings,settings,0,0.538389,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
1329,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11594,11607,MethodCallMutator,outputSettings,output,1,0.11503483,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
1330,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11594,11607,MethodCallMutator,outputSettings,properties,2,0.04676871,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
1331,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11594,11607,MethodCallMutator,outputSettings,style,3,0.03019897,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
1332,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11594,11607,MethodCallMutator,outputSettings,write,4,0.018230408,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
1333,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11578,11590,MethodCallMutator,ownerDocument,owner,0,0.9313738,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
1334,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11578,11590,MethodCallMutator,ownerDocument,parent,1,0.045982227,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
1335,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11578,11590,MethodCallMutator,ownerDocument,document,2,0.006950519,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
1336,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11578,11590,MethodCallMutator,ownerDocument,this,3,0.0025324447,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
1337,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11578,11590,MethodCallMutator,ownerDocument,owner,4,0.001603221,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
1338,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11632,11645,MethodCallMutator,outputSettings,settings,0,0.30889645,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
1339,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11632,11645,MethodCallMutator,outputSettings,write,1,0.092279576,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
1340,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11632,11645,MethodCallMutator,outputSettings,output,2,0.081696406,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
1341,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11632,11645,MethodCallMutator,outputSettings,build,3,0.061201204,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
1342,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11632,11645,MethodCallMutator,outputSettings,style,4,0.04152668,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
1343,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11627,11628,IdentifierMutator-Literal,"""""",document,0,0.47351158,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
1344,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11627,11628,IdentifierMutator-Literal,"""""",this,1,0.120171115,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
1345,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11627,11628,IdentifierMutator-Literal,"""""",doc,2,0.07412486,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
1346,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11627,11628,IdentifierMutator-Literal,"""""",null,3,0.04003899,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
1347,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),367,368,11627,11628,IdentifierMutator-Literal,"""""",writer,4,0.03119611,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
1348,Node.java,toString,String toString(),379,380,11996,12004,MethodCallMutator,outerHtml,trim,0,0.10235256,<mask>(),"String toString() {
        return<mask>();
    }"
1349,Node.java,toString,String toString(),379,380,11996,12004,MethodCallMutator,outerHtml,string,1,0.09324054,<mask>(),"String toString() {
        return<mask>();
    }"
1350,Node.java,toString,String toString(),379,380,11996,12004,MethodCallMutator,outerHtml,get,2,0.07307521,<mask>(),"String toString() {
        return<mask>();
    }"
1351,Node.java,toString,String toString(),379,380,11996,12004,MethodCallMutator,outerHtml,str,3,0.072158255,<mask>(),"String toString() {
        return<mask>();
    }"
1352,Node.java,toString,String toString(),379,380,11996,12004,MethodCallMutator,outerHtml,print,4,0.03767136,<mask>(),"String toString() {
        return<mask>();
    }"
1353,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12132,12137,MethodCallMutator,append,join,1,4.5754682E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
1354,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12132,12137,MethodCallMutator,append,write,2,2.7536493E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
1355,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12132,12137,MethodCallMutator,append,end,4,1.3647057E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
1356,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12119,12124,MethodCallMutator,append,repeat,1,0.0025820967,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1357,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12119,12124,MethodCallMutator,append,write,3,0.0013110061,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1358,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12119,12124,MethodCallMutator,append,join,4,9.008016E-4,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1359,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12113,12117,IdentifierMutator-Variable,accum,accumulate,1,7.4977754E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1360,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12113,12117,IdentifierMutator-Variable,accum,acc,2,6.987336E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1361,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12113,12117,IdentifierMutator-Variable,accum,buf,3,5.8310932E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1362,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12113,12117,IdentifierMutator-Variable,accum,out,4,2.8867516E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
1363,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12126,12129,IdentifierMutator-Literal,"""\n""",indent,0,0.60602236,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
1364,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12126,12129,IdentifierMutator-Literal,"""\n""",prefix,1,0.023271369,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
1365,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12126,12129,IdentifierMutator-Literal,"""\n""",prefix,2,0.017306747,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
1366,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12126,12129,IdentifierMutator-Literal,"""\n""",line,3,0.009626411,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
1367,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12126,12129,IdentifierMutator-Literal,"""\n""",padding,4,0.008668526,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
1368,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12150,12156,MethodCallMutator,padding,escape,0,0.24266127,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
1369,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12150,12156,MethodCallMutator,padding,round,1,0.12092673,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
1370,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12150,12156,MethodCallMutator,padding,repeat,2,0.10426703,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
1371,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12150,12156,MethodCallMutator,padding,format,3,0.0726625,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
1372,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12150,12156,MethodCallMutator,padding,pad,4,0.04116962,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
1373,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12163,12165,BinaryOperatorMutator,*,",",0,0.8032967,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
1374,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12163,12165,BinaryOperatorMutator,*,+,2,0.06293622,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
1375,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12163,12165,BinaryOperatorMutator,*,-,3,0.021362264,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
1376,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12163,12165,BinaryOperatorMutator,*,+,4,0.006506746,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
1377,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12158,12162,IdentifierMutator-Variable,depth,Depth,1,0.0029291494,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
1378,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12158,12162,IdentifierMutator-Variable,depth,3,3,2.3578151E-4,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
1379,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12158,12162,IdentifierMutator-Variable,depth,2,4,1.5573182E-4,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
1380,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12170,12181,MethodCallMutator,indentAmount,width,0,0.28623593,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
1381,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12170,12181,MethodCallMutator,indentAmount,length,1,0.18004155,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
1382,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12170,12181,MethodCallMutator,indentAmount,size,2,0.0890723,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
1383,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12170,12181,MethodCallMutator,indentAmount,depth,3,0.07979138,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
1384,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12170,12181,MethodCallMutator,indentAmount,padding,4,0.079239175,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
1385,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12166,12168,IdentifierMutator-Variable,out,in,1,0.005084241,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
1386,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12166,12168,IdentifierMutator-Variable,out,this,2,0.0025068994,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
1387,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12166,12168,IdentifierMutator-Variable,out,Out,3,0.0020659047,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
1388,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",383,384,12166,12168,IdentifierMutator-Variable,out,doc,4,0.0017829671,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
1389,Node.java,equals,boolean equals(Object o),388,389,12263,12266,BinaryOperatorMutator,==,.,2,0.05710723,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1390,Node.java,equals,boolean equals(Object o),388,389,12263,12266,BinaryOperatorMutator,==,===,3,0.046707988,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1391,Node.java,equals,boolean equals(Object o),388,389,12263,12266,BinaryOperatorMutator,==,~,4,0.022419846,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1392,Node.java,equals,boolean equals(Object o),388,389,12259,12262,IdentifierMutator-ThisAccess,this,n,0,0.19662511,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1393,Node.java,equals,boolean equals(Object o),388,389,12259,12262,IdentifierMutator-ThisAccess,this,c,2,0.10647061,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1394,Node.java,equals,boolean equals(Object o),388,389,12259,12262,IdentifierMutator-ThisAccess,this,node,3,0.08615085,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1395,Node.java,equals,boolean equals(Object o),388,389,12259,12262,IdentifierMutator-ThisAccess,this,parent,4,0.043321103,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1396,Node.java,equals,boolean equals(Object o),388,389,12267,12267,IdentifierMutator-Variable,o,other,1,2.3669617E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1397,Node.java,equals,boolean equals(Object o),388,389,12267,12267,IdentifierMutator-Variable,o,b,2,1.9543318E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1398,Node.java,equals,boolean equals(Object o),388,389,12267,12267,IdentifierMutator-Variable,o,obj,3,1.6423948E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1399,Node.java,equals,boolean equals(Object o),388,389,12267,12267,IdentifierMutator-Variable,o,n,4,1.2403382E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1400,Node.java,equals,boolean equals(Object o),388,389,12277,12280,IdentifierMutator-Literal,true,false,1,0.0064867586,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1401,Node.java,equals,boolean equals(Object o),388,389,12277,12280,IdentifierMutator-Literal,true,1,2,1.7415364E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1402,Node.java,equals,boolean equals(Object o),388,389,12277,12280,IdentifierMutator-Literal,true,this,3,1.3084931E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
1403,Node.java,equals,boolean equals(Object o),388,391,12393,12397,IdentifierMutator-Literal,false,true,1,0.1033134,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
1404,Node.java,equals,boolean equals(Object o),388,391,12393,12397,IdentifierMutator-Literal,false,False,2,3.8889408E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
1405,Node.java,equals,boolean equals(Object o),388,391,12393,12397,IdentifierMutator-Literal,false,null,3,1.7651658E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
1406,Node.java,equals,boolean equals(Object o),388,391,12393,12397,IdentifierMutator-Literal,false,0,4,1.7279087E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
1407,Node.java,hashCode,int hashCode(),395,396,12470,12515,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,0,0,0.5492478,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1408,Node.java,hashCode,int hashCode(),395,396,12470,12515,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,31,1,0.28381833,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1409,Node.java,hashCode,int hashCode(),395,396,12470,12515,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,1,2,0.035167463,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1410,Node.java,hashCode,int hashCode(),395,396,12470,12515,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,32,3,0.015385917,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1411,Node.java,hashCode,int hashCode(),395,396,12470,12515,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,33,4,0.013728844,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1412,Node.java,hashCode,int hashCode(),395,396,12480,12483,BinaryOperatorMutator,!=,==,1,0.0068828803,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1413,Node.java,hashCode,int hashCode(),395,396,12480,12483,BinaryOperatorMutator,!=,=,2,3.6754075E-4,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1414,Node.java,hashCode,int hashCode(),395,396,12480,12483,BinaryOperatorMutator,!=,==,3,6.524981E-5,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1415,Node.java,hashCode,int hashCode(),395,396,12480,12483,BinaryOperatorMutator,!=,N,4,2.3924626E-5,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1416,Node.java,hashCode,int hashCode(),395,396,12470,12479,IdentifierMutator-Variable,parentNode,parent,0,0.92472035,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1417,Node.java,hashCode,int hashCode(),395,396,12470,12479,IdentifierMutator-Variable,parentNode,node,1,0.0437377,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1418,Node.java,hashCode,int hashCode(),395,396,12470,12479,IdentifierMutator-Variable,parentNode,parents,2,0.0035413567,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1419,Node.java,hashCode,int hashCode(),395,396,12470,12479,IdentifierMutator-Variable,parentNode,attributes,3,0.003424351,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1420,Node.java,hashCode,int hashCode(),395,396,12470,12479,IdentifierMutator-Variable,parentNode,child,4,0.0015613304,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1421,Node.java,hashCode,int hashCode(),395,396,12470,12479,FieldReferenceMutator,parentNode,parent,0,0.92472035,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1422,Node.java,hashCode,int hashCode(),395,396,12470,12479,FieldReferenceMutator,parentNode,node,1,0.0437377,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1423,Node.java,hashCode,int hashCode(),395,396,12470,12479,FieldReferenceMutator,parentNode,parents,2,0.0035413567,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1424,Node.java,hashCode,int hashCode(),395,396,12470,12479,FieldReferenceMutator,parentNode,attributes,3,0.003424351,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1425,Node.java,hashCode,int hashCode(),395,396,12470,12479,FieldReferenceMutator,parentNode,child,4,0.0015613304,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1426,Node.java,hashCode,int hashCode(),395,396,12484,12487,IdentifierMutator-Literal,null,root,2,2.488496E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1427,Node.java,hashCode,int hashCode(),395,396,12484,12487,IdentifierMutator-Literal,null,parent,3,1.6131914E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1428,Node.java,hashCode,int hashCode(),395,396,12484,12487,IdentifierMutator-Literal,null,0,4,1.4809392E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1429,Node.java,hashCode,int hashCode(),395,396,12502,12509,MethodCallMutator,hashCode,size,0,0.29312184,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1430,Node.java,hashCode,int hashCode(),395,396,12502,12509,MethodCallMutator,hashCode,hash,1,0.19141188,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1431,Node.java,hashCode,int hashCode(),395,396,12502,12509,MethodCallMutator,hashCode,length,2,0.101367846,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1432,Node.java,hashCode,int hashCode(),395,396,12502,12509,MethodCallMutator,hashCode,id,3,0.060609102,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1433,Node.java,hashCode,int hashCode(),395,396,12502,12509,MethodCallMutator,hashCode,code,4,0.059272666,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1434,Node.java,hashCode,int hashCode(),395,396,12491,12500,IdentifierMutator-Variable,parentNode,parent,0,0.6357488,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1435,Node.java,hashCode,int hashCode(),395,396,12491,12500,IdentifierMutator-Variable,parentNode,node,1,0.30845648,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1436,Node.java,hashCode,int hashCode(),395,396,12491,12500,IdentifierMutator-Variable,parentNode,root,2,0.007747188,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1437,Node.java,hashCode,int hashCode(),395,396,12491,12500,IdentifierMutator-Variable,parentNode,this,3,0.0067382404,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1438,Node.java,hashCode,int hashCode(),395,396,12491,12500,IdentifierMutator-Variable,parentNode,nodes,4,0.004380552,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1439,Node.java,hashCode,int hashCode(),395,396,12491,12500,FieldReferenceMutator,parentNode,parent,0,0.6357488,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1440,Node.java,hashCode,int hashCode(),395,396,12491,12500,FieldReferenceMutator,parentNode,node,1,0.30845648,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1441,Node.java,hashCode,int hashCode(),395,396,12491,12500,FieldReferenceMutator,parentNode,root,2,0.007747188,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1442,Node.java,hashCode,int hashCode(),395,396,12491,12500,FieldReferenceMutator,parentNode,this,3,0.0067382404,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1443,Node.java,hashCode,int hashCode(),395,396,12491,12500,FieldReferenceMutator,parentNode,nodes,4,0.004380552,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1444,Node.java,hashCode,int hashCode(),395,396,12515,12515,IdentifierMutator-Literal,0,31,1,0.015452935,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1445,Node.java,hashCode,int hashCode(),395,396,12515,12515,IdentifierMutator-Literal,0,1,2,0.009385175,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1446,Node.java,hashCode,int hashCode(),395,396,12515,12515,IdentifierMutator-Literal,0,result,3,0.004605409,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1447,Node.java,hashCode,int hashCode(),395,396,12515,12515,IdentifierMutator-Literal,0,32,4,0.0012518544,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1448,Node.java,hashCode,int hashCode(),395,398,12607,12607,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),/,0,0.20716682,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1449,Node.java,hashCode,int hashCode(),395,398,12607,12607,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),|,1,0.17633605,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1450,Node.java,hashCode,int hashCode(),395,398,12607,12607,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),^,2,0.17230856,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1451,Node.java,hashCode,int hashCode(),395,398,12607,12607,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),*,3,0.14281899,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1452,Node.java,hashCode,int hashCode(),395,398,12607,12607,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),&,4,0.076136425,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1453,Node.java,hashCode,int hashCode(),395,398,12601,12606,IdentifierMutator-Variable,result,Result,2,7.831425E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1454,Node.java,hashCode,int hashCode(),395,398,12601,12606,IdentifierMutator-Variable,result,Result,3,5.759313E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1455,Node.java,hashCode,int hashCode(),395,398,12601,12606,IdentifierMutator-Variable,result,root,4,1.570768E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1456,Node.java,hashCode,int hashCode(),395,398,12621,12623,BinaryOperatorMutator,+,^,1,0.026181787,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1457,Node.java,hashCode,int hashCode(),395,398,12621,12623,BinaryOperatorMutator,+,-,2,0.021312395,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1458,Node.java,hashCode,int hashCode(),395,398,12621,12623,BinaryOperatorMutator,+,%,3,0.007716078,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1459,Node.java,hashCode,int hashCode(),395,398,12612,12614,BinaryOperatorMutator,*,(,1,0.22132441,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1460,Node.java,hashCode,int hashCode(),395,398,12612,12614,BinaryOperatorMutator,*,-(,2,0.12131694,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1461,Node.java,hashCode,int hashCode(),395,398,12612,12614,BinaryOperatorMutator,*,-,3,0.060256574,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1462,Node.java,hashCode,int hashCode(),395,398,12612,12614,BinaryOperatorMutator,*,+,4,0.015465668,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1463,Node.java,hashCode,int hashCode(),395,398,12610,12611,IdentifierMutator-Literal,31,2,0,0.18932007,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1464,Node.java,hashCode,int hashCode(),395,398,12610,12611,IdentifierMutator-Literal,31,result,1,0.17856202,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1465,Node.java,hashCode,int hashCode(),395,398,12610,12611,IdentifierMutator-Literal,31,256,2,0.05527601,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1466,Node.java,hashCode,int hashCode(),395,398,12610,12611,IdentifierMutator-Literal,31,10,3,0.0492313,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1467,Node.java,hashCode,int hashCode(),395,398,12610,12611,IdentifierMutator-Literal,31,16,4,0.04506689,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1468,Node.java,hashCode,int hashCode(),395,398,12615,12620,IdentifierMutator-Variable,result,31,1,0.0030361828,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1469,Node.java,hashCode,int hashCode(),395,398,12615,12620,IdentifierMutator-Variable,result,count,2,0.0017871878,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1470,Node.java,hashCode,int hashCode(),395,398,12615,12620,IdentifierMutator-Variable,result,32,3,0.0014767329,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1471,Node.java,hashCode,int hashCode(),395,398,12615,12620,IdentifierMutator-Variable,result,2,4,0.0014477574,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
1472,Node.java,hashCode,int hashCode(),395,398,12624,12671,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),1,0,0.3662169,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
1473,Node.java,hashCode,int hashCode(),395,398,12624,12671,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),result,1,0.22801204,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
1474,Node.java,hashCode,int hashCode(),395,398,12624,12671,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),0,2,0.13980724,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
1475,Node.java,hashCode,int hashCode(),395,398,12624,12671,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),31,3,0.038822476,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
1476,Node.java,hashCode,int hashCode(),395,398,12624,12671,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),2,4,0.017362004,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
1477,Node.java,hashCode,int hashCode(),395,398,12635,12638,BinaryOperatorMutator,!=,==,1,0.0011443689,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
1478,Node.java,hashCode,int hashCode(),395,398,12635,12638,BinaryOperatorMutator,!=,=,2,1.6116862E-4,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
1479,Node.java,hashCode,int hashCode(),395,398,12635,12638,BinaryOperatorMutator,!=,==,3,7.3613635E-5,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
1480,Node.java,hashCode,int hashCode(),395,398,12635,12638,BinaryOperatorMutator,!=,N,4,2.1926217E-5,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
1481,Node.java,hashCode,int hashCode(),395,398,12625,12634,IdentifierMutator-Variable,attributes,attr,0,0.3590064,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1482,Node.java,hashCode,int hashCode(),395,398,12625,12634,IdentifierMutator-Variable,attributes,attribute,1,0.16794164,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1483,Node.java,hashCode,int hashCode(),395,398,12625,12634,IdentifierMutator-Variable,attributes,Attributes,2,0.1396205,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1484,Node.java,hashCode,int hashCode(),395,398,12625,12634,IdentifierMutator-Variable,attributes,ributes,3,0.11408367,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1485,Node.java,hashCode,int hashCode(),395,398,12625,12634,FieldReferenceMutator,attributes,attr,0,0.3590064,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1486,Node.java,hashCode,int hashCode(),395,398,12625,12634,FieldReferenceMutator,attributes,attribute,1,0.16794164,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1487,Node.java,hashCode,int hashCode(),395,398,12625,12634,FieldReferenceMutator,attributes,Attributes,2,0.1396205,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1488,Node.java,hashCode,int hashCode(),395,398,12625,12634,FieldReferenceMutator,attributes,ributes,3,0.11408367,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
1489,Node.java,hashCode,int hashCode(),395,398,12639,12642,IdentifierMutator-Literal,null,nil,2,1.3053873E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
1490,Node.java,hashCode,int hashCode(),395,398,12639,12642,IdentifierMutator-Literal,null,0,3,3.1078074E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
1491,Node.java,hashCode,int hashCode(),395,398,12639,12642,IdentifierMutator-Literal,null,NULL,4,2.2807548E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
1492,Node.java,hashCode,int hashCode(),395,398,12657,12664,MethodCallMutator,hashCode,size,0,0.8072816,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
1493,Node.java,hashCode,int hashCode(),395,398,12657,12664,MethodCallMutator,hashCode,length,1,0.10269701,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
1494,Node.java,hashCode,int hashCode(),395,398,12657,12664,MethodCallMutator,hashCode,hash,2,0.013312274,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
1495,Node.java,hashCode,int hashCode(),395,398,12657,12664,MethodCallMutator,hashCode,height,3,0.009949497,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
1496,Node.java,hashCode,int hashCode(),395,398,12657,12664,MethodCallMutator,hashCode,count,4,0.009947201,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
1497,Node.java,hashCode,int hashCode(),395,398,12646,12655,IdentifierMutator-Variable,attributes,ributes,1,4.5029365E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1498,Node.java,hashCode,int hashCode(),395,398,12646,12655,IdentifierMutator-Variable,attributes,Attributes,2,2.325716E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1499,Node.java,hashCode,int hashCode(),395,398,12646,12655,IdentifierMutator-Variable,attributes,attribute,3,2.0348771E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1500,Node.java,hashCode,int hashCode(),395,398,12646,12655,IdentifierMutator-Variable,attributes,this,4,9.4860254E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1501,Node.java,hashCode,int hashCode(),395,398,12646,12655,FieldReferenceMutator,attributes,ributes,1,4.5029365E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1502,Node.java,hashCode,int hashCode(),395,398,12646,12655,FieldReferenceMutator,attributes,Attributes,2,2.325716E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1503,Node.java,hashCode,int hashCode(),395,398,12646,12655,FieldReferenceMutator,attributes,attribute,3,2.0348771E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1504,Node.java,hashCode,int hashCode(),395,398,12646,12655,FieldReferenceMutator,attributes,this,4,9.4860254E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
1505,Node.java,hashCode,int hashCode(),395,398,12670,12670,IdentifierMutator-Literal,0,result,1,0.035571,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
1506,Node.java,hashCode,int hashCode(),395,398,12670,12670,IdentifierMutator-Literal,0,1,2,0.010863048,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
1507,Node.java,hashCode,int hashCode(),395,398,12670,12670,IdentifierMutator-Literal,0,31,3,0.0052357614,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
1508,Node.java,hashCode,int hashCode(),395,398,12670,12670,IdentifierMutator-Literal,0,32,4,6.2935485E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
1509,Node.java,hashCode,int hashCode(),395,399,12689,12694,IdentifierMutator-Variable,result,0,1,7.2233443E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
1510,Node.java,hashCode,int hashCode(),395,399,12689,12694,IdentifierMutator-Variable,result,root,2,6.723705E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
1511,Node.java,hashCode,int hashCode(),395,399,12689,12694,IdentifierMutator-Variable,result,count,3,5.8172063E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
1512,Node.java,hashCode,int hashCode(),395,399,12689,12694,IdentifierMutator-Variable,result,true,4,5.5868244E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
1513,Node.java,head,"void head(Node node, int depth)",411,412,13068,13080,MethodCallMutator,outerHtmlHead,head,0,0.69816774,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
1514,Node.java,head,"void head(Node node, int depth)",411,412,13068,13080,MethodCallMutator,outerHtmlHead,append,1,0.05024363,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
1515,Node.java,head,"void head(Node node, int depth)",411,412,13068,13080,MethodCallMutator,outerHtmlHead,tail,2,0.012287606,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
1516,Node.java,head,"void head(Node node, int depth)",411,412,13068,13080,MethodCallMutator,outerHtmlHead,write,3,0.0110100005,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
1517,Node.java,head,"void head(Node node, int depth)",411,412,13068,13080,MethodCallMutator,outerHtmlHead,add,4,0.010923341,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
1518,Node.java,head,"void head(Node node, int depth)",411,412,13063,13066,IdentifierMutator-Variable,node,super,1,0.1648748,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
1519,Node.java,head,"void head(Node node, int depth)",411,412,13063,13066,IdentifierMutator-Variable,node,writer,2,0.086630076,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
1520,Node.java,head,"void head(Node node, int depth)",411,412,13063,13066,IdentifierMutator-Variable,node,this,3,0.056346808,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
1521,Node.java,head,"void head(Node node, int depth)",411,412,13063,13066,IdentifierMutator-Variable,node,out,4,0.055467628,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
1522,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,IdentifierMutator-Variable,accum,this,0,0.32898912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1523,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,IdentifierMutator-Variable,accum,head,1,0.16485396,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1524,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,IdentifierMutator-Variable,accum,in,2,0.052464154,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1525,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,IdentifierMutator-Variable,accum,out,3,0.04326912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1526,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,IdentifierMutator-Variable,accum,true,4,0.017703267,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1527,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,FieldReferenceMutator,accum,this,0,0.32898912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1528,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,FieldReferenceMutator,accum,head,1,0.16485396,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1529,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,FieldReferenceMutator,accum,in,2,0.052464154,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1530,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,FieldReferenceMutator,accum,out,3,0.04326912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1531,Node.java,head,"void head(Node node, int depth)",411,412,13082,13086,FieldReferenceMutator,accum,true,4,0.017703267,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
1532,Node.java,head,"void head(Node node, int depth)",411,412,13089,13093,IdentifierMutator-Variable,depth,0,1,0.0014092699,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
1533,Node.java,head,"void head(Node node, int depth)",411,412,13089,13093,IdentifierMutator-Variable,depth,indent,2,0.0013254012,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
1534,Node.java,head,"void head(Node node, int depth)",411,412,13089,13093,IdentifierMutator-Variable,depth,level,3,9.72916E-4,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
1535,Node.java,head,"void head(Node node, int depth)",411,412,13089,13093,IdentifierMutator-Variable,depth,root,4,8.239867E-4,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
1536,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,IdentifierMutator-Variable,out,head,0,0.2725821,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1537,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,IdentifierMutator-Variable,out,true,1,0.18142305,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1538,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,IdentifierMutator-Variable,out,false,2,0.16240773,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1539,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,IdentifierMutator-Variable,out,null,3,0.040977977,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1540,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,IdentifierMutator-Variable,out,0,4,0.027512942,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1541,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,FieldReferenceMutator,out,head,0,0.2725821,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1542,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,FieldReferenceMutator,out,true,1,0.18142305,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1543,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,FieldReferenceMutator,out,false,2,0.16240773,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1544,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,FieldReferenceMutator,out,null,3,0.040977977,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1545,Node.java,head,"void head(Node node, int depth)",411,412,13096,13098,FieldReferenceMutator,out,0,4,0.027512942,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
1546,Node.java,tail,"void tail(Node node, int depth)",415,416,13178,13178,UnaryOperatorMutator,!,!!,2,0.0024242762,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1547,Node.java,tail,"void tail(Node node, int depth)",415,416,13178,13178,UnaryOperatorMutator,!,...,3,0.0021599252,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1548,Node.java,tail,"void tail(Node node, int depth)",415,416,13178,13178,UnaryOperatorMutator,!,//,4,0.0018093068,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1549,Node.java,tail,"void tail(Node node, int depth)",415,416,13195,13200,MethodCallMutator,equals,is,0,0.7561035,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1550,Node.java,tail,"void tail(Node node, int depth)",415,416,13195,13200,MethodCallMutator,equals,match,1,0.17294931,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1551,Node.java,tail,"void tail(Node node, int depth)",415,416,13195,13200,MethodCallMutator,equals,has,2,0.02041645,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1552,Node.java,tail,"void tail(Node node, int depth)",415,416,13195,13200,MethodCallMutator,equals,test,3,0.005637353,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1553,Node.java,tail,"void tail(Node node, int depth)",415,416,13184,13191,MethodCallMutator,nodeName,tag,0,0.49974057,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1554,Node.java,tail,"void tail(Node node, int depth)",415,416,13184,13191,MethodCallMutator,nodeName,name,1,0.20591074,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1555,Node.java,tail,"void tail(Node node, int depth)",415,416,13184,13191,MethodCallMutator,nodeName,type,2,0.1621093,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1556,Node.java,tail,"void tail(Node node, int depth)",415,416,13184,13191,MethodCallMutator,nodeName,id,3,0.014002651,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1557,Node.java,tail,"void tail(Node node, int depth)",415,416,13184,13191,MethodCallMutator,nodeName,path,4,0.009737705,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1558,Node.java,tail,"void tail(Node node, int depth)",415,416,13179,13182,IdentifierMutator-Variable,node,Node,2,0.0026625427,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1559,Node.java,tail,"void tail(Node node, int depth)",415,416,13179,13182,IdentifierMutator-Variable,node,parent,3,6.7414774E-4,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1560,Node.java,tail,"void tail(Node node, int depth)",415,416,13179,13182,IdentifierMutator-Variable,node,this,4,6.4780295E-4,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1561,Node.java,tail,"void tail(Node node, int depth)",415,416,13202,13208,IdentifierMutator-Literal,"""#text""",name,0,0.16164073,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1562,Node.java,tail,"void tail(Node node, int depth)",415,416,13202,13208,IdentifierMutator-Literal,"""#text""",root,1,0.044017415,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1563,Node.java,tail,"void tail(Node node, int depth)",415,416,13202,13208,IdentifierMutator-Literal,"""#text""",head,2,0.038851608,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1564,Node.java,tail,"void tail(Node node, int depth)",415,416,13202,13208,IdentifierMutator-Literal,"""#text""",prefix,3,0.031315323,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1565,Node.java,tail,"void tail(Node node, int depth)",415,416,13202,13208,IdentifierMutator-Literal,"""#text""",NAME,4,0.025590455,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
1566,Node.java,tail,"void tail(Node node, int depth)",415,417,13254,13266,MethodCallMutator,outerHtmlTail,tail,0,0.84924555,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
1567,Node.java,tail,"void tail(Node node, int depth)",415,417,13254,13266,MethodCallMutator,outerHtmlTail,append,1,0.020721734,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
1568,Node.java,tail,"void tail(Node node, int depth)",415,417,13254,13266,MethodCallMutator,outerHtmlTail,text,2,0.010500752,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
1569,Node.java,tail,"void tail(Node node, int depth)",415,417,13254,13266,MethodCallMutator,outerHtmlTail,write,3,0.006621314,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
1570,Node.java,tail,"void tail(Node node, int depth)",415,417,13254,13266,MethodCallMutator,outerHtmlTail,output,4,0.0064675617,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
1571,Node.java,tail,"void tail(Node node, int depth)",415,417,13249,13252,IdentifierMutator-Variable,node,super,1,0.099767715,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
1572,Node.java,tail,"void tail(Node node, int depth)",415,417,13249,13252,IdentifierMutator-Variable,node,out,2,0.07395676,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
1573,Node.java,tail,"void tail(Node node, int depth)",415,417,13249,13252,IdentifierMutator-Variable,node,parser,3,0.029631479,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
1574,Node.java,tail,"void tail(Node node, int depth)",415,417,13249,13252,IdentifierMutator-Variable,node,this,4,0.024837771,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
1575,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,IdentifierMutator-Variable,accum,this,0,0.29422018,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1576,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,IdentifierMutator-Variable,accum,true,1,0.05432078,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1577,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,IdentifierMutator-Variable,accum,out,2,0.034790203,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1578,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,IdentifierMutator-Variable,accum,node,3,0.034557045,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1579,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,IdentifierMutator-Variable,accum,tree,4,0.033222284,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1580,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,FieldReferenceMutator,accum,this,0,0.29422018,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1581,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,FieldReferenceMutator,accum,true,1,0.05432078,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1582,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,FieldReferenceMutator,accum,out,2,0.034790203,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1583,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,FieldReferenceMutator,accum,node,3,0.034557045,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1584,Node.java,tail,"void tail(Node node, int depth)",415,417,13268,13272,FieldReferenceMutator,accum,tree,4,0.033222284,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
1585,Node.java,tail,"void tail(Node node, int depth)",415,417,13275,13279,IdentifierMutator-Variable,depth,root,1,0.0027529923,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
1586,Node.java,tail,"void tail(Node node, int depth)",415,417,13275,13279,IdentifierMutator-Variable,depth,0,2,0.002455936,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
1587,Node.java,tail,"void tail(Node node, int depth)",415,417,13275,13279,IdentifierMutator-Variable,depth,indent,3,0.0021718126,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
1588,Node.java,tail,"void tail(Node node, int depth)",415,417,13275,13279,IdentifierMutator-Variable,depth,true,4,0.0020779804,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
1589,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,IdentifierMutator-Variable,out,true,0,0.19736424,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1590,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,IdentifierMutator-Variable,out,tail,1,0.19088523,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1591,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,IdentifierMutator-Variable,out,false,2,0.14113584,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1592,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,IdentifierMutator-Variable,out,null,3,0.039209206,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1593,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,IdentifierMutator-Variable,out,0,4,0.02657345,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1594,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,FieldReferenceMutator,out,true,0,0.19736424,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1595,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,FieldReferenceMutator,out,tail,1,0.19088523,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1596,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,FieldReferenceMutator,out,false,2,0.14113584,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1597,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,FieldReferenceMutator,out,null,3,0.039209206,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
1598,Node.java,tail,"void tail(Node node, int depth)",415,417,13282,13284,FieldReferenceMutator,out,0,4,0.02657345,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
