id,classname,method_name,method_sig,method_def_line,mut_location,mut_start,mut_end,mut_operator,orig_token,pred_token,pred_pos,pred_score,masked_expr,masked_seq
0,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2001,2005,MethodCallMutator,parse,execute,1,0.0011544157,"<mask>(options, arguments, null)","CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return<mask>(options, arguments, null);
    }"
1,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2001,2005,MethodCallMutator,parse,parser,3,5.78277E-4,"<mask>(options, arguments, null)","CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return<mask>(options, arguments, null);
    }"
2,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2001,2005,MethodCallMutator,parse,exec,4,4.7930377E-4,"<mask>(options, arguments, null)","CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return<mask>(options, arguments, null);
    }"
3,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2007,2013,IdentifierMutator-Variable,options,Options,1,2.1903259E-4,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(<mask>, arguments, null);
    }"
4,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2007,2013,IdentifierMutator-Variable,options,this,3,3.7184844E-5,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(<mask>, arguments, null);
    }"
5,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2007,2013,IdentifierMutator-Variable,options,ts,4,6.7157816E-6,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(<mask>, arguments, null);
    }"
6,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2016,2024,IdentifierMutator-Variable,arguments,argument,1,5.1025825E-4,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options,<mask>, null);
    }"
7,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2016,2024,IdentifierMutator-Variable,arguments,args,2,1.1071074E-4,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options,<mask>, null);
    }"
8,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2016,2024,IdentifierMutator-Variable,arguments,null,3,2.7114746E-5,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options,<mask>, null);
    }"
9,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2016,2024,IdentifierMutator-Variable,arguments,uments,4,1.594821E-5,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options,<mask>, null);
    }"
10,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2027,2030,IdentifierMutator-Literal,null,true,0,0.3447116,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options, arguments,<mask>);
    }"
11,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2027,2030,IdentifierMutator-Literal,null,false,1,0.34390944,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options, arguments,<mask>);
    }"
12,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2027,2030,IdentifierMutator-Literal,null,0,3,0.022636736,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options, arguments,<mask>);
    }"
13,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments) throws ParseException",58,60,2027,2030,IdentifierMutator-Literal,null,this,4,0.018341055,<mask>,"CommandLine parse(Options options, String[] arguments) throws ParseException
    {
        return parse(options, arguments,<mask>);
    }"
14,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2614,2618,MethodCallMutator,parse,execute,1,0.0010328266,"<mask>(options, arguments, properties, false)","CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return<mask>(options, arguments, properties, false);
    }"
15,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2614,2618,MethodCallMutator,parse,parser,3,5.751046E-4,"<mask>(options, arguments, properties, false)","CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return<mask>(options, arguments, properties, false);
    }"
16,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2614,2618,MethodCallMutator,parse,exec,4,3.938338E-4,"<mask>(options, arguments, properties, false)","CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return<mask>(options, arguments, properties, false);
    }"
17,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2620,2626,IdentifierMutator-Variable,options,Options,1,1.3640303E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(<mask>, arguments, properties, false);
    }"
18,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2620,2626,IdentifierMutator-Variable,options,this,3,3.6727997E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(<mask>, arguments, properties, false);
    }"
19,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2620,2626,IdentifierMutator-Variable,options,option,4,3.397424E-6,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(<mask>, arguments, properties, false);
    }"
20,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2629,2637,IdentifierMutator-Variable,arguments,args,1,9.559401E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options,<mask>, properties, false);
    }"
21,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2629,2637,IdentifierMutator-Variable,arguments,argument,2,7.129925E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options,<mask>, properties, false);
    }"
22,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2629,2637,IdentifierMutator-Variable,arguments,uments,3,1.42183235E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options,<mask>, properties, false);
    }"
23,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2629,2637,IdentifierMutator-Variable,arguments,commands,4,1.490715E-6,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options,<mask>, properties, false);
    }"
24,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2640,2649,IdentifierMutator-Variable,properties,true,1,4.2973406E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments,<mask>, false);
    }"
25,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2640,2649,IdentifierMutator-Variable,properties,props,2,3.946381E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments,<mask>, false);
    }"
26,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2640,2649,IdentifierMutator-Variable,properties,null,3,3.897006E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments,<mask>, false);
    }"
27,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2640,2649,IdentifierMutator-Variable,properties,property,4,3.0304273E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments,<mask>, false);
    }"
28,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2652,2656,IdentifierMutator-Literal,false,true,0,0.31491733,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments, properties,<mask>);
    }"
29,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2652,2656,IdentifierMutator-Literal,false,null,2,0.24569352,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments, properties,<mask>);
    }"
30,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2652,2656,IdentifierMutator-Literal,false,this,3,0.01987281,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments, properties,<mask>);
    }"
31,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",74,76,2652,2656,IdentifierMutator-Literal,false,0,4,0.016004615,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException
    {
        return parse(options, arguments, properties,<mask>);
    }"
32,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2801,2805,MethodCallMutator,parse,execute,1,8.6055277E-4,"<mask>(options, arguments, null, stopAtNonOption)","CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return<mask>(options, arguments, null, stopAtNonOption);
    }"
33,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2801,2805,MethodCallMutator,parse,parser,2,6.16455E-4,"<mask>(options, arguments, null, stopAtNonOption)","CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return<mask>(options, arguments, null, stopAtNonOption);
    }"
34,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2801,2805,MethodCallMutator,parse,exec,3,3.905593E-4,"<mask>(options, arguments, null, stopAtNonOption)","CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return<mask>(options, arguments, null, stopAtNonOption);
    }"
35,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2807,2813,IdentifierMutator-Variable,options,Options,1,2.191352E-4,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(<mask>, arguments, null, stopAtNonOption);
    }"
36,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2807,2813,IdentifierMutator-Variable,options,this,3,5.327007E-5,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(<mask>, arguments, null, stopAtNonOption);
    }"
37,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2807,2813,IdentifierMutator-Variable,options,ts,4,6.2523695E-6,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(<mask>, arguments, null, stopAtNonOption);
    }"
38,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2816,2824,IdentifierMutator-Variable,arguments,argument,1,2.8237127E-4,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options,<mask>, null, stopAtNonOption);
    }"
39,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2816,2824,IdentifierMutator-Variable,arguments,args,2,4.3657907E-5,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options,<mask>, null, stopAtNonOption);
    }"
40,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2816,2824,IdentifierMutator-Variable,arguments,uments,3,6.83389E-6,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options,<mask>, null, stopAtNonOption);
    }"
41,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2816,2824,IdentifierMutator-Variable,arguments,null,4,5.2895E-6,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options,<mask>, null, stopAtNonOption);
    }"
42,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2827,2830,IdentifierMutator-Literal,null,false,0,0.39758763,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments,<mask>, stopAtNonOption);
    }"
43,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2827,2830,IdentifierMutator-Literal,null,true,1,0.3281833,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments,<mask>, stopAtNonOption);
    }"
44,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2827,2830,IdentifierMutator-Literal,null,0,3,0.017217826,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments,<mask>, stopAtNonOption);
    }"
45,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2827,2830,IdentifierMutator-Literal,null,flags,4,0.014631949,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments,<mask>, stopAtNonOption);
    }"
46,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2833,2847,IdentifierMutator-Variable,stopAtNonOption,true,0,0.4432142,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments, null,<mask>);
    }"
47,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2833,2847,IdentifierMutator-Variable,stopAtNonOption,false,1,0.33387735,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments, null,<mask>);
    }"
48,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2833,2847,IdentifierMutator-Variable,stopAtNonOption,stop,2,0.14630073,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments, null,<mask>);
    }"
49,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2833,2847,IdentifierMutator-Variable,stopAtNonOption,null,3,0.024035798,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments, null,<mask>);
    }"
50,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",79,81,2833,2847,IdentifierMutator-Variable,stopAtNonOption,abort,4,0.0030398746,<mask>,"CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException
    {
        return parse(options, arguments, null,<mask>);
    }"
51,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3759,3759,AssignmentMutator,this.options=options,!,0,0.16712938,this.options <mask>= options,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options<mask>= options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
52,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3759,3759,AssignmentMutator,this.options=options,=,1,0.11995774,this.options <mask>= options,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options<mask>= options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
53,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3759,3759,AssignmentMutator,this.options=options,=,2,0.08502238,this.options <mask>= options,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options<mask>= options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
54,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3759,3759,AssignmentMutator,this.options=options,[],3,0.07281871,this.options <mask>= options,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options<mask>= options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
55,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3759,3759,AssignmentMutator,this.options=options,|,4,0.0536739,this.options <mask>= options,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options<mask>= options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
56,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3758,IdentifierMutator-Variable,this.options,options,0,0.79639465,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
57,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3758,IdentifierMutator-Variable,this.options,Options,1,0.05290069,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
58,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3758,IdentifierMutator-Variable,this.options,options,2,0.042280693,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
59,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3758,IdentifierMutator-Variable,this.options,this,3,0.025408983,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
60,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3758,IdentifierMutator-Variable,this.options,defaults,4,0.008777133,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
61,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3750,IdentifierMutator-ThisAccess,this,super,2,1.9206092E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask>.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
62,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3750,IdentifierMutator-ThisAccess,this,This,3,4.357405E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask>.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
63,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3747,3750,IdentifierMutator-ThisAccess,this,This,4,2.0721087E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {<mask>.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
64,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3752,3758,FieldReferenceMutator,options,Options,1,0.0013511647,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
65,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3752,3758,FieldReferenceMutator,options,option,2,6.3457194E-4,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
66,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3752,3758,FieldReferenceMutator,options,config,3,4.7102725E-4,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
67,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3752,3758,FieldReferenceMutator,options,obj,4,2.6832387E-4,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.<mask> = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
68,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3762,3768,IdentifierMutator-Variable,options,null,1,9.458065E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options =<mask>;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
69,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3762,3768,IdentifierMutator-Variable,options,defaults,2,9.415905E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options =<mask>;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
70,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,102,3762,3768,IdentifierMutator-Variable,options,option,4,4.3484823E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options =<mask>;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
71,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3799,3799,AssignmentMutator,this.stopAtNonOption=stopAtNonOption,|,0,0.68249786,this.stopAtNonOption <mask>= stopAtNonOption,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption<mask>= stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
72,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3799,3799,AssignmentMutator,this.stopAtNonOption=stopAtNonOption,!,1,0.074847825,this.stopAtNonOption <mask>= stopAtNonOption,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption<mask>= stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
73,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3799,3799,AssignmentMutator,this.stopAtNonOption=stopAtNonOption,&,2,0.055261586,this.stopAtNonOption <mask>= stopAtNonOption,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption<mask>= stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
74,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3799,3799,AssignmentMutator,this.stopAtNonOption=stopAtNonOption,||,3,0.02441726,this.stopAtNonOption <mask>= stopAtNonOption,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption<mask>= stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
75,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3799,3799,AssignmentMutator,this.stopAtNonOption=stopAtNonOption,||,4,0.023729572,this.stopAtNonOption <mask>= stopAtNonOption,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption<mask>= stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
76,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3798,IdentifierMutator-Variable,this.stopAtNonOption,stop,0,0.24897899,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
77,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3798,IdentifierMutator-Variable,this.stopAtNonOption,stopped,1,0.027138337,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
78,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3798,IdentifierMutator-Variable,this.stopAtNonOption,done,2,0.020726327,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
79,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3798,IdentifierMutator-Variable,this.stopAtNonOption,skip,3,0.020000998,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
80,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3798,IdentifierMutator-Variable,this.stopAtNonOption,optional,4,0.016180934,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
81,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3782,IdentifierMutator-ThisAccess,this,options,2,0.0010493452,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask>.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
82,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3782,IdentifierMutator-ThisAccess,this,options,3,5.398113E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask>.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
83,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3779,3782,IdentifierMutator-ThisAccess,this,super,4,4.586775E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;<mask>.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
84,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3784,3798,FieldReferenceMutator,stopAtNonOption,stop,0,0.5950661,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
85,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3784,3798,FieldReferenceMutator,stopAtNonOption,optional,1,0.037174042,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
86,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3784,3798,FieldReferenceMutator,stopAtNonOption,skip,2,0.028008971,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
87,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3784,3798,FieldReferenceMutator,stopAtNonOption,ok,3,0.011433579,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
88,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3784,3798,FieldReferenceMutator,stopAtNonOption,disabled,4,0.010645667,this.<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.<mask> = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
89,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3802,3816,IdentifierMutator-Variable,stopAtNonOption,true,0,0.5246671,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption =<mask>;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
90,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3802,3816,IdentifierMutator-Variable,stopAtNonOption,false,1,0.41295487,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption =<mask>;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
91,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3802,3816,IdentifierMutator-Variable,stopAtNonOption,stop,2,0.053763267,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption =<mask>;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
92,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3802,3816,IdentifierMutator-Variable,stopAtNonOption,boolean,3,7.0612814E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption =<mask>;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
93,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,103,3802,3816,IdentifierMutator-Variable,stopAtNonOption,null,4,5.7158864E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption =<mask>;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
94,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3838,3838,AssignmentMutator,skipParsing=false,2,0,0.077753074,skipParsing <mask>= false,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing<mask>= false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
95,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3838,3838,AssignmentMutator,skipParsing=false,Options,1,0.06473753,skipParsing <mask>= false,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing<mask>= false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
96,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3838,3838,AssignmentMutator,skipParsing=false,!,2,0.057941917,skipParsing <mask>= false,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing<mask>= false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
97,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3838,3838,AssignmentMutator,skipParsing=false,Check,3,0.048307363,skipParsing <mask>= false,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing<mask>= false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
98,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3838,3838,AssignmentMutator,skipParsing=false,Result,4,0.043400217,skipParsing <mask>= false,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing<mask>= false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
99,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,IdentifierMutator-Variable,skipParsing,parsed,0,0.18435062,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
100,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,IdentifierMutator-Variable,skipParsing,parsing,1,0.10132591,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
101,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,IdentifierMutator-Variable,skipParsing,initialized,2,0.04768951,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
102,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,IdentifierMutator-Variable,skipParsing,done,3,0.04049194,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
103,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,IdentifierMutator-Variable,skipParsing,running,4,0.024961233,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
104,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,FieldReferenceMutator,skipParsing,parsed,0,0.18435062,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
105,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,FieldReferenceMutator,skipParsing,parsing,1,0.10132591,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
106,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,FieldReferenceMutator,skipParsing,initialized,2,0.04768951,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
107,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,FieldReferenceMutator,skipParsing,done,3,0.04049194,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
108,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3827,3837,FieldReferenceMutator,skipParsing,running,4,0.024961233,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;<mask> = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
109,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3841,3845,IdentifierMutator-Literal,false,true,1,0.44912714,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing =<mask>;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
110,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3841,3845,IdentifierMutator-Literal,false,0,2,0.0017544263,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing =<mask>;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
111,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3841,3845,IdentifierMutator-Literal,false,null,3,0.001002465,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing =<mask>;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
112,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,104,3841,3845,IdentifierMutator-Literal,false,skip,4,3.0715542E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing =<mask>;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
113,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3869,3869,AssignmentMutator,currentOption=null,Group,0,0.72199804,currentOption <mask>= null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption<mask>= null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
114,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3869,3869,AssignmentMutator,currentOption=null,List,1,0.107171424,currentOption <mask>= null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption<mask>= null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
115,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3869,3869,AssignmentMutator,currentOption=null,Name,2,0.008175537,currentOption <mask>= null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption<mask>= null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
116,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3869,3869,AssignmentMutator,currentOption=null,Args,3,0.0073223915,currentOption <mask>= null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption<mask>= null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
117,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3869,3869,AssignmentMutator,currentOption=null,String,4,0.0051910263,currentOption <mask>= null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption<mask>= null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
118,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,IdentifierMutator-Variable,currentOption,parser,0,0.20032164,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
119,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,IdentifierMutator-Variable,currentOption,options,1,0.18098657,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
120,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,IdentifierMutator-Variable,currentOption,args,2,0.05489635,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
121,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,IdentifierMutator-Variable,currentOption,arguments,3,0.045528166,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
122,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,IdentifierMutator-Variable,currentOption,commands,4,0.032584652,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
123,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,FieldReferenceMutator,currentOption,parser,0,0.20032164,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
124,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,FieldReferenceMutator,currentOption,options,1,0.18098657,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
125,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,FieldReferenceMutator,currentOption,args,2,0.05489635,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
126,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,FieldReferenceMutator,currentOption,arguments,3,0.045528166,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
127,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3856,3868,FieldReferenceMutator,currentOption,commands,4,0.032584652,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;<mask> = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
128,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3872,3875,IdentifierMutator-Literal,null,options,1,0.16272599,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption =<mask>;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
129,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3872,3875,IdentifierMutator-Literal,null,"""""",2,0.032386456,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption =<mask>;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
130,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3872,3875,IdentifierMutator-Literal,null,option,3,0.029602656,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption =<mask>;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
131,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,105,3872,3875,IdentifierMutator-Literal,null,0,4,0.02843948,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption =<mask>;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
132,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3898,3898,AssignmentMutator,expectedOpts=newjava.util.ArrayList(options.getRequiredOptions()),List,0,0.62520087,expectedOpts <mask>= new java.util.ArrayList(options.getRequiredOptions()),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts<mask>= new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
133,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3898,3898,AssignmentMutator,expectedOpts=newjava.util.ArrayList(options.getRequiredOptions()),[],1,0.2838944,expectedOpts <mask>= new java.util.ArrayList(options.getRequiredOptions()),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts<mask>= new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
134,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3898,3898,AssignmentMutator,expectedOpts=newjava.util.ArrayList(options.getRequiredOptions()),Array,2,0.02188046,expectedOpts <mask>= new java.util.ArrayList(options.getRequiredOptions()),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts<mask>= new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
135,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3898,3898,AssignmentMutator,expectedOpts=newjava.util.ArrayList(options.getRequiredOptions()),//,3,0.012647049,expectedOpts <mask>= new java.util.ArrayList(options.getRequiredOptions()),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts<mask>= new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
136,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3898,3898,AssignmentMutator,expectedOpts=newjava.util.ArrayList(options.getRequiredOptions()),list,4,0.005853608,expectedOpts <mask>= new java.util.ArrayList(options.getRequiredOptions()),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts<mask>= new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
137,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,IdentifierMutator-Variable,expectedOpts,options,0,0.36322784,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
138,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,IdentifierMutator-Variable,expectedOpts,arguments,1,0.31818733,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
139,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,IdentifierMutator-Variable,expectedOpts,args,2,0.1258043,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
140,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,IdentifierMutator-Variable,expectedOpts,Options,3,0.019234074,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
141,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,IdentifierMutator-Variable,expectedOpts,required,4,0.01229676,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
142,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,FieldReferenceMutator,expectedOpts,options,0,0.36322784,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
143,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,FieldReferenceMutator,expectedOpts,arguments,1,0.31818733,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
144,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,FieldReferenceMutator,expectedOpts,args,2,0.1258043,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
145,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,FieldReferenceMutator,expectedOpts,Options,3,0.019234074,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
146,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3886,3897,FieldReferenceMutator,expectedOpts,required,4,0.01229676,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;<mask> = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
147,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3923,3940,MethodCallMutator,getRequiredOptions,size,0,0.29932994,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.<mask>());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
148,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3923,3940,MethodCallMutator,getRequiredOptions,options,1,0.27560213,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.<mask>());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
149,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3923,3940,MethodCallMutator,getRequiredOptions,values,2,0.11040376,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.<mask>());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
150,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3923,3940,MethodCallMutator,getRequiredOptions,length,3,0.043667015,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.<mask>());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
151,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3923,3940,MethodCallMutator,getRequiredOptions,parse,4,0.023441978,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.<mask>());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
152,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3915,3921,IdentifierMutator-Variable,options,this,1,0.012749875,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(<mask>.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
153,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3915,3921,IdentifierMutator-Variable,options,Options,2,0.008860399,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(<mask>.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
154,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,106,3915,3921,IdentifierMutator-Variable,options,option,3,0.0022595106,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(<mask>.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
155,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4030,4044,MethodCallMutator,getOptionGroups,groups,0,0.89480287,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.<mask>())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
156,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4030,4044,MethodCallMutator,getOptionGroups,values,1,0.082867056,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.<mask>())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
157,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4030,4044,MethodCallMutator,getOptionGroups,group,2,0.008416363,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.<mask>())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
158,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4030,4044,MethodCallMutator,getOptionGroups,children,3,0.0038953975,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.<mask>())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
159,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4030,4044,MethodCallMutator,getOptionGroups,roots,4,0.0010560869,options.<mask>(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.<mask>())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
160,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4022,4028,IdentifierMutator-Variable,options,this,1,0.0057385867,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group :<mask>.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
161,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4022,4028,IdentifierMutator-Variable,options,group,3,0.003387158,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group :<mask>.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
162,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,109,4022,4028,IdentifierMutator-Variable,options,config,4,0.0023178004,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group :<mask>.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
163,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4077,4087,MethodCallMutator,setSelected,clear,0,0.34482157,group.<mask>(null),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.<mask>(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
164,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4077,4087,MethodCallMutator,setSelected,set,1,0.123900525,group.<mask>(null),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.<mask>(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
165,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4077,4087,MethodCallMutator,setSelected,parse,2,0.08553462,group.<mask>(null),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.<mask>(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
166,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4077,4087,MethodCallMutator,setSelected,reset,3,0.059398927,group.<mask>(null),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.<mask>(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
167,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4077,4087,MethodCallMutator,setSelected,init,4,0.05448528,group.<mask>(null),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.<mask>(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
168,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4071,4075,IdentifierMutator-Variable,group,option,2,1.1145227E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {<mask>.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
169,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4071,4075,IdentifierMutator-Variable,group,Group,3,2.823052E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {<mask>.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
170,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4071,4075,IdentifierMutator-Variable,group,groups,4,2.2770664E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {<mask>.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
171,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4089,4092,IdentifierMutator-Literal,null,false,0,0.8246708,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(<mask>);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
172,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4089,4092,IdentifierMutator-Literal,null,true,2,0.043163076,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(<mask>);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
173,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4089,4092,IdentifierMutator-Literal,null,False,3,0.022319281,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(<mask>);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
174,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,111,4089,4092,IdentifierMutator-Literal,null,selected,4,0.01753201,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(<mask>);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
175,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4118,4118,AssignmentMutator,cmd=neworg.apache.commons.cli.CommandLine(),|,0,0.57666045,cmd <mask>= new org.apache.commons.cli.CommandLine(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd<mask>= new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
176,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4118,4118,AssignmentMutator,cmd=neworg.apache.commons.cli.CommandLine(),*,1,0.19382615,cmd <mask>= new org.apache.commons.cli.CommandLine(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd<mask>= new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
177,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4118,4118,AssignmentMutator,cmd=neworg.apache.commons.cli.CommandLine(),||,2,0.046141043,cmd <mask>= new org.apache.commons.cli.CommandLine(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd<mask>= new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
178,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4118,4118,AssignmentMutator,cmd=neworg.apache.commons.cli.CommandLine(),&,3,0.037479714,cmd <mask>= new org.apache.commons.cli.CommandLine(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd<mask>= new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
179,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4118,4118,AssignmentMutator,cmd=neworg.apache.commons.cli.CommandLine(),^,4,0.02162387,cmd <mask>= new org.apache.commons.cli.CommandLine(),"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd<mask>= new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
180,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,IdentifierMutator-Variable,cmd,command,1,0.0011085595,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
181,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,IdentifierMutator-Variable,cmd,Cmd,2,6.388509E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
182,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,IdentifierMutator-Variable,cmd,args,4,2.3496836E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
183,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,FieldReferenceMutator,cmd,command,1,0.0011085595,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
184,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,FieldReferenceMutator,cmd,Cmd,2,6.388509E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
185,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,114,4115,4117,FieldReferenceMutator,cmd,args,4,2.3496836E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }<mask> = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
186,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4162,4165,BinaryOperatorMutator,!=,==,0,0.54665035,arguments <mask> null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments<mask>null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
187,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4162,4165,BinaryOperatorMutator,!=,=,2,0.20532846,arguments <mask> null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments<mask>null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
188,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4162,4165,BinaryOperatorMutator,!=,==,3,0.010326429,arguments <mask> null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments<mask>null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
189,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4162,4165,BinaryOperatorMutator,!=,.,4,0.00839528,arguments <mask> null,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments<mask>null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
190,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4153,4161,IdentifierMutator-Variable,arguments,args,0,0.71358645,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (<mask> != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
191,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4153,4161,IdentifierMutator-Variable,arguments,cmd,1,0.15411593,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (<mask> != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
192,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4153,4161,IdentifierMutator-Variable,arguments,command,2,0.020522136,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (<mask> != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
193,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4153,4161,IdentifierMutator-Variable,arguments,argument,3,0.01950728,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (<mask> != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
194,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4153,4161,IdentifierMutator-Variable,arguments,cli,4,0.013429794,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (<mask> != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
195,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4166,4169,IdentifierMutator-Literal,null,NULL,2,1.3834095E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments !=<mask>)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
196,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4166,4169,IdentifierMutator-Literal,null,nil,3,8.571741E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments !=<mask>)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
197,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,116,4166,4169,IdentifierMutator-Literal,null,empty,4,6.463727E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments !=<mask>)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
198,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,118,4217,4225,IdentifierMutator-Variable,arguments,uments,1,2.9497844E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument :<mask>)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
199,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,118,4217,4225,IdentifierMutator-Variable,arguments,args,2,2.3874737E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument :<mask>)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
200,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,118,4217,4225,IdentifierMutator-Variable,arguments,argument,3,1.2936968E-4,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument :<mask>)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
201,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,118,4217,4225,IdentifierMutator-Variable,arguments,argument,4,1.4171069E-5,<mask>,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument :<mask>)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
202,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4258,4268,MethodCallMutator,handleToken,add,0,0.19978775,<mask>(argument)," boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {<mask>(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
203,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4258,4268,MethodCallMutator,handleToken,print,1,0.13881905,<mask>(argument)," boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {<mask>(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
204,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4258,4268,MethodCallMutator,handleToken,parse,2,0.07234218,<mask>(argument)," boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {<mask>(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
205,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4258,4268,MethodCallMutator,handleToken,option,3,0.057794046,<mask>(argument)," boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {<mask>(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
206,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4258,4268,MethodCallMutator,handleToken,check,4,0.048200168,<mask>(argument)," boolean stopAtNonOption)
            throws ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {<mask>(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
207,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4270,4277,IdentifierMutator-Variable,argument,token,1,0.03329198,<mask>," ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(<mask>);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
208,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4270,4277,IdentifierMutator-Variable,argument,arg,2,0.0060438225,<mask>," ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(<mask>);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
209,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,120,4270,4277,IdentifierMutator-Variable,argument,word,3,0.002822845,<mask>," ParseException
    {
        this.options = options;
        this.stopAtNonOption = stopAtNonOption;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(<mask>);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
210,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,125,4364,4380,MethodCallMutator,checkRequiredArgs,check,0,0.21673122,<mask>(),"Option;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option<mask>();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
211,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,125,4364,4380,MethodCallMutator,checkRequiredArgs,validate,1,0.069590144,<mask>(),"Option;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option<mask>();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
212,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,125,4364,4380,MethodCallMutator,checkRequiredArgs,build,2,0.061105266,<mask>(),"Option;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option<mask>();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
213,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,125,4364,4380,MethodCallMutator,checkRequiredArgs,options,3,0.03176988,<mask>(),"Option;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option<mask>();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
214,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,125,4364,4380,MethodCallMutator,checkRequiredArgs,execute,4,0.028358327,<mask>(),"Option;
        skipParsing = false;
        currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option<mask>();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return cmd;
    }"
215,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4429,4444,MethodCallMutator,handleProperties,add,0,0.5419952,<mask>(properties)," currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options<mask>(properties);

        checkRequiredOptions();

        return cmd;
    }"
216,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4429,4444,MethodCallMutator,handleProperties,append,1,0.06993351,<mask>(properties)," currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options<mask>(properties);

        checkRequiredOptions();

        return cmd;
    }"
217,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4429,4444,MethodCallMutator,handleProperties,defaults,2,0.046518676,<mask>(properties)," currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options<mask>(properties);

        checkRequiredOptions();

        return cmd;
    }"
218,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4429,4444,MethodCallMutator,handleProperties,configure,3,0.028974015,<mask>(properties)," currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options<mask>(properties);

        checkRequiredOptions();

        return cmd;
    }"
219,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4429,4444,MethodCallMutator,handleProperties,build,4,0.024196716,<mask>(properties)," currentOption = null;
        expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options<mask>(properties);

        checkRequiredOptions();

        return cmd;
    }"
220,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4446,4455,IdentifierMutator-Variable,properties,cmd,0,0.45876986,<mask>,"  expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(<mask>);

        checkRequiredOptions();

        return cmd;
    }"
221,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4446,4455,IdentifierMutator-Variable,properties,options,1,0.19050287,<mask>,"  expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(<mask>);

        checkRequiredOptions();

        return cmd;
    }"
222,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4446,4455,IdentifierMutator-Variable,properties,args,2,0.1017004,<mask>,"  expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(<mask>);

        checkRequiredOptions();

        return cmd;
    }"
223,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4446,4455,IdentifierMutator-Variable,properties,command,3,0.039401293,<mask>,"  expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(<mask>);

        checkRequiredOptions();

        return cmd;
    }"
224,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,128,4446,4455,IdentifierMutator-Variable,properties,config,4,0.031323705,<mask>,"  expectedOpts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(<mask>);

        checkRequiredOptions();

        return cmd;
    }"
225,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,130,4468,4487,MethodCallMutator,checkRequiredOptions,print,0,0.04899022,<mask>(),"Opts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);<mask>();

        return cmd;
    }"
226,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,130,4468,4487,MethodCallMutator,checkRequiredOptions,exit,1,0.04614115,<mask>(),"Opts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);<mask>();

        return cmd;
    }"
227,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,130,4468,4487,MethodCallMutator,checkRequiredOptions,build,2,0.045820992,<mask>(),"Opts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);<mask>();

        return cmd;
    }"
228,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,130,4468,4487,MethodCallMutator,checkRequiredOptions,exit,3,0.026284216,<mask>(),"Opts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);<mask>();

        return cmd;
    }"
229,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,130,4468,4487,MethodCallMutator,checkRequiredOptions,init,4,0.026207801,<mask>(),"Opts = new ArrayList(options.getRequiredOptions());

        // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);<mask>();

        return cmd;
    }"
230,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,IdentifierMutator-Variable,cmd,true,1,0.031343695,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
231,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,IdentifierMutator-Variable,cmd,this,2,0.0104558775,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
232,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,IdentifierMutator-Variable,cmd,false,3,0.010002248,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
233,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,IdentifierMutator-Variable,cmd,null,4,0.00364356,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
234,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,FieldReferenceMutator,cmd,true,1,0.031343695,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
235,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,FieldReferenceMutator,cmd,this,2,0.0104558775,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
236,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,FieldReferenceMutator,cmd,false,3,0.010002248,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
237,DefaultParser.java,parse,"CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)
            throws ParseException",99,132,4508,4510,FieldReferenceMutator,cmd,null,4,0.00364356,<mask>," // clear the data from the groups
        for (OptionGroup group : options.getOptionGroups())
        {
            group.setSelected(null);
        }

        cmd = new CommandLine();

        if (arguments != null)
        {
            for (String argument : arguments)
            {
                handleToken(argument);
            }
        }

        // check the arguments of the last option
        checkRequiredArgs();

        // add the default options
        handleProperties(properties);

        checkRequiredOptions();

        return<mask>;
    }"
238,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4792,4795,BinaryOperatorMutator,==,=,2,0.07269998,properties <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties<mask>null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
239,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4792,4795,BinaryOperatorMutator,==,!=,3,0.013074228,properties <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties<mask>null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
240,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4792,4795,BinaryOperatorMutator,==,.,4,0.0019281431,properties <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties<mask>null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
241,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4782,4791,IdentifierMutator-Variable,properties,options,1,0.012324653,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (<mask> == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
242,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4782,4791,IdentifierMutator-Variable,properties,property,2,0.003746003,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (<mask> == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
243,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4782,4791,IdentifierMutator-Variable,properties,config,4,8.359394E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (<mask> == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
244,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4796,4799,IdentifierMutator-Literal,null,this,1,0.0012090867,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties ==<mask>)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
245,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4796,4799,IdentifierMutator-Literal,null,NULL,3,1.3938372E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties ==<mask>)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
246,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,142,4796,4799,IdentifierMutator-Literal,null,undefined,4,5.086131E-5,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties ==<mask>)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
247,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4886,4898,MethodCallMutator,propertyNames,options,0,0.4370122,properties.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.<mask>(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
248,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4886,4898,MethodCallMutator,propertyNames,values,1,0.21920142,properties.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.<mask>(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
249,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4886,4898,MethodCallMutator,propertyNames,keys,2,0.09739183,properties.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.<mask>(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
250,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4886,4898,MethodCallMutator,propertyNames,iterator,3,0.023005249,properties.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.<mask>(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
251,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4886,4898,MethodCallMutator,propertyNames,children,4,0.022069817,properties.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.<mask>(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
252,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4875,4884,IdentifierMutator-Variable,properties,props,1,0.0058768387,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e =<mask>.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
253,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4875,4884,IdentifierMutator-Variable,properties,property,2,0.0011848303,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e =<mask>.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
254,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4875,4884,IdentifierMutator-Variable,properties,options,3,9.841088E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e =<mask>.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
255,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4905,4919,MethodCallMutator,hasMoreElements,next,0,0.93395454,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.<mask>();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                "
256,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4905,4919,MethodCallMutator,hasMoreElements,continue,1,0.03353732,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.<mask>();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                "
257,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4905,4919,MethodCallMutator,hasMoreElements,more,2,0.008260289,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.<mask>();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                "
258,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4905,4919,MethodCallMutator,hasMoreElements,valid,3,0.0020785811,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.<mask>();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                "
259,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4905,4919,MethodCallMutator,hasMoreElements,has,4,0.0020266506,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.<mask>();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                "
260,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4903,4903,IdentifierMutator-Variable,e,n,2,8.392482E-5,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames();<mask>.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
261,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4903,4903,IdentifierMutator-Variable,e,it,3,7.1060385E-5,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames();<mask>.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
262,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,147,4903,4903,IdentifierMutator-Variable,e,element,4,6.456715E-5,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames();<mask>.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
263,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4979,4986,MethodCallMutator,toString,name,0,0.5038889,e.nextElement().<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().<mask>();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
264,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4979,4986,MethodCallMutator,toString,value,1,0.32998854,e.nextElement().<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().<mask>();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
265,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4979,4986,MethodCallMutator,toString,text,2,0.06696992,e.nextElement().<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().<mask>();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
266,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4979,4986,MethodCallMutator,toString,string,3,0.02547031,e.nextElement().<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().<mask>();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
267,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4979,4986,MethodCallMutator,toString,key,4,0.02460225,e.nextElement().<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().<mask>();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
268,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4965,4975,MethodCallMutator,nextElement,next,0,0.8340439,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.<mask>().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
269,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4965,4975,MethodCallMutator,nextElement,element,1,0.14973705,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.<mask>().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
270,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4965,4975,MethodCallMutator,nextElement,value,2,0.004153361,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.<mask>().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
271,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4965,4975,MethodCallMutator,nextElement,current,3,0.0022280752,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.<mask>().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
272,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4965,4975,MethodCallMutator,nextElement,text,4,0.0018119962,e.<mask>(),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.<mask>().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
273,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4963,4963,IdentifierMutator-Variable,e,elements,2,1.4206906E-5,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option =<mask>.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
274,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4963,4963,IdentifierMutator-Variable,e,a,3,9.037438E-6,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option =<mask>.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
275,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,149,4963,4963,IdentifierMutator-Variable,e,c,4,6.4707256E-6,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option =<mask>.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
276,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5025,5033,MethodCallMutator,getOption,get,0,0.988231,options.<mask>(option),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.<mask>(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
277,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5025,5033,MethodCallMutator,getOption,option,1,0.0041102474,options.<mask>(option),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.<mask>(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
278,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5025,5033,MethodCallMutator,getOption,find,2,0.0011740284,options.<mask>(option),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.<mask>(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
279,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5025,5033,MethodCallMutator,getOption,get,3,7.723191E-4,options.<mask>(option),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.<mask>(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
280,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5025,5033,MethodCallMutator,getOption,select,4,6.830789E-4,options.<mask>(option),"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.<mask>(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
              "
281,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,IdentifierMutator-Variable,options,properties,0,0.35185415,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
282,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,IdentifierMutator-Variable,options,cmd,2,0.19715482,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
283,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,IdentifierMutator-Variable,options,commands,3,0.045464814,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
284,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,IdentifierMutator-Variable,options,config,4,0.01899649,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
285,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,FieldReferenceMutator,options,properties,0,0.35185415,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
286,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,FieldReferenceMutator,options,cmd,2,0.19715482,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
287,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,FieldReferenceMutator,options,commands,3,0.045464814,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
288,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5017,5023,FieldReferenceMutator,options,config,4,0.01899649,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt =<mask>.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
289,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5035,5040,IdentifierMutator-Variable,option,Option,2,1.5675843E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(<mask>);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
290,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5035,5040,IdentifierMutator-Variable,option,options,3,1.1872513E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(<mask>);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
291,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,151,5035,5040,IdentifierMutator-Variable,option,opt,4,1.14297116E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(<mask>);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
292,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5063,5066,BinaryOperatorMutator,==,=,2,0.057513356,opt <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt<mask>null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
293,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5063,5066,BinaryOperatorMutator,==,!=,3,0.03153613,opt <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt<mask>null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
294,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5063,5066,BinaryOperatorMutator,==,===,4,0.0016329667,opt <mask> null,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt<mask>null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
295,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5060,5062,IdentifierMutator-Variable,opt,option,1,0.0042829067,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (<mask> == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
296,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5060,5062,IdentifierMutator-Variable,opt,op,2,0.0021353588,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (<mask> == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
297,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5060,5062,IdentifierMutator-Variable,opt,obj,3,0.0010236461,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (<mask> == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
298,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5067,5070,IdentifierMutator-Literal,null,this,1,3.3139528E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt ==<mask>)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
299,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5067,5070,IdentifierMutator-Literal,null,undefined,2,2.7467843E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt ==<mask>)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
300,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5067,5070,IdentifierMutator-Literal,null,NULL,3,1.250361E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt ==<mask>)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
301,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,152,5067,5070,IdentifierMutator-Literal,null,nil,4,1.0682304E-4,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt ==<mask>)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
302,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5141,5171,IdentifierMutator-Literal,"""Defaultoptionwasn'tdefined""",option,0,0.2478203,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(<mask>, option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                 "
303,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5141,5171,IdentifierMutator-Literal,"""Defaultoptionwasn'tdefined""",cmd,1,0.12366124,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(<mask>, option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                 "
304,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5141,5171,IdentifierMutator-Literal,"""Defaultoptionwasn'tdefined""",opt,2,0.120653406,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(<mask>, option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                 "
305,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5141,5171,IdentifierMutator-Literal,"""Defaultoptionwasn'tdefined""",options,3,0.10545076,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(<mask>, option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                 "
306,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5141,5171,IdentifierMutator-Literal,"""Defaultoptionwasn'tdefined""",group,4,0.04697538,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(<mask>, option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                 "
307,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5174,5179,IdentifierMutator-Variable,option,opt,1,0.07057326,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"",<mask>);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
308,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5174,5179,IdentifierMutator-Variable,option,options,2,0.039551333,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"",<mask>);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
309,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,154,5174,5179,IdentifierMutator-Variable,option,e,4,0.014037585,<mask>,"void handleProperties(Properties properties) throws ParseException
    {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"",<mask>);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
             "
310,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5342,5355,MethodCallMutator,getOptionGroup,get,0,0.7023916,options.<mask>(opt),"        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.<mask>(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
"
311,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5342,5355,MethodCallMutator,getOptionGroup,group,1,0.2696853,options.<mask>(opt),"        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.<mask>(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
"
312,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5342,5355,MethodCallMutator,getOptionGroup,find,2,0.0069792257,options.<mask>(opt),"        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.<mask>(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
"
313,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5342,5355,MethodCallMutator,getOptionGroup,select,3,0.0032695378,options.<mask>(opt),"        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.<mask>(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
"
314,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5342,5355,MethodCallMutator,getOptionGroup,groups,4,0.0023132947,options.<mask>(opt),"        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.<mask>(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
"
315,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,IdentifierMutator-Variable,options,cmd,0,0.315714,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
316,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,IdentifierMutator-Variable,options,commands,1,0.19782652,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
317,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,IdentifierMutator-Variable,options,group,3,0.10420033,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
318,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,IdentifierMutator-Variable,options,groups,4,0.09325895,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
319,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,FieldReferenceMutator,options,cmd,0,0.315714,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
320,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,FieldReferenceMutator,options,commands,1,0.19782652,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
321,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,FieldReferenceMutator,options,group,3,0.10420033,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
322,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5334,5340,FieldReferenceMutator,options,groups,4,0.09325895,<mask>," {
        if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group =<mask>.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing"
323,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5357,5359,IdentifierMutator-Variable,opt,option,0,0.9751991,<mask>,"    if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(<mask>);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
  "
324,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5357,5359,IdentifierMutator-Variable,opt,group,1,0.008486222,<mask>,"    if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(<mask>);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
  "
325,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5357,5359,IdentifierMutator-Variable,opt,options,3,0.0019593672,<mask>,"    if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(<mask>);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
  "
326,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,158,5357,5359,IdentifierMutator-Variable,opt,Option,4,9.375951E-4,<mask>,"    if (properties == null)
        {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(<mask>);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
  "
327,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5407,5410,BinaryOperatorMutator,&&,&,2,0.00983652,(group != null) <mask> (group.getSelected() != null),"           return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null<mask>group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
 "
328,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5407,5410,BinaryOperatorMutator,&&,AND,3,0.0010307065,(group != null) <mask> (group.getSelected() != null),"           return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null<mask>group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
 "
329,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5407,5410,BinaryOperatorMutator,&&,;,4,5.303781E-4,(group != null) <mask> (group.getSelected() != null),"           return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null<mask>group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
 "
330,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5399,5402,BinaryOperatorMutator,!=,==,1,0.0018999464,group <mask> null,"
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group<mask>null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }"
331,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5399,5402,BinaryOperatorMutator,!=,=,2,6.676147E-4,group <mask> null,"
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group<mask>null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }"
332,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5399,5402,BinaryOperatorMutator,!=,"'t",3,9.980322E-5,group <mask> null,"
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group<mask>null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }"
333,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5399,5402,BinaryOperatorMutator,!=,N,4,9.959841E-5,group <mask> null,"
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group<mask>null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }"
334,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5394,5398,IdentifierMutator-Variable,group,groups,1,1.5866915E-4,<mask>," {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected =<mask> != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                   "
335,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5394,5398,IdentifierMutator-Variable,group,grouped,2,1.391811E-4,<mask>," {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected =<mask> != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                   "
336,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5394,5398,IdentifierMutator-Variable,group,grouping,4,5.3796717E-5,<mask>," {
            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected =<mask> != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                   "
337,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5403,5406,IdentifierMutator-Literal,null,this,2,8.100837E-5,<mask>,"            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group !=<mask> && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
"
338,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5403,5406,IdentifierMutator-Literal,null,group,3,3.863737E-5,<mask>,"            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group !=<mask> && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
"
339,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5403,5406,IdentifierMutator-Literal,null,NULL,4,2.3523397E-5,<mask>,"            return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group !=<mask> && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
"
340,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5430,5433,BinaryOperatorMutator,!=,==,0,0.92351335,group.getSelected() <mask> null,"    return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected()<mask>null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
        "
341,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5430,5433,BinaryOperatorMutator,!=,=,1,0.024620702,group.getSelected() <mask> null,"    return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected()<mask>null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
        "
342,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5430,5433,BinaryOperatorMutator,!=,||,3,0.0069129374,group.getSelected() <mask> null,"    return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected()<mask>null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
        "
343,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5430,5433,BinaryOperatorMutator,!=,|,4,0.0051646107,group.getSelected() <mask> null,"    return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected()<mask>null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
        "
344,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5417,5427,MethodCallMutator,getSelected,selected,0,0.3773271,group.<mask>(),"        return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.<mask>() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
      "
345,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5417,5427,MethodCallMutator,getSelected,value,1,0.26366007,group.<mask>(),"        return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.<mask>() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
      "
346,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5417,5427,MethodCallMutator,getSelected,group,2,0.04188443,group.<mask>(),"        return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.<mask>() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
      "
347,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5417,5427,MethodCallMutator,getSelected,select,3,0.04028747,group.<mask>(),"        return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.<mask>() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
      "
348,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5417,5427,MethodCallMutator,getSelected,default,4,0.022995971,group.<mask>(),"        return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.<mask>() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
      "
349,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5411,5415,IdentifierMutator-Variable,group,option,1,4.2023795E-4,<mask>,"          return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null &&<mask>.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
  "
350,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5411,5415,IdentifierMutator-Variable,group,command,3,5.273084E-5,<mask>,"          return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null &&<mask>.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
  "
351,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5411,5415,IdentifierMutator-Variable,group,groups,4,3.761989E-5,<mask>,"          return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null &&<mask>.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
  "
352,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5434,5437,IdentifierMutator-Literal,null,selected,1,0.09952981,<mask>,"   return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() !=<mask>;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
         "
353,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5434,5437,IdentifierMutator-Literal,null,false,2,0.085005395,<mask>,"   return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() !=<mask>;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
         "
354,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5434,5437,IdentifierMutator-Literal,null,0,3,0.03848827,<mask>,"   return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() !=<mask>;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
         "
355,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,159,5434,5437,IdentifierMutator-Literal,null,true,4,0.030673644,<mask>,"   return;
        }

        for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() !=<mask>;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
         "
356,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5479,5482,BinaryOperatorMutator,&&,||,1,0.035089243,(!cmd.hasOption(option)) <mask> (!selected),"Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option)<mask>!selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
               "
357,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5479,5482,BinaryOperatorMutator,&&,||,3,0.0060469722,(!cmd.hasOption(option)) <mask> (!selected),"Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option)<mask>!selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
               "
358,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5479,5482,BinaryOperatorMutator,&&,&,4,0.0020275845,(!cmd.hasOption(option)) <mask> (!selected),"Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option)<mask>!selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
               "
359,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5457,5457,UnaryOperatorMutator,!,sub,1,0.11981863,<mask>cmd.hasOption(option),"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (<mask>cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
       "
360,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5457,5457,UnaryOperatorMutator,!,?,2,0.027606739,<mask>cmd.hasOption(option),"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (<mask>cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
       "
361,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5457,5457,UnaryOperatorMutator,!,$,4,0.020519558,<mask>cmd.hasOption(option),"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (<mask>cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
       "
362,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5462,5470,MethodCallMutator,hasOption,has,0,0.7044057,cmd.<mask>(option),"    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.<mask>(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
           "
363,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5462,5470,MethodCallMutator,hasOption,option,1,0.059530072,cmd.<mask>(option),"    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.<mask>(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
           "
364,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5462,5470,MethodCallMutator,hasOption,selected,2,0.044422306,cmd.<mask>(option),"    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.<mask>(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
           "
365,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5462,5470,MethodCallMutator,hasOption,select,3,0.033793677,cmd.<mask>(option),"    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.<mask>(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
           "
366,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5462,5470,MethodCallMutator,hasOption,get,4,0.028181817,cmd.<mask>(option),"    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.<mask>(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
           "
367,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,IdentifierMutator-Variable,cmd,group,0,0.67153585,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
368,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,IdentifierMutator-Variable,cmd,groups,1,0.29095325,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
369,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,IdentifierMutator-Variable,cmd,options,2,0.023057235,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
370,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,IdentifierMutator-Variable,cmd,group,3,0.0012637667,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
371,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,IdentifierMutator-Variable,cmd,option,4,9.1240107E-4,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
372,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,FieldReferenceMutator,cmd,group,0,0.67153585,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
373,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,FieldReferenceMutator,cmd,groups,1,0.29095325,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
374,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,FieldReferenceMutator,cmd,options,2,0.023057235,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
375,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,FieldReferenceMutator,cmd,group,3,0.0012637667,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
376,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5458,5460,FieldReferenceMutator,cmd,option,4,9.1240107E-4,<mask>,"      for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!<mask>.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
        "
377,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5472,5477,IdentifierMutator-Variable,option,opt,0,0.65403724,<mask>," for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(<mask>) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
             "
378,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5472,5477,IdentifierMutator-Variable,option,op,2,0.0015991181,<mask>," for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(<mask>) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
             "
379,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5472,5477,IdentifierMutator-Variable,option,key,3,5.6968856E-4,<mask>," for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(<mask>) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
             "
380,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5472,5477,IdentifierMutator-Variable,option,options,4,4.8082878E-4,<mask>," for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(<mask>) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
             "
381,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5483,5483,UnaryOperatorMutator,!,(!,1,0.006975263,<mask>selected,"umeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) &&<mask>selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else"
382,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5483,5483,UnaryOperatorMutator,!,(,2,0.0046014767,<mask>selected,"umeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) &&<mask>selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else"
383,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5483,5483,UnaryOperatorMutator,!,//,4,1.5046565E-4,<mask>selected,"umeration<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) &&<mask>selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else"
384,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5484,5491,IdentifierMutator-Variable,selected,active,2,8.6000364E-5,<mask>,"ation<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !<mask>)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if"
385,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5484,5491,IdentifierMutator-Variable,selected,matched,3,6.671985E-5,<mask>,"ation<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !<mask>)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if"
386,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,161,5484,5491,IdentifierMutator-Variable,selected,Selected,4,6.009544E-5,<mask>,"ation<?> e = properties.propertyNames(); e.hasMoreElements();)
        {
            String option = e.nextElement().toString();

            Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !<mask>)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if"
387,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5603,5613,MethodCallMutator,getProperty,get,0,0.9686609,properties.<mask>(option),"    Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.<mask>(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
           "
388,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5603,5613,MethodCallMutator,getProperty,value,1,0.008809645,properties.<mask>(option),"    Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.<mask>(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
           "
389,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5603,5613,MethodCallMutator,getProperty,option,2,0.004737866,properties.<mask>(option),"    Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.<mask>(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
           "
390,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5603,5613,MethodCallMutator,getProperty,property,3,0.00164794,properties.<mask>(option),"    Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.<mask>(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
           "
391,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5603,5613,MethodCallMutator,getProperty,string,4,0.0016225087,properties.<mask>(option),"    Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.<mask>(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
           "
392,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5592,5601,IdentifierMutator-Variable,properties,cmd,0,0.39314133,<mask>,"      Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value =<mask>.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
        "
393,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5592,5601,IdentifierMutator-Variable,properties,props,1,0.26018086,<mask>,"      Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value =<mask>.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
        "
394,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5592,5601,IdentifierMutator-Variable,properties,options,3,0.050830655,<mask>,"      Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value =<mask>.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
        "
395,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5592,5601,IdentifierMutator-Variable,properties,config,4,0.025946906,<mask>,"      Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value =<mask>.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
        "
396,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5615,5620,IdentifierMutator-Variable,option,opt,1,0.025625369,<mask>," Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(<mask>);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
             "
397,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5615,5620,IdentifierMutator-Variable,option,key,2,9.038548E-4,<mask>," Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(<mask>);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
             "
398,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,164,5615,5620,IdentifierMutator-Variable,option,property,3,4.3530436E-4,<mask>," Option opt = options.getOption(option);
            if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(<mask>);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
             "
399,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5649,5654,MethodCallMutator,hasArg,get,0,0.18675202,opt.<mask>()," if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.<mask>())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
"
400,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5649,5654,MethodCallMutator,hasArg,value,1,0.10880897,opt.<mask>()," if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.<mask>())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
"
401,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5649,5654,MethodCallMutator,hasArg,optional,2,0.07760876,opt.<mask>()," if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.<mask>())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
"
402,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5649,5654,MethodCallMutator,hasArg,required,3,0.0528468,opt.<mask>()," if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.<mask>())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
"
403,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5649,5654,MethodCallMutator,hasArg,valid,4,0.051431943,opt.<mask>()," if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.<mask>())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
"
404,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5645,5647,IdentifierMutator-Variable,opt,option,1,0.16362153,<mask>,"   if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (<mask>.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase("
405,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5645,5647,IdentifierMutator-Variable,opt,value,2,0.024802158,<mask>,"   if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (<mask>.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase("
406,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5645,5647,IdentifierMutator-Variable,opt,prop,3,0.023025872,<mask>,"   if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (<mask>.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase("
407,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,166,5645,5647,IdentifierMutator-Variable,opt,arg,4,0.011190601,<mask>,"   if (opt == null)
            {
                throw new UnrecognizedOptionException(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (<mask>.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase("
408,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5724,5727,BinaryOperatorMutator,||,|,1,0.016967352,(opt.getValues() == null) <mask> (opt.getValues().length == 0)," option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null<mask>opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then"
409,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5724,5727,BinaryOperatorMutator,||,/,3,0.0036107358,(opt.getValues() == null) <mask> (opt.getValues().length == 0)," option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null<mask>opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then"
410,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5724,5727,BinaryOperatorMutator,||,.,4,0.0032919669,(opt.getValues() == null) <mask> (opt.getValues().length == 0)," option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null<mask>opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then"
411,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5716,5719,BinaryOperatorMutator,==,=,2,0.023208829,opt.getValues() <mask> null," defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues()<mask>null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or"
412,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5716,5719,BinaryOperatorMutator,==,is,3,0.0015102897,opt.getValues() <mask> null," defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues()<mask>null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or"
413,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5716,5719,BinaryOperatorMutator,==,_,4,9.764266E-4,opt.getValues() <mask> null," defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues()<mask>null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or"
414,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5705,5713,MethodCallMutator,getValues,values,0,0.84502184,opt.<mask>()," option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.<mask>() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes,"
415,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5705,5713,MethodCallMutator,getValues,value,1,0.04594819,opt.<mask>()," option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.<mask>() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes,"
416,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5705,5713,MethodCallMutator,getValues,args,2,0.043833196,opt.<mask>()," option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.<mask>() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes,"
417,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5705,5713,MethodCallMutator,getValues,vals,3,0.006294268,opt.<mask>()," option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.<mask>() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes,"
418,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5705,5713,MethodCallMutator,getValues,val,4,0.0042085825,opt.<mask>()," option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.<mask>() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes,"
419,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5701,5703,IdentifierMutator-Variable,opt,option,1,0.0039416966,<mask>,"(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (<mask>.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is"
420,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5701,5703,IdentifierMutator-Variable,opt,op,2,2.9474217E-4,<mask>,"(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (<mask>.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is"
421,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5701,5703,IdentifierMutator-Variable,opt,Opt,3,2.3800303E-4,<mask>,"(""Default option wasn't defined"", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (<mask>.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is"
422,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5720,5723,IdentifierMutator-Literal,null,"""""",1,3.5939214E-4,<mask>,""", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() ==<mask> || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1"
423,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5720,5723,IdentifierMutator-Literal,null,nil,2,2.8333062E-4,<mask>,""", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() ==<mask> || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1"
424,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5720,5723,IdentifierMutator-Literal,null,NULL,3,2.1826234E-4,<mask>,""", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() ==<mask> || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1"
425,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5720,5723,IdentifierMutator-Literal,null,0,4,1.7265858E-4,<mask>,""", option);
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() ==<mask> || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1"
426,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5750,5753,BinaryOperatorMutator,==,>,2,0.075808376,opt.getValues().length <mask> 0,"        }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length<mask>0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the"
427,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5750,5753,BinaryOperatorMutator,==,=,3,0.041596565,opt.getValues().length <mask> 0,"        }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length<mask>0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the"
428,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5750,5753,BinaryOperatorMutator,==,(,4,0.007206044,opt.getValues().length <mask> 0,"        }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length<mask>0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the"
429,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5749,IdentifierMutator-Variable,opt.getValues().length,value,0,0.9532873,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
430,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5749,IdentifierMutator-Variable,opt.getValues().length,option,1,0.0051596304,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
431,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5749,IdentifierMutator-Variable,opt.getValues().length,value,2,0.004289257,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
432,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5749,IdentifierMutator-Variable,opt.getValues().length,count,3,0.0034079861,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
433,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5749,IdentifierMutator-Variable,opt.getValues().length,i,4,0.0026564111,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
434,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5732,5740,MethodCallMutator,getValues,values,0,0.9928877,opt.<mask>(),"            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.<mask>().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the"
435,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5732,5740,MethodCallMutator,getValues,value,1,0.0015172545,opt.<mask>(),"            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.<mask>().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the"
436,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5732,5740,MethodCallMutator,getValues,vals,2,0.0011489245,opt.<mask>(),"            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.<mask>().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the"
437,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5732,5740,MethodCallMutator,getValues,get,3,8.82778E-4,opt.<mask>(),"            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.<mask>().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the"
438,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5732,5740,MethodCallMutator,getValues,args,4,7.0198596E-4,opt.<mask>(),"            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.<mask>().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the"
439,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5730,IdentifierMutator-Variable,opt,option,1,0.028729765,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask>.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don"
440,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5730,IdentifierMutator-Variable,opt,options,3,4.0188205E-4,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask>.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don"
441,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5728,5730,IdentifierMutator-Variable,opt,config,4,2.2969084E-4,<mask>,");
            }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null ||<mask>.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don"
442,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5744,5749,FieldReferenceMutator,length,size,1,0.08844001,opt.getValues().<mask>,"         }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
443,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5744,5749,FieldReferenceMutator,length,count,2,0.002381224,opt.getValues().<mask>,"         }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
444,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5744,5749,FieldReferenceMutator,length,value,3,9.848268E-4,opt.getValues().<mask>,"         }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
445,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5744,5749,FieldReferenceMutator,length,values,4,4.3599855E-4,opt.getValues().<mask>,"         }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().<mask> == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to"
446,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5754,5754,IdentifierMutator-Literal,0,1,1,7.347405E-4,<mask>,"       }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length ==<mask>)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the Command"
447,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5754,5754,IdentifierMutator-Literal,0,zero,2,2.1427934E-4,<mask>,"       }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length ==<mask>)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the Command"
448,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,168,5754,5754,IdentifierMutator-Literal,0,null,4,1.7803533E-5,<mask>,"       }

            // if the option is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length ==<mask>)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the Command"
449,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5807,5827,MethodCallMutator,addValueForProcessing,set,0,0.4070169,opt.<mask>(value),"   OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.<mask>(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

            "
450,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5807,5827,MethodCallMutator,addValueForProcessing,add,1,0.14549053,opt.<mask>(value),"   OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.<mask>(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

            "
451,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5807,5827,MethodCallMutator,addValueForProcessing,val,2,0.060064547,opt.<mask>(value),"   OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.<mask>(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

            "
452,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5807,5827,MethodCallMutator,addValueForProcessing,append,3,0.055412315,opt.<mask>(value),"   OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.<mask>(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

            "
453,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5807,5827,MethodCallMutator,addValueForProcessing,value,4,0.04475792,opt.<mask>(value),"   OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.<mask>(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

            "
454,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5803,5805,IdentifierMutator-Variable,opt,option,0,0.24657376,<mask>," is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {<mask>.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

      "
455,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5803,5805,IdentifierMutator-Variable,opt,cmd,2,0.12722608,<mask>," is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {<mask>.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

      "
456,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5803,5805,IdentifierMutator-Variable,opt,command,3,0.053078633,<mask>," is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {<mask>.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

      "
457,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5803,5805,IdentifierMutator-Variable,opt,options,4,0.03475505,<mask>," is part of a group, check if another option of the group has been selected
            OptionGroup group = options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {<mask>.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

      "
458,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5829,5833,IdentifierMutator-Variable,value,val,1,0.0018276772,<mask>," options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(<mask>);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

              "
459,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5829,5833,IdentifierMutator-Variable,value,true,2,0.0011756787,<mask>," options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(<mask>);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

              "
460,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,170,5829,5833,IdentifierMutator-Variable,value,Value,3,7.960945E-4,<mask>," options.getOptionGroup(opt);
            boolean selected = group != null && group.getSelected() != null;

            if (!cmd.hasOption(option) && !selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(<mask>);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

              "
461,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5902,5902,UnaryOperatorMutator,!,^,1,0.10797994,"<mask>((""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) || ""1"".equalsIgnoreCase(value))","selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (<mask>(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
462,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5902,5902,UnaryOperatorMutator,!,(,2,0.052242585,"<mask>((""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) || ""1"".equalsIgnoreCase(value))","selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (<mask>(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
463,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5902,5902,UnaryOperatorMutator,!,test,3,0.03916918,"<mask>((""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) || ""1"".equalsIgnoreCase(value))","selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (<mask>(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
464,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5902,5902,UnaryOperatorMutator,!,(,4,0.023868812,"<mask>((""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) || ""1"".equalsIgnoreCase(value))","selected)
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (<mask>(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
465,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5991,6018,BinaryOperatorMutator,||,|,2,0.09987842,"(""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) <mask> ""1"".equalsIgnoreCase(value)","        String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)<mask>""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
466,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5991,6018,BinaryOperatorMutator,||,==,3,0.037333127,"(""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) <mask> ""1"".equalsIgnoreCase(value)","        String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)<mask>""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
467,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5991,6018,BinaryOperatorMutator,||,&&,4,0.03479067,"(""yes"".equalsIgnoreCase(value) || ""true"".equalsIgnoreCase(value)) <mask> ""1"".equalsIgnoreCase(value)","        String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)<mask>""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
468,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5933,5960,BinaryOperatorMutator,||,|,1,0.16586803,"""yes"".equalsIgnoreCase(value) <mask> ""true"".equalsIgnoreCase(value)","    {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)<mask>""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
469,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5933,5960,BinaryOperatorMutator,||,==,3,0.057821374,"""yes"".equalsIgnoreCase(value) <mask> ""true"".equalsIgnoreCase(value)","    {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)<mask>""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
470,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5933,5960,BinaryOperatorMutator,||,&&,4,0.052744,"""yes"".equalsIgnoreCase(value) <mask> ""true"".equalsIgnoreCase(value)","    {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)<mask>""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
471,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5910,5925,MethodCallMutator,equalsIgnoreCase,test,0,0.7331069,"""yes"".<mask>(value)","            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".<mask>(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
472,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5910,5925,MethodCallMutator,equalsIgnoreCase,is,1,0.07616809,"""yes"".<mask>(value)","            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".<mask>(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
473,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5910,5925,MethodCallMutator,equalsIgnoreCase,match,2,0.03826175,"""yes"".<mask>(value)","            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".<mask>(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
474,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5910,5925,MethodCallMutator,equalsIgnoreCase,equals,3,0.017415065,"""yes"".<mask>(value)","            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".<mask>(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
475,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5910,5925,MethodCallMutator,equalsIgnoreCase,equ,4,0.014203193,"""yes"".<mask>(value)","            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".<mask>(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
476,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5904,5908,IdentifierMutator-Literal,"""yes""",yes,0,0.98404413,<mask>,")
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(<mask>.equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
477,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5904,5908,IdentifierMutator-Literal,"""yes""",Yes,1,0.0051330733,<mask>,")
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(<mask>.equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
478,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5904,5908,IdentifierMutator-Literal,"""yes""",YES,2,0.003522964,<mask>,")
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(<mask>.equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
479,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5904,5908,IdentifierMutator-Literal,"""yes""",no,3,0.001972449,<mask>,")
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(<mask>.equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
480,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5904,5908,IdentifierMutator-Literal,"""yes""",yes,4,0.0016257978,<mask>,")
            {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(<mask>.equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
481,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5927,5931,IdentifierMutator-Variable,value,true,1,2.6036415E-4,<mask>,"      {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(<mask>)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
482,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5927,5931,IdentifierMutator-Variable,value,key,2,1.1655871E-4,<mask>,"      {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(<mask>)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
483,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,173,5927,5931,IdentifierMutator-Variable,value,values,3,5.9389236E-5,<mask>,"      {
                // get the value from the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(<mask>)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
484,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5968,5983,MethodCallMutator,equalsIgnoreCase,test,0,0.44568512,"""true"".<mask>(value)","                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".<mask>(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
485,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5968,5983,MethodCallMutator,equalsIgnoreCase,equals,1,0.13632457,"""true"".<mask>(value)","                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".<mask>(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
486,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5968,5983,MethodCallMutator,equalsIgnoreCase,is,2,0.051523946,"""true"".<mask>(value)","                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".<mask>(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
487,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5968,5983,MethodCallMutator,equalsIgnoreCase,match,3,0.046498135,"""true"".<mask>(value)","                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".<mask>(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
488,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5968,5983,MethodCallMutator,equalsIgnoreCase,digit,4,0.022354176,"""true"".<mask>(value)","                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".<mask>(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
489,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5961,5966,IdentifierMutator-Literal,"""true""",true,0,0.59748715,<mask>," the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
490,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5961,5966,IdentifierMutator-Literal,"""true""",false,1,0.08458982,<mask>," the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
491,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5961,5966,IdentifierMutator-Literal,"""true""",no,2,0.06555042,<mask>," the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
492,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5961,5966,IdentifierMutator-Literal,"""true""",yes,3,0.05693864,<mask>," the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
493,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5961,5966,IdentifierMutator-Literal,"""true""",0,4,0.028387187,<mask>," the properties
                String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
494,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5985,5989,IdentifierMutator-Variable,value,true,1,4.718624E-5,<mask>,"          String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(<mask>)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
495,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5985,5989,IdentifierMutator-Variable,value,key,2,4.345284E-5,<mask>,"          String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(<mask>)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
496,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,174,5985,5989,IdentifierMutator-Variable,value,Value,4,2.4168365E-5,<mask>,"          String value = properties.getProperty(option);

                if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(<mask>)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
497,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6023,6038,MethodCallMutator,equalsIgnoreCase,test,0,0.5681339,"""1"".<mask>(value)","      if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".<mask>(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
498,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6023,6038,MethodCallMutator,equalsIgnoreCase,equals,1,0.08542143,"""1"".<mask>(value)","      if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".<mask>(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
499,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6023,6038,MethodCallMutator,equalsIgnoreCase,match,2,0.042423684,"""1"".<mask>(value)","      if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".<mask>(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
500,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6023,6038,MethodCallMutator,equalsIgnoreCase,equ,3,0.033486046,"""1"".<mask>(value)","      if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".<mask>(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
501,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6023,6038,MethodCallMutator,equalsIgnoreCase,format,4,0.029519616,"""1"".<mask>(value)","      if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".<mask>(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
502,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6019,6021,IdentifierMutator-Literal,"""1""",1,0,0.874708,<mask>,"         if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
503,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6019,6021,IdentifierMutator-Literal,"""1""","""""",1,0.037257306,<mask>,"         if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
504,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6019,6021,IdentifierMutator-Literal,"""1""",0,2,0.025852583,<mask>,"         if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
505,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6019,6021,IdentifierMutator-Literal,"""1""",yes,3,0.011874684,<mask>,"         if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
506,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6019,6021,IdentifierMutator-Literal,"""1""",no,4,0.011488984,<mask>,"         if (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        ||<mask>.equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
507,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6040,6044,IdentifierMutator-Variable,value,key,1,6.4462954E-5,<mask>," (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(<mask>)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
508,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6040,6044,IdentifierMutator-Variable,value,true,2,4.3777763E-5,<mask>," (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(<mask>)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
509,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,175,6040,6044,IdentifierMutator-Variable,value,Value,3,3.906708E-5,<mask>," (opt.hasArg())
                {
                    if (opt.getValues() == null || opt.getValues().length == 0)
                    {
                        opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(<mask>)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption = null;
            }
        }
   "
510,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6235,6246,MethodCallMutator,handleOption,add,0,0.58872676,<mask>(opt),"         opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }<mask>(opt);
                currentOption = null;
            }
        }
   "
511,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6235,6246,MethodCallMutator,handleOption,append,1,0.096370414,<mask>(opt),"         opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }<mask>(opt);
                currentOption = null;
            }
        }
   "
512,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6235,6246,MethodCallMutator,handleOption,process,2,0.04391191,<mask>(opt),"         opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }<mask>(opt);
                currentOption = null;
            }
        }
   "
513,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6235,6246,MethodCallMutator,handleOption,Add,3,0.02356239,<mask>(opt),"         opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }<mask>(opt);
                currentOption = null;
            }
        }
   "
514,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6235,6246,MethodCallMutator,handleOption,push,4,0.023103105,<mask>(opt),"         opt.addValueForProcessing(value);
                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }<mask>(opt);
                currentOption = null;
            }
        }
   "
515,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6248,6250,IdentifierMutator-Variable,opt,option,0,0.77181935,<mask>,"                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(<mask>);
                currentOption = null;
            }
        }
   "
516,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6248,6250,IdentifierMutator-Variable,opt,value,1,0.08815811,<mask>,"                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(<mask>);
                currentOption = null;
            }
        }
   "
517,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6248,6250,IdentifierMutator-Variable,opt,options,2,0.027094891,<mask>,"                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(<mask>);
                currentOption = null;
            }
        }
   "
518,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6248,6250,IdentifierMutator-Variable,opt,Option,3,0.019007796,<mask>,"                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(<mask>);
                currentOption = null;
            }
        }
   "
519,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,181,6248,6250,IdentifierMutator-Variable,opt,key,4,0.006216214,<mask>,"                    }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(<mask>);
                currentOption = null;
            }
        }
   "
520,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6283,6283,AssignmentMutator,currentOption=null,!,0,0.61008716,currentOption <mask>= null,"
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption<mask>= null;
            }
        }
   "
521,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6283,6283,AssignmentMutator,currentOption=null,||,1,0.13402168,currentOption <mask>= null,"
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption<mask>= null;
            }
        }
   "
522,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6283,6283,AssignmentMutator,currentOption=null,|,2,0.052937165,currentOption <mask>= null,"
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption<mask>= null;
            }
        }
   "
523,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6283,6283,AssignmentMutator,currentOption=null,!,3,0.043391418,currentOption <mask>= null,"
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption<mask>= null;
            }
        }
   "
524,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6283,6283,AssignmentMutator,currentOption=null,List,4,0.031803172,currentOption <mask>= null,"
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption<mask>= null;
            }
        }
   "
525,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,IdentifierMutator-Variable,currentOption,opt,0,0.38685647,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
526,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,IdentifierMutator-Variable,currentOption,option,1,0.2539296,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
527,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,IdentifierMutator-Variable,currentOption,opt,2,0.11726517,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
528,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,IdentifierMutator-Variable,currentOption,value,3,0.06382404,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
529,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,IdentifierMutator-Variable,currentOption,Opt,4,0.009316259,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
530,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,FieldReferenceMutator,currentOption,opt,0,0.38685647,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
531,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,FieldReferenceMutator,currentOption,option,1,0.2539296,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
532,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,FieldReferenceMutator,currentOption,opt,2,0.11726517,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
533,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,FieldReferenceMutator,currentOption,value,3,0.06382404,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
534,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6270,6282,FieldReferenceMutator,currentOption,Opt,4,0.009316259,<mask>,"                  }
                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);<mask> = null;
            }
        }
   "
535,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6286,6289,IdentifierMutator-Literal,null,opt,0,0.6591376,<mask>,"                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption =<mask>;
            }
        }
   "
536,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6286,6289,IdentifierMutator-Literal,null,option,1,0.14085793,<mask>,"                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption =<mask>;
            }
        }
   "
537,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6286,6289,IdentifierMutator-Literal,null,true,2,0.05321074,<mask>,"                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption =<mask>;
            }
        }
   "
538,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6286,6289,IdentifierMutator-Literal,null,opt,3,0.021112226,<mask>,"                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption =<mask>;
            }
        }
   "
539,DefaultParser.java,handleProperties,void handleProperties(Properties properties) throws ParseException,140,182,6286,6289,IdentifierMutator-Literal,null,value,4,0.015676994,<mask>,"                }
                else if (!(""yes"".equalsIgnoreCase(value)
                        || ""true"".equalsIgnoreCase(value)
                        || ""1"".equalsIgnoreCase(value)))
                {
                    // if the value is not yes, true or 1 then don't add the option to the CommandLine
                    continue;
                }

                handleOption(opt);
                currentOption =<mask>;
            }
        }
   "
540,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6699,6699,UnaryOperatorMutator,!,un,2,0.0020232685,<mask>expectedOpts.isEmpty(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (<mask>expectedOpts.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
541,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6699,6699,UnaryOperatorMutator,!,...,3,0.0018507335,<mask>expectedOpts.isEmpty(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (<mask>expectedOpts.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
542,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6699,6699,UnaryOperatorMutator,!,(!,4,8.224823E-4,<mask>expectedOpts.isEmpty(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (<mask>expectedOpts.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
543,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6713,6719,MethodCallMutator,isEmpty,empty,0,0.6667804,expectedOpts.<mask>(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.<mask>())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
544,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6713,6719,MethodCallMutator,isEmpty,size,1,0.04881264,expectedOpts.<mask>(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.<mask>())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
545,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6713,6719,MethodCallMutator,isEmpty,clear,2,0.021722041,expectedOpts.<mask>(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.<mask>())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
546,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6713,6719,MethodCallMutator,isEmpty,available,3,0.018670078,expectedOpts.<mask>(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.<mask>())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
547,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6713,6719,MethodCallMutator,isEmpty,has,4,0.016901663,expectedOpts.<mask>(),"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.<mask>())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
548,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,IdentifierMutator-Variable,expectedOpts,required,0,0.64160365,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
549,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,IdentifierMutator-Variable,expectedOpts,options,1,0.12113621,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
550,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,IdentifierMutator-Variable,expectedOpts,requires,2,0.06796344,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
551,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,IdentifierMutator-Variable,expectedOpts,required,3,0.029353261,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
552,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,IdentifierMutator-Variable,expectedOpts,Required,4,0.018611845,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
553,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,FieldReferenceMutator,expectedOpts,required,0,0.64160365,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
554,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,FieldReferenceMutator,expectedOpts,options,1,0.12113621,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
555,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,FieldReferenceMutator,expectedOpts,requires,2,0.06796344,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
556,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,FieldReferenceMutator,expectedOpts,required,3,0.029353261,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
557,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,197,6700,6711,FieldReferenceMutator,expectedOpts,Required,4,0.018611845,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!<mask>.isEmpty())
        {
            throw new MissingOptionException(expectedOpts);
        }
    }"
558,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,IdentifierMutator-Variable,expectedOpts,options,0,0.29004666,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
559,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,IdentifierMutator-Variable,expectedOpts,name,1,0.081319645,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
560,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,IdentifierMutator-Variable,expectedOpts,this,2,0.05376326,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
561,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,IdentifierMutator-Variable,expectedOpts,missing,3,0.039262604,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
562,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,IdentifierMutator-Variable,expectedOpts,option,4,0.035910122,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
563,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,FieldReferenceMutator,expectedOpts,options,0,0.29004666,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
564,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,FieldReferenceMutator,expectedOpts,name,1,0.081319645,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
565,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,FieldReferenceMutator,expectedOpts,this,2,0.05376326,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
566,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,FieldReferenceMutator,expectedOpts,missing,3,0.039262604,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
567,DefaultParser.java,checkRequiredOptions,void checkRequiredOptions() throws MissingOptionException,194,199,6779,6790,FieldReferenceMutator,expectedOpts,option,4,0.035910122,<mask>,"void checkRequiredOptions() throws MissingOptionException
    {
        // if there are required options that have not been processed
        if (!expectedOpts.isEmpty())
        {
            throw new MissingOptionException(<mask>);
        }
    }"
568,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7051,7054,BinaryOperatorMutator,&&,&,2,0.0022428783,(currentOption != null) <mask> currentOption.requiresArg(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null<mask>currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
569,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7051,7054,BinaryOperatorMutator,&&,And,3,8.855791E-4,(currentOption != null) <mask> currentOption.requiresArg(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null<mask>currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
570,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7051,7054,BinaryOperatorMutator,&&,AND,4,5.826598E-4,(currentOption != null) <mask> currentOption.requiresArg(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null<mask>currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
571,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7043,7046,BinaryOperatorMutator,!=,==,1,0.046028357,currentOption <mask> null,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption<mask>null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
572,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7043,7046,BinaryOperatorMutator,!=,=,2,0.003639176,currentOption <mask> null,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption<mask>null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
573,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7043,7046,BinaryOperatorMutator,!=,==,3,0.0014425342,currentOption <mask> null,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption<mask>null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
574,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7043,7046,BinaryOperatorMutator,!=,!,4,4.2225627E-4,currentOption <mask> null,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption<mask>null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
575,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,IdentifierMutator-Variable,currentOption,option,0,0.2505475,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
576,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,IdentifierMutator-Variable,currentOption,argument,1,0.23245516,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
577,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,IdentifierMutator-Variable,currentOption,default,2,0.054788966,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
578,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,IdentifierMutator-Variable,currentOption,arg,3,0.053901486,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
579,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,IdentifierMutator-Variable,currentOption,null,4,0.041816257,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
580,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,FieldReferenceMutator,currentOption,option,0,0.2505475,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
581,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,FieldReferenceMutator,currentOption,argument,1,0.23245516,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
582,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,FieldReferenceMutator,currentOption,default,2,0.054788966,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
583,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,FieldReferenceMutator,currentOption,arg,3,0.053901486,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
584,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7030,7042,FieldReferenceMutator,currentOption,null,4,0.041816257,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (<mask> != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
585,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7047,7050,IdentifierMutator-Literal,null,this,2,6.3235144E-4,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption !=<mask> && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
586,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7047,7050,IdentifierMutator-Literal,null,NULL,3,4.329714E-4,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption !=<mask> && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
587,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7047,7050,IdentifierMutator-Literal,null,undefined,4,2.648466E-4,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption !=<mask> && currentOption.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
588,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7069,7079,MethodCallMutator,requiresArg,required,0,0.49025372,currentOption.<mask>(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.<mask>())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
589,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7069,7079,MethodCallMutator,requiresArg,empty,1,0.11652856,currentOption.<mask>(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.<mask>())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
590,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7069,7079,MethodCallMutator,requiresArg,missing,2,0.1152004,currentOption.<mask>(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.<mask>())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
591,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7069,7079,MethodCallMutator,requiresArg,optional,3,0.112269595,currentOption.<mask>(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.<mask>())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
592,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7069,7079,MethodCallMutator,requiresArg,null,4,0.03189909,currentOption.<mask>(),"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.<mask>())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
593,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,IdentifierMutator-Variable,currentOption,option,0,0.4929307,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
594,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,IdentifierMutator-Variable,currentOption,argument,1,0.08145548,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
595,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,IdentifierMutator-Variable,currentOption,opt,2,0.056014344,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
596,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,IdentifierMutator-Variable,currentOption,options,3,0.054057233,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
597,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,IdentifierMutator-Variable,currentOption,this,4,0.04227366,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
598,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,FieldReferenceMutator,currentOption,option,0,0.4929307,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
599,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,FieldReferenceMutator,currentOption,argument,1,0.08145548,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
600,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,FieldReferenceMutator,currentOption,opt,2,0.056014344,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
601,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,FieldReferenceMutator,currentOption,options,3,0.054057233,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
602,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,209,7055,7067,FieldReferenceMutator,currentOption,this,4,0.04227366,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null &&<mask>.requiresArg())
        {
            throw new MissingArgumentException(currentOption);
        }
    }"
603,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,IdentifierMutator-Variable,currentOption,args,0,0.09294984,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
604,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,IdentifierMutator-Variable,currentOption,arg,1,0.07031883,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
605,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,IdentifierMutator-Variable,currentOption,string,2,0.068258256,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
606,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,IdentifierMutator-Variable,currentOption,argument,3,0.067777336,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
607,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,IdentifierMutator-Variable,currentOption,text,4,0.064058155,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
608,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,FieldReferenceMutator,currentOption,args,0,0.09294984,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
609,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,FieldReferenceMutator,currentOption,arg,1,0.07031883,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
610,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,FieldReferenceMutator,currentOption,string,2,0.068258256,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
611,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,FieldReferenceMutator,currentOption,argument,3,0.067777336,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
612,DefaultParser.java,checkRequiredArgs,void checkRequiredArgs() throws ParseException,207,211,7141,7153,FieldReferenceMutator,currentOption,text,4,0.064058155,<mask>,"void checkRequiredArgs() throws ParseException
    {
        if (currentOption != null && currentOption.requiresArg())
        {
            throw new MissingArgumentException(<mask>);
        }
    }"
613,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7409,7409,AssignmentMutator,currentToken=token,|,0,0.7214588,currentToken <mask>= token,"void handleToken(String token) throws ParseException
    {
        currentToken<mask>= token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
614,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7409,7409,AssignmentMutator,currentToken=token,.,1,0.081047244,currentToken <mask>= token,"void handleToken(String token) throws ParseException
    {
        currentToken<mask>= token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
615,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7409,7409,AssignmentMutator,currentToken=token,^,2,0.040207554,currentToken <mask>= token,"void handleToken(String token) throws ParseException
    {
        currentToken<mask>= token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
616,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7409,7409,AssignmentMutator,currentToken=token,||,3,0.03380711,currentToken <mask>= token,"void handleToken(String token) throws ParseException
    {
        currentToken<mask>= token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
617,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7409,7409,AssignmentMutator,currentToken=token,*,4,0.023132542,currentToken <mask>= token,"void handleToken(String token) throws ParseException
    {
        currentToken<mask>= token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
618,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,IdentifierMutator-Variable,currentToken,token,0,0.1916493,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
619,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,IdentifierMutator-Variable,currentToken,command,1,0.10691077,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
620,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,IdentifierMutator-Variable,currentToken,cmd,2,0.05021384,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
621,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,IdentifierMutator-Variable,currentToken,input,3,0.04190361,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
622,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,IdentifierMutator-Variable,currentToken,current,4,0.03380786,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
623,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,FieldReferenceMutator,currentToken,token,0,0.1916493,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
624,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,FieldReferenceMutator,currentToken,command,1,0.10691077,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
625,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,FieldReferenceMutator,currentToken,cmd,2,0.05021384,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
626,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,FieldReferenceMutator,currentToken,input,3,0.04190361,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
627,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7397,7408,FieldReferenceMutator,currentToken,current,4,0.03380786,<mask>,"void handleToken(String token) throws ParseException
    {<mask> = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
628,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7412,7416,IdentifierMutator-Variable,token,null,1,0.003090575,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken =<mask>;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
629,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7412,7416,IdentifierMutator-Variable,token,"""""",2,4.3701773E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken =<mask>;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
630,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,223,7412,7416,IdentifierMutator-Variable,token,"''",4,2.3900214E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken =<mask>;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
631,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,IdentifierMutator-Variable,skipParsing,command,0,0.10170679,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
632,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,IdentifierMutator-Variable,skipParsing,debug,1,0.08909125,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
633,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,IdentifierMutator-Variable,skipParsing,cli,2,0.066645555,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
634,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,IdentifierMutator-Variable,skipParsing,cmd,3,0.059604794,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
635,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,IdentifierMutator-Variable,skipParsing,help,4,0.027472736,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
636,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,FieldReferenceMutator,skipParsing,command,0,0.10170679,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
637,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,FieldReferenceMutator,skipParsing,debug,1,0.08909125,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
638,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,FieldReferenceMutator,skipParsing,cli,2,0.066645555,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
639,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,FieldReferenceMutator,skipParsing,cmd,3,0.059604794,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
640,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,225,7432,7442,FieldReferenceMutator,skipParsing,help,4,0.027472736,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (<mask>)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
641,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7471,7476,MethodCallMutator,addArg,parse,0,0.6748754,cmd.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.<mask>(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
642,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7471,7476,MethodCallMutator,addArg,add,1,0.07143753,cmd.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.<mask>(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
643,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7471,7476,MethodCallMutator,addArg,append,2,0.040967997,cmd.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.<mask>(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
644,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7471,7476,MethodCallMutator,addArg,argument,3,0.009293902,cmd.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.<mask>(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
645,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7471,7476,MethodCallMutator,addArg,accept,4,0.00867719,cmd.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.<mask>(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
646,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,IdentifierMutator-Variable,cmd,parser,0,0.54078496,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
647,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,IdentifierMutator-Variable,cmd,this,1,0.07122337,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
648,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,IdentifierMutator-Variable,cmd,options,2,0.030545041,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
649,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,IdentifierMutator-Variable,cmd,option,3,0.025792148,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
650,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,IdentifierMutator-Variable,cmd,expression,4,0.013845611,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
651,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,FieldReferenceMutator,cmd,parser,0,0.54078496,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
652,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,FieldReferenceMutator,cmd,this,1,0.07122337,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
653,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,FieldReferenceMutator,cmd,options,2,0.030545041,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
654,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,FieldReferenceMutator,cmd,option,3,0.025792148,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
655,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7467,7469,FieldReferenceMutator,cmd,expression,4,0.013845611,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {<mask>.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
656,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7478,7482,IdentifierMutator-Variable,token,argument,1,0.0057544024,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(<mask>);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
657,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7478,7482,IdentifierMutator-Variable,token,arg,2,0.002488442,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(<mask>);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
658,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7478,7482,IdentifierMutator-Variable,token,command,3,0.0018790268,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(<mask>);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
659,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,227,7478,7482,IdentifierMutator-Variable,token,true,4,0.0018608655,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(<mask>);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
660,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7518,7523,MethodCallMutator,equals,is,0,0.32000133,"""--"".<mask>(token)","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".<mask>(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
661,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7518,7523,MethodCallMutator,equals,test,1,0.24649054,"""--"".<mask>(token)","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".<mask>(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
662,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7518,7523,MethodCallMutator,equals,match,2,0.083262816,"""--"".<mask>(token)","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".<mask>(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
663,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7518,7523,MethodCallMutator,equals,has,4,0.060721036,"""--"".<mask>(token)","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".<mask>(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
664,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7513,7516,IdentifierMutator-Literal,"""--""",token,0,0.14879978,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (<mask>.equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
665,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7513,7516,IdentifierMutator-Literal,"""--""",default,1,0.052378148,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (<mask>.equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
666,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7513,7516,IdentifierMutator-Literal,"""--""",current,2,0.046202704,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (<mask>.equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
667,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7513,7516,IdentifierMutator-Literal,"""--""",option,3,0.045526713,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (<mask>.equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
668,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7513,7516,IdentifierMutator-Literal,"""--""",prefix,4,0.0423922,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (<mask>.equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
669,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7525,7529,IdentifierMutator-Variable,token,word,2,4.5585373E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(<mask>))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
670,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7525,7529,IdentifierMutator-Variable,token,Token,3,2.958127E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(<mask>))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
671,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,229,7525,7529,IdentifierMutator-Variable,token,tag,4,2.943314E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(<mask>))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
672,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7566,7566,AssignmentMutator,skipParsing=true,|,0,0.75578594,skipParsing <mask>= true,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing<mask>= true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
673,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7566,7566,AssignmentMutator,skipParsing=true,||,1,0.045854528,skipParsing <mask>= true,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing<mask>= true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
674,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7566,7566,AssignmentMutator,skipParsing=true,&,2,0.043465775,skipParsing <mask>= true,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing<mask>= true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
675,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7566,7566,AssignmentMutator,skipParsing=true,^,3,0.042794265,skipParsing <mask>= true,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing<mask>= true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
676,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7566,7566,AssignmentMutator,skipParsing=true,*,4,0.037362576,skipParsing <mask>= true,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing<mask>= true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
677,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,IdentifierMutator-Variable,skipParsing,parsed,0,0.17058077,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
678,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,IdentifierMutator-Variable,skipParsing,parsing,1,0.07655964,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
679,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,IdentifierMutator-Variable,skipParsing,parse,2,0.036578957,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
680,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,IdentifierMutator-Variable,skipParsing,done,3,0.03499895,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
681,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,IdentifierMutator-Variable,skipParsing,option,4,0.022485495,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
682,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,FieldReferenceMutator,skipParsing,parsed,0,0.17058077,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
683,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,FieldReferenceMutator,skipParsing,parsing,1,0.07655964,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
684,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,FieldReferenceMutator,skipParsing,parse,2,0.036578957,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
685,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,FieldReferenceMutator,skipParsing,done,3,0.03499895,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
686,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7555,7565,FieldReferenceMutator,skipParsing,option,4,0.022485495,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {<mask> = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
687,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7569,7572,IdentifierMutator-Literal,true,false,1,0.15708926,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing =<mask>;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
688,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7569,7572,IdentifierMutator-Literal,true,TRUE,3,2.7175675E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing =<mask>;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
689,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,231,7569,7572,IdentifierMutator-Literal,true,1,4,1.6628498E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing =<mask>;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
690,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7653,7656,BinaryOperatorMutator,&&,.,0,0.419016,((currentOption != null) && currentOption.acceptsArg()) <mask> isArgument(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg()<mask>isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
691,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7653,7656,BinaryOperatorMutator,&&,&,3,0.045730785,((currentOption != null) && currentOption.acceptsArg()) <mask> isArgument(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg()<mask>isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
692,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7653,7656,BinaryOperatorMutator,&&,#,4,0.039700985,((currentOption != null) && currentOption.acceptsArg()) <mask> isArgument(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg()<mask>isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
693,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7623,7626,BinaryOperatorMutator,&&,&,2,0.0019383574,(currentOption != null) <mask> currentOption.acceptsArg(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null<mask>currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
694,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7623,7626,BinaryOperatorMutator,&&,.,3,6.5160444E-4,(currentOption != null) <mask> currentOption.acceptsArg(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null<mask>currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
695,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7623,7626,BinaryOperatorMutator,&&,AND,4,5.8360223E-4,(currentOption != null) <mask> currentOption.acceptsArg(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null<mask>currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
696,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7615,7618,BinaryOperatorMutator,!=,==,1,0.06822471,currentOption <mask> null,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption<mask>null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
697,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7615,7618,BinaryOperatorMutator,!=,=,2,0.011745727,currentOption <mask> null,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption<mask>null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
698,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7615,7618,BinaryOperatorMutator,!=,==,3,5.822877E-4,currentOption <mask> null,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption<mask>null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
699,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7615,7618,BinaryOperatorMutator,!=,>,4,3.2865605E-4,currentOption <mask> null,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption<mask>null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
700,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,IdentifierMutator-Variable,currentOption,option,0,0.39247248,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
701,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,IdentifierMutator-Variable,currentOption,opt,1,0.094858855,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
702,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,IdentifierMutator-Variable,currentOption,cmd,2,0.0936022,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
703,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,IdentifierMutator-Variable,currentOption,command,3,0.08399245,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
704,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,IdentifierMutator-Variable,currentOption,argument,4,0.035660654,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
705,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,FieldReferenceMutator,currentOption,option,0,0.39247248,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
706,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,FieldReferenceMutator,currentOption,opt,1,0.094858855,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
707,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,FieldReferenceMutator,currentOption,cmd,2,0.0936022,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
708,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,FieldReferenceMutator,currentOption,command,3,0.08399245,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
709,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7602,7614,FieldReferenceMutator,currentOption,argument,4,0.035660654,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (<mask> != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
710,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7619,7622,IdentifierMutator-Literal,null,nil,2,1.2281329E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption !=<mask> && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
711,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7619,7622,IdentifierMutator-Literal,null,this,3,5.856756E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption !=<mask> && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
712,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7619,7622,IdentifierMutator-Literal,null,NULL,4,4.8787315E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption !=<mask> && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
713,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7641,7650,MethodCallMutator,acceptsArg,optional,0,0.17410389,currentOption.<mask>(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.<mask>() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
714,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7641,7650,MethodCallMutator,acceptsArg,flag,1,0.07071845,currentOption.<mask>(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.<mask>() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
715,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7641,7650,MethodCallMutator,acceptsArg,value,2,0.059019223,currentOption.<mask>(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.<mask>() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
716,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7641,7650,MethodCallMutator,acceptsArg,available,3,0.057125323,currentOption.<mask>(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.<mask>() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
717,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7641,7650,MethodCallMutator,acceptsArg,has,4,0.056252338,currentOption.<mask>(),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.<mask>() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
718,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,IdentifierMutator-Variable,currentOption,option,0,0.55166864,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
719,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,IdentifierMutator-Variable,currentOption,this,1,0.07197988,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
720,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,IdentifierMutator-Variable,currentOption,command,2,0.061400887,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
721,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,IdentifierMutator-Variable,currentOption,cmd,3,0.05586244,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
722,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,IdentifierMutator-Variable,currentOption,opt,4,0.051832404,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
723,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,FieldReferenceMutator,currentOption,option,0,0.55166864,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
724,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,FieldReferenceMutator,currentOption,this,1,0.07197988,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
725,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,FieldReferenceMutator,currentOption,command,2,0.061400887,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
726,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,FieldReferenceMutator,currentOption,cmd,3,0.05586244,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
727,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7627,7639,FieldReferenceMutator,currentOption,opt,4,0.051832404,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null &&<mask>.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
728,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7657,7666,MethodCallMutator,isArgument,accepts,0,0.722237,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() &&<mask>(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
729,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7657,7666,MethodCallMutator,isArgument,accept,1,0.06794297,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() &&<mask>(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
730,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7657,7666,MethodCallMutator,isArgument,matches,2,0.028824365,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() &&<mask>(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
731,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7657,7666,MethodCallMutator,isArgument,contains,3,0.012906664,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() &&<mask>(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
732,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7657,7666,MethodCallMutator,isArgument,supports,4,0.012550339,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() &&<mask>(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
733,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7668,7672,IdentifierMutator-Variable,token,option,1,7.840368E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(<mask>))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
734,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7668,7672,IdentifierMutator-Variable,token,word,2,6.363836E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(<mask>))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
735,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7668,7672,IdentifierMutator-Variable,token,true,3,4.9472967E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(<mask>))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
736,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,233,7668,7672,IdentifierMutator-Variable,token,command,4,3.1651347E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(<mask>))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
737,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7712,7732,MethodCallMutator,addValueForProcessing,parse,0,0.18169814,currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token)),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
738,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7712,7732,MethodCallMutator,addValueForProcessing,accept,1,0.08691374,currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token)),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
739,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7712,7732,MethodCallMutator,addValueForProcessing,option,2,0.07925429,currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token)),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
740,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7712,7732,MethodCallMutator,addValueForProcessing,append,3,0.073269024,currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token)),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
741,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7712,7732,MethodCallMutator,addValueForProcessing,add,4,0.06743528,currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token)),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.<mask>(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
742,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,IdentifierMutator-Variable,currentOption,cmd,0,0.70909464,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
743,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,IdentifierMutator-Variable,currentOption,command,1,0.056786213,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
744,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,IdentifierMutator-Variable,currentOption,option,2,0.029882398,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
745,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,IdentifierMutator-Variable,currentOption,opt,3,0.014045283,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
746,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,IdentifierMutator-Variable,currentOption,param,4,0.010246372,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
747,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,FieldReferenceMutator,currentOption,cmd,0,0.70909464,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
748,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,FieldReferenceMutator,currentOption,command,1,0.056786213,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
749,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,FieldReferenceMutator,currentOption,option,2,0.029882398,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
750,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,FieldReferenceMutator,currentOption,opt,3,0.014045283,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
751,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7698,7710,FieldReferenceMutator,currentOption,param,4,0.010246372,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {<mask>.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
752,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7739,7767,MethodCallMutator,stripLeadingAndTrailingQuotes,escape,0,0.2894978,Util.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.<mask>(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
753,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7739,7767,MethodCallMutator,stripLeadingAndTrailingQuotes,parse,1,0.19984312,Util.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.<mask>(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
754,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7739,7767,MethodCallMutator,stripLeadingAndTrailingQuotes,quote,2,0.16599302,Util.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.<mask>(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
755,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7739,7767,MethodCallMutator,stripLeadingAndTrailingQuotes,format,3,0.06071908,Util.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.<mask>(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
756,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7739,7767,MethodCallMutator,stripLeadingAndTrailingQuotes,arg,4,0.018926803,Util.<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.<mask>(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
757,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7769,7773,IdentifierMutator-Variable,token,value,2,2.0433488E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(<mask>));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
758,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7769,7773,IdentifierMutator-Variable,token,string,3,1.8006437E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(<mask>));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
759,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,235,7769,7773,IdentifierMutator-Variable,token,word,4,1.5501927E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(<mask>));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
760,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7811,7820,MethodCallMutator,startsWith,is,0,0.54640025,"token.<mask>(""--"")","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.<mask>(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
761,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7811,7820,MethodCallMutator,startsWith,has,1,0.13845576,"token.<mask>(""--"")","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.<mask>(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
762,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7811,7820,MethodCallMutator,startsWith,includes,2,0.099703506,"token.<mask>(""--"")","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.<mask>(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
763,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7811,7820,MethodCallMutator,startsWith,match,3,0.051587954,"token.<mask>(""--"")","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.<mask>(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
764,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7811,7820,MethodCallMutator,startsWith,split,4,0.017315036,"token.<mask>(""--"")","void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.<mask>(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
765,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7805,7809,IdentifierMutator-Variable,token,word,2,1.593532E-4,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (<mask>.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
766,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7805,7809,IdentifierMutator-Variable,token,tag,3,5.6845583E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (<mask>.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
767,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7805,7809,IdentifierMutator-Variable,token,string,4,5.101654E-5,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (<mask>.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
768,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7822,7825,IdentifierMutator-Literal,"""--""",--,0,0.4179566,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(<mask>))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
769,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7822,7825,IdentifierMutator-Literal,"""--""","-""",1,0.06118512,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(<mask>))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
770,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7822,7825,IdentifierMutator-Literal,"""--""",+,2,0.051608656,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(<mask>))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
771,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7822,7825,IdentifierMutator-Literal,"""--""",-,3,0.044555638,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(<mask>))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
772,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,237,7822,7825,IdentifierMutator-Literal,"""--""",-+,4,0.03730123,<mask>,"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(<mask>))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
773,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7851,7866,MethodCallMutator,handleLongOption,help,0,0.13056578,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {<mask>(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
774,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7851,7866,MethodCallMutator,handleLongOption,parse,1,0.12767972,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {<mask>(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
775,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7851,7866,MethodCallMutator,handleLongOption,usage,2,0.08190038,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {<mask>(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
776,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7851,7866,MethodCallMutator,handleLongOption,print,3,0.050910946,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {<mask>(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
777,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7851,7866,MethodCallMutator,handleLongOption,option,4,0.035528556,<mask>(token),"void handleToken(String token) throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {<mask>(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
778,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7868,7872,IdentifierMutator-Variable,token,word,1,6.607548E-5,<mask>," throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(<mask>);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
779,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7868,7872,IdentifierMutator-Variable,token,option,3,3.8551047E-5,<mask>," throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(<mask>);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
780,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,239,7868,7872,IdentifierMutator-Variable,token,tag,4,2.6342383E-5,<mask>," throws ParseException
    {
        currentToken = token;

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(<mask>);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
781,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7924,7927,BinaryOperatorMutator,&&,||,2,0.041791126,"token.startsWith(""-"") <mask> (!""-"".equals(token))"," if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"")<mask>!""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
782,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7924,7927,BinaryOperatorMutator,&&,&,3,0.017927421,"token.startsWith(""-"") <mask> (!""-"".equals(token))"," if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"")<mask>!""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
783,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7924,7927,BinaryOperatorMutator,&&,||,4,0.01311463,"token.startsWith(""-"") <mask> (!""-"".equals(token))"," if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"")<mask>!""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
784,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7909,7918,MethodCallMutator,startsWith,has,0,0.49709946,"token.<mask>(""-"")","       if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.<mask>(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
785,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7909,7918,MethodCallMutator,startsWith,is,1,0.33431593,"token.<mask>(""-"")","       if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.<mask>(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
786,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7909,7918,MethodCallMutator,startsWith,includes,2,0.032973714,"token.<mask>(""-"")","       if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.<mask>(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
787,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7909,7918,MethodCallMutator,startsWith,needs,3,0.016644895,"token.<mask>(""-"")","       if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.<mask>(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
788,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7909,7918,MethodCallMutator,startsWith,not,4,0.011023449,"token.<mask>(""-"")","       if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.<mask>(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
789,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7903,7907,IdentifierMutator-Variable,token,word,1,1.6800707E-4,<mask>,"

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (<mask>.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
790,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7903,7907,IdentifierMutator-Variable,token,string,3,4.8334197E-5,<mask>,"

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (<mask>.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
791,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7903,7907,IdentifierMutator-Variable,token,Token,4,4.0108534E-5,<mask>,"

        if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (<mask>.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
792,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7920,7922,IdentifierMutator-Literal,"""-""","-""",0,0.27183142,<mask>,"   if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(<mask>) && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
793,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7920,7922,IdentifierMutator-Literal,"""-""",--,1,0.2091671,<mask>,"   if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(<mask>) && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
794,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7920,7922,IdentifierMutator-Literal,"""-""",-,2,0.120598,<mask>,"   if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(<mask>) && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
795,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7920,7922,IdentifierMutator-Literal,"""-""",/-,3,0.07095814,<mask>,"   if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(<mask>) && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
796,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7920,7922,IdentifierMutator-Literal,"""-""",-+,4,0.06275605,<mask>,"   if (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(<mask>) && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
797,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7928,7928,UnaryOperatorMutator,!,"""",0,0.64621824,"<mask>""-"".equals(token)"," (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") &&<mask>""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
798,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7928,7928,UnaryOperatorMutator,!,f,2,0.05152467,"<mask>""-"".equals(token)"," (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") &&<mask>""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
799,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7928,7928,UnaryOperatorMutator,!,u,3,0.034419622,"<mask>""-"".equals(token)"," (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") &&<mask>""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
800,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7928,7928,UnaryOperatorMutator,!,//,4,0.022220904,"<mask>""-"".equals(token)"," (skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") &&<mask>""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
801,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7933,7938,MethodCallMutator,equals,test,0,0.5690252,"""-"".<mask>(token)","ing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".<mask>(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
802,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7933,7938,MethodCallMutator,equals,is,1,0.17527671,"""-"".<mask>(token)","ing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".<mask>(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
803,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7933,7938,MethodCallMutator,equals,match,2,0.039098553,"""-"".<mask>(token)","ing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".<mask>(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
804,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7933,7938,MethodCallMutator,equals,equ,3,0.02062598,"""-"".<mask>(token)","ing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".<mask>(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
805,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7933,7938,MethodCallMutator,equals,als,4,0.017711015,"""-"".<mask>(token)","ing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".<mask>(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
806,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7929,7931,IdentifierMutator-Literal,"""-""",--,0,0.34851858,<mask>,"skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !<mask>.equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
807,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7929,7931,IdentifierMutator-Literal,"""-""",-,1,0.06588146,<mask>,"skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !<mask>.equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
808,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7929,7931,IdentifierMutator-Literal,"""-""",short,2,0.052562717,<mask>,"skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !<mask>.equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
809,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7929,7931,IdentifierMutator-Literal,"""-""","-""",3,0.037311666,<mask>,"skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !<mask>.equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
810,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7929,7931,IdentifierMutator-Literal,"""-""",token,4,0.032131862,<mask>,"skipParsing)
        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !<mask>.equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
811,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7940,7944,IdentifierMutator-Variable,token,word,1,2.0643204E-4,<mask>,"        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(<mask>))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
812,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7940,7944,IdentifierMutator-Variable,token,key,3,7.864982E-5,<mask>,"        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(<mask>))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
813,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,241,7940,7944,IdentifierMutator-Variable,token,string,4,6.297995E-5,<mask>,"        {
            cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(<mask>))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
814,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7970,7993,MethodCallMutator,handleShortAndLongOption,parse,0,0.06427107,<mask>(token),"          cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {<mask>(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
815,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7970,7993,MethodCallMutator,handleShortAndLongOption,help,1,0.0612474,<mask>(token),"          cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {<mask>(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
816,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7970,7993,MethodCallMutator,handleShortAndLongOption,print,2,0.044422235,<mask>(token),"          cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {<mask>(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
817,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7970,7993,MethodCallMutator,handleShortAndLongOption,option,3,0.040979605,<mask>(token),"          cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {<mask>(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
818,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7970,7993,MethodCallMutator,handleShortAndLongOption,consume,4,0.035934787,<mask>(token),"          cmd.addArg(token);
        }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {<mask>(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
819,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7995,7999,IdentifierMutator-Variable,token,rule,1,5.2245206E-5,<mask>,"       }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(<mask>);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
820,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7995,7999,IdentifierMutator-Variable,token,true,3,3.01503E-5,<mask>,"       }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(<mask>);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
821,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,243,7995,7999,IdentifierMutator-Variable,token,option,4,3.0079822E-5,<mask>,"       }
        else if (""--"".equals(token))
        {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(<mask>);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
822,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8048,8065,MethodCallMutator,handleUnknownToken,parse,0,0.08325584,<mask>(token),"     {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {<mask>(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
823,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8048,8065,MethodCallMutator,handleUnknownToken,print,1,0.050090108,<mask>(token),"     {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {<mask>(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
824,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8048,8065,MethodCallMutator,handleUnknownToken,handle,2,0.047663856,<mask>(token),"     {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {<mask>(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
825,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8048,8065,MethodCallMutator,handleUnknownToken,accept,3,0.039823577,<mask>(token),"     {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {<mask>(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
826,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8048,8065,MethodCallMutator,handleUnknownToken,unexpected,4,0.039772414,<mask>(token),"     {
            skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {<mask>(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
827,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8067,8071,IdentifierMutator-Variable,token,word,1,1.2590521E-4,<mask>,"  skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(<mask>);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
828,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8067,8071,IdentifierMutator-Variable,token,option,2,1.1574533E-4,<mask>,"  skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(<mask>);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
829,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,247,8067,8071,IdentifierMutator-Variable,token,true,3,1.12991E-4,<mask>,"  skipParsing = true;
        }
        else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(<mask>);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
830,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8119,8122,BinaryOperatorMutator,&&,&,2,0.010490277,(currentOption != null) <mask> (!currentOption.acceptsArg())," else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null<mask>!currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
831,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8119,8122,BinaryOperatorMutator,&&,||,3,8.1036636E-4,(currentOption != null) <mask> (!currentOption.acceptsArg())," else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null<mask>!currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
832,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8119,8122,BinaryOperatorMutator,&&,?,4,5.11393E-4,(currentOption != null) <mask> (!currentOption.acceptsArg())," else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null<mask>!currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
833,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8111,8114,BinaryOperatorMutator,!=,==,1,0.005155806,currentOption <mask> null,"   else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption<mask>null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
834,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8111,8114,BinaryOperatorMutator,!=,=,2,6.3253177E-4,currentOption <mask> null,"   else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption<mask>null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
835,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8111,8114,BinaryOperatorMutator,!=,==,3,4.5142797E-4,currentOption <mask> null,"   else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption<mask>null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
836,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8111,8114,BinaryOperatorMutator,!=,!,4,2.648356E-5,currentOption <mask> null,"   else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption<mask>null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
837,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,IdentifierMutator-Variable,currentOption,option,0,0.79308414,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
838,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,IdentifierMutator-Variable,currentOption,current,1,0.05502822,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
839,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,IdentifierMutator-Variable,currentOption,Option,2,0.023185682,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
840,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,IdentifierMutator-Variable,currentOption,argument,3,0.013967236,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
841,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,IdentifierMutator-Variable,currentOption,default,4,0.012982319,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
842,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,FieldReferenceMutator,currentOption,option,0,0.79308414,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
843,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,FieldReferenceMutator,currentOption,current,1,0.05502822,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
844,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,FieldReferenceMutator,currentOption,Option,2,0.023185682,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
845,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,FieldReferenceMutator,currentOption,argument,3,0.013967236,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
846,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8098,8110,FieldReferenceMutator,currentOption,default,4,0.012982319,<mask>,"     else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (<mask> != null && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
847,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8115,8118,IdentifierMutator-Literal,null,this,2,7.538821E-5,<mask>,"  else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption !=<mask> && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
848,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8115,8118,IdentifierMutator-Literal,null,nil,3,4.848032E-5,<mask>,"  else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption !=<mask> && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
849,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8115,8118,IdentifierMutator-Literal,null,0,4,2.370911E-5,<mask>,"  else if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption !=<mask> && !currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
850,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8123,8123,UnaryOperatorMutator,!,(!,1,0.048731472,<mask>currentOption.acceptsArg()," if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null &&<mask>currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
851,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8123,8123,UnaryOperatorMutator,!,(,2,0.018038092,<mask>currentOption.acceptsArg()," if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null &&<mask>currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
852,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8123,8123,UnaryOperatorMutator,!,!!,3,3.324868E-4,<mask>currentOption.acceptsArg()," if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null &&<mask>currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
853,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8123,8123,UnaryOperatorMutator,!,(,4,1.76559E-4,<mask>currentOption.acceptsArg()," if (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null &&<mask>currentOption.acceptsArg())
        {
            currentOption = null;
        }
    }"
854,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8138,8147,MethodCallMutator,acceptsArg,empty,0,0.1703224,currentOption.<mask>()," != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.<mask>())
        {
            currentOption = null;
        }
    }"
855,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8138,8147,MethodCallMutator,acceptsArg,help,1,0.096267134,currentOption.<mask>()," != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.<mask>())
        {
            currentOption = null;
        }
    }"
856,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8138,8147,MethodCallMutator,acceptsArg,selected,2,0.09584629,currentOption.<mask>()," != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.<mask>())
        {
            currentOption = null;
        }
    }"
857,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8138,8147,MethodCallMutator,acceptsArg,available,3,0.05505365,currentOption.<mask>()," != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.<mask>())
        {
            currentOption = null;
        }
    }"
858,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8138,8147,MethodCallMutator,acceptsArg,is,4,0.037237275,currentOption.<mask>()," != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.<mask>())
        {
            currentOption = null;
        }
    }"
859,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,IdentifierMutator-Variable,currentOption,token,0,0.29434752,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
860,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,IdentifierMutator-Variable,currentOption,option,1,0.22380097,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
861,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,IdentifierMutator-Variable,currentOption,option,2,0.18277116,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
862,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,IdentifierMutator-Variable,currentOption,token,3,0.119959965,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
863,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,IdentifierMutator-Variable,currentOption,this,4,0.032917466,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
864,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,FieldReferenceMutator,currentOption,token,0,0.29434752,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
865,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,FieldReferenceMutator,currentOption,option,1,0.22380097,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
866,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,FieldReferenceMutator,currentOption,option,2,0.18277116,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
867,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,FieldReferenceMutator,currentOption,token,3,0.119959965,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
868,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,250,8124,8136,FieldReferenceMutator,currentOption,this,4,0.032917466,<mask>," (currentOption != null && currentOption.acceptsArg() && isArgument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !<mask>.acceptsArg())
        {
            currentOption = null;
        }
    }"
869,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8187,8187,AssignmentMutator,currentOption=null,|,0,0.30616778,currentOption <mask>= null,"            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption<mask>= null;
        }
    }"
870,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8187,8187,AssignmentMutator,currentOption=null,||,1,0.23681521,currentOption <mask>= null,"            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption<mask>= null;
        }
    }"
871,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8187,8187,AssignmentMutator,currentOption=null,!,2,0.14682107,currentOption <mask>= null,"            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption<mask>= null;
        }
    }"
872,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8187,8187,AssignmentMutator,currentOption=null,&,3,0.105598874,currentOption <mask>= null,"            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption<mask>= null;
        }
    }"
873,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8187,8187,AssignmentMutator,currentOption=null,*,4,0.08072014,currentOption <mask>= null,"            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption<mask>= null;
        }
    }"
874,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,IdentifierMutator-Variable,currentOption,option,0,0.39281094,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
875,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,IdentifierMutator-Variable,currentOption,token,1,0.11033967,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
876,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,IdentifierMutator-Variable,currentOption,options,2,0.037701055,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
877,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,IdentifierMutator-Variable,currentOption,argument,3,0.033503853,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
878,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,IdentifierMutator-Variable,currentOption,current,4,0.024185302,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
879,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,FieldReferenceMutator,currentOption,option,0,0.39281094,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
880,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,FieldReferenceMutator,currentOption,token,1,0.11033967,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
881,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,FieldReferenceMutator,currentOption,options,2,0.037701055,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
882,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,FieldReferenceMutator,currentOption,argument,3,0.033503853,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
883,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8174,8186,FieldReferenceMutator,currentOption,current,4,0.024185302,<mask>,"ument(token))
        {
            currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {<mask> = null;
        }
    }"
884,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8190,8193,IdentifierMutator-Literal,null,token,1,0.09905022,<mask>,"           currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption =<mask>;
        }
    }"
885,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8190,8193,IdentifierMutator-Literal,null,option,2,0.091990635,<mask>,"           currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption =<mask>;
        }
    }"
886,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8190,8193,IdentifierMutator-Literal,null,undefined,3,0.024998123,<mask>,"           currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption =<mask>;
        }
    }"
887,DefaultParser.java,handleToken,void handleToken(String token) throws ParseException,221,252,8190,8193,IdentifierMutator-Literal,null,false,4,0.010620515,<mask>,"           currentOption.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(token));
        }
        else if (token.startsWith(""--""))
        {
            handleLongOption(token);
        }
        else if (token.startsWith(""-"") && !""-"".equals(token))
        {
            handleShortAndLongOption(token);
        }
        else
        {
            handleUnknownToken(token);
        }

        if (currentOption != null && !currentOption.acceptsArg())
        {
            currentOption =<mask>;
        }
    }"
888,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8392,8395,BinaryOperatorMutator,||,&&,0,0.64526975,(!isOption(token)) <mask> isNegativeNumber(token),"boolean isArgument(String token)
    {
        return !isOption(token)<mask>isNegativeNumber(token);
    }"
889,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8392,8395,BinaryOperatorMutator,||,&&,2,0.09403168,(!isOption(token)) <mask> isNegativeNumber(token),"boolean isArgument(String token)
    {
        return !isOption(token)<mask>isNegativeNumber(token);
    }"
890,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8392,8395,BinaryOperatorMutator,||,!,3,0.034624,(!isOption(token)) <mask> isNegativeNumber(token),"boolean isArgument(String token)
    {
        return !isOption(token)<mask>isNegativeNumber(token);
    }"
891,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8392,8395,BinaryOperatorMutator,||,!,4,0.031345755,(!isOption(token)) <mask> isNegativeNumber(token),"boolean isArgument(String token)
    {
        return !isOption(token)<mask>isNegativeNumber(token);
    }"
892,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8376,8376,UnaryOperatorMutator,!,_,1,0.16804446,<mask>isOption(token),"boolean isArgument(String token)
    {
        return<mask>isOption(token) || isNegativeNumber(token);
    }"
893,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8376,8376,UnaryOperatorMutator,!,//,2,0.020721423,<mask>isOption(token),"boolean isArgument(String token)
    {
        return<mask>isOption(token) || isNegativeNumber(token);
    }"
894,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8376,8376,UnaryOperatorMutator,!,(,3,0.010729086,<mask>isOption(token),"boolean isArgument(String token)
    {
        return<mask>isOption(token) || isNegativeNumber(token);
    }"
895,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8376,8376,UnaryOperatorMutator,!,@,4,0.0054116286,<mask>isOption(token),"boolean isArgument(String token)
    {
        return<mask>isOption(token) || isNegativeNumber(token);
    }"
896,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8377,8384,MethodCallMutator,isOption,empty,0,0.16995664,<mask>(token),"boolean isArgument(String token)
    {
        return !<mask>(token) || isNegativeNumber(token);
    }"
897,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8377,8384,MethodCallMutator,isOption,digit,1,0.15735622,<mask>(token),"boolean isArgument(String token)
    {
        return !<mask>(token) || isNegativeNumber(token);
    }"
898,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8377,8384,MethodCallMutator,isOption,Number,2,0.13206089,<mask>(token),"boolean isArgument(String token)
    {
        return !<mask>(token) || isNegativeNumber(token);
    }"
899,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8377,8384,MethodCallMutator,isOption,Integer,3,0.10109231,<mask>(token),"boolean isArgument(String token)
    {
        return !<mask>(token) || isNegativeNumber(token);
    }"
900,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8377,8384,MethodCallMutator,isOption,negative,4,0.08808048,<mask>(token),"boolean isArgument(String token)
    {
        return !<mask>(token) || isNegativeNumber(token);
    }"
901,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8386,8390,IdentifierMutator-Variable,token,Token,2,8.2528946E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(<mask>) || isNegativeNumber(token);
    }"
902,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8386,8390,IdentifierMutator-Variable,token,string,3,1.5217451E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(<mask>) || isNegativeNumber(token);
    }"
903,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8386,8390,IdentifierMutator-Variable,token,character,4,1.2395816E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(<mask>) || isNegativeNumber(token);
    }"
904,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8396,8411,MethodCallMutator,isNegativeNumber,argument,0,0.48433888,<mask>(token),"boolean isArgument(String token)
    {
        return !isOption(token) ||<mask>(token);
    }"
905,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8396,8411,MethodCallMutator,isNegativeNumber,option,1,0.18714198,<mask>(token),"boolean isArgument(String token)
    {
        return !isOption(token) ||<mask>(token);
    }"
906,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8396,8411,MethodCallMutator,isNegativeNumber,is,2,0.041080635,<mask>(token),"boolean isArgument(String token)
    {
        return !isOption(token) ||<mask>(token);
    }"
907,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8396,8411,MethodCallMutator,isNegativeNumber,arg,3,0.016619604,<mask>(token),"boolean isArgument(String token)
    {
        return !isOption(token) ||<mask>(token);
    }"
908,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8396,8411,MethodCallMutator,isNegativeNumber,argument,4,0.013554555,<mask>(token),"boolean isArgument(String token)
    {
        return !isOption(token) ||<mask>(token);
    }"
909,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8413,8417,IdentifierMutator-Variable,token,number,2,5.169284E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(token) || isNegativeNumber(<mask>);
    }"
910,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8413,8417,IdentifierMutator-Variable,token,Token,3,4.7564758E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(token) || isNegativeNumber(<mask>);
    }"
911,DefaultParser.java,isArgument,boolean isArgument(String token),261,263,8413,8417,IdentifierMutator-Variable,token,argument,4,2.9989764E-5,<mask>,"boolean isArgument(String token)
    {
        return !isOption(token) || isNegativeNumber(<mask>);
    }"
912,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8617,8627,MethodCallMutator,parseDouble,parse,0,0.636601,Double.<mask>(token),"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.<mask>(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
913,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8617,8627,MethodCallMutator,parseDouble,digit,1,0.087756515,Double.<mask>(token),"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.<mask>(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
914,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8617,8627,MethodCallMutator,parseDouble,format,2,0.074081436,Double.<mask>(token),"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.<mask>(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
915,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8617,8627,MethodCallMutator,parseDouble,double,3,0.052884165,Double.<mask>(token),"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.<mask>(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
916,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8617,8627,MethodCallMutator,parseDouble,round,4,0.035415743,Double.<mask>(token),"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.<mask>(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
917,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8629,8633,IdentifierMutator-Variable,token,value,2,1.9155495E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(<mask>);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
918,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8629,8633,IdentifierMutator-Variable,token,string,3,1.3571186E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(<mask>);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
919,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,275,8629,8633,IdentifierMutator-Variable,token,Token,4,1.3037823E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(<mask>);
            return true;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
920,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,276,8656,8659,IdentifierMutator-Literal,true,false,1,0.07247794,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return<mask>;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
921,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,276,8656,8659,IdentifierMutator-Literal,true,1,2,0.0023989095,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return<mask>;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
922,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,276,8656,8659,IdentifierMutator-Literal,true,0,3,0.0023323584,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return<mask>;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
923,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,276,8656,8659,IdentifierMutator-Literal,true,token,4,6.67402E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return<mask>;
        }
        catch (NumberFormatException e)
        {
            return false;
        }
    }"
924,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,280,8741,8745,IdentifierMutator-Literal,false,true,1,0.06439466,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return<mask>;
        }
    }"
925,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,280,8741,8745,IdentifierMutator-Literal,false,False,2,4.7449998E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return<mask>;
        }
    }"
926,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,280,8741,8745,IdentifierMutator-Literal,false,null,3,3.857735E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return<mask>;
        }
    }"
927,DefaultParser.java,isNegativeNumber,boolean isNegativeNumber(String token),271,280,8741,8745,IdentifierMutator-Literal,false,FALSE,4,1.6375277E-4,<mask>,"boolean isNegativeNumber(String token)
    {
        try
        {
            Double.parseDouble(token);
            return true;
        }
        catch (NumberFormatException e)
        {
            return<mask>;
        }
    }"
928,DefaultParser.java,isOption,boolean isOption(String token),289,291,8939,8942,BinaryOperatorMutator,||,|,0,0.52709043,isLongOption(token) <mask> isShortOption(token),"boolean isOption(String token)
    {
        return isLongOption(token)<mask>isShortOption(token);
    }"
929,DefaultParser.java,isOption,boolean isOption(String token),289,291,8939,8942,BinaryOperatorMutator,||,&&,1,0.22288635,isLongOption(token) <mask> isShortOption(token),"boolean isOption(String token)
    {
        return isLongOption(token)<mask>isShortOption(token);
    }"
930,DefaultParser.java,isOption,boolean isOption(String token),289,291,8939,8942,BinaryOperatorMutator,||,|,4,0.0077665616,isLongOption(token) <mask> isShortOption(token),"boolean isOption(String token)
    {
        return isLongOption(token)<mask>isShortOption(token);
    }"
931,DefaultParser.java,isOption,boolean isOption(String token),289,291,8920,8931,MethodCallMutator,isLongOption,option,0,0.71569675,<mask>(token),"boolean isOption(String token)
    {
        return<mask>(token) || isShortOption(token);
    }"
932,DefaultParser.java,isOption,boolean isOption(String token),289,291,8920,8931,MethodCallMutator,isLongOption,Option,1,0.14459133,<mask>(token),"boolean isOption(String token)
    {
        return<mask>(token) || isShortOption(token);
    }"
933,DefaultParser.java,isOption,boolean isOption(String token),289,291,8920,8931,MethodCallMutator,isLongOption,short,2,0.023982614,<mask>(token),"boolean isOption(String token)
    {
        return<mask>(token) || isShortOption(token);
    }"
934,DefaultParser.java,isOption,boolean isOption(String token),289,291,8920,8931,MethodCallMutator,isLongOption,is,3,0.017311629,<mask>(token),"boolean isOption(String token)
    {
        return<mask>(token) || isShortOption(token);
    }"
935,DefaultParser.java,isOption,boolean isOption(String token),289,291,8920,8931,MethodCallMutator,isLongOption,options,4,0.011208525,<mask>(token),"boolean isOption(String token)
    {
        return<mask>(token) || isShortOption(token);
    }"
936,DefaultParser.java,isOption,boolean isOption(String token),289,291,8933,8937,IdentifierMutator-Variable,token,Token,2,1.600664E-5,<mask>,"boolean isOption(String token)
    {
        return isLongOption(<mask>) || isShortOption(token);
    }"
937,DefaultParser.java,isOption,boolean isOption(String token),289,291,8933,8937,IdentifierMutator-Variable,token,key,3,3.5950957E-6,<mask>,"boolean isOption(String token)
    {
        return isLongOption(<mask>) || isShortOption(token);
    }"
938,DefaultParser.java,isOption,boolean isOption(String token),289,291,8933,8937,IdentifierMutator-Variable,token,prefix,4,3.42775E-6,<mask>,"boolean isOption(String token)
    {
        return isLongOption(<mask>) || isShortOption(token);
    }"
939,DefaultParser.java,isOption,boolean isOption(String token),289,291,8943,8955,MethodCallMutator,isShortOption,option,0,0.61162627,<mask>(token),"boolean isOption(String token)
    {
        return isLongOption(token) ||<mask>(token);
    }"
940,DefaultParser.java,isOption,boolean isOption(String token),289,291,8943,8955,MethodCallMutator,isShortOption,is,1,0.10874688,<mask>(token),"boolean isOption(String token)
    {
        return isLongOption(token) ||<mask>(token);
    }"
941,DefaultParser.java,isOption,boolean isOption(String token),289,291,8943,8955,MethodCallMutator,isShortOption,options,2,0.02060142,<mask>(token),"boolean isOption(String token)
    {
        return isLongOption(token) ||<mask>(token);
    }"
942,DefaultParser.java,isOption,boolean isOption(String token),289,291,8943,8955,MethodCallMutator,isShortOption,Option,3,0.017277518,<mask>(token),"boolean isOption(String token)
    {
        return isLongOption(token) ||<mask>(token);
    }"
943,DefaultParser.java,isOption,boolean isOption(String token),289,291,8943,8955,MethodCallMutator,isShortOption,accepts,4,0.012023729,<mask>(token),"boolean isOption(String token)
    {
        return isLongOption(token) ||<mask>(token);
    }"
944,DefaultParser.java,isOption,boolean isOption(String token),289,291,8957,8961,IdentifierMutator-Variable,token,Token,2,1.639657E-5,<mask>,"boolean isOption(String token)
    {
        return isLongOption(token) || isShortOption(<mask>);
    }"
945,DefaultParser.java,isOption,boolean isOption(String token),289,291,8957,8961,IdentifierMutator-Variable,token,tag,3,6.1058586E-6,<mask>,"boolean isOption(String token)
    {
        return isLongOption(token) || isShortOption(<mask>);
    }"
946,DefaultParser.java,isOption,boolean isOption(String token),289,291,8957,8961,IdentifierMutator-Variable,token,callback,4,5.5762266E-6,<mask>,"boolean isOption(String token)
    {
        return isLongOption(token) || isShortOption(<mask>);
    }"
947,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9214,9217,BinaryOperatorMutator,||,&&,0,0.57811,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
948,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9214,9217,BinaryOperatorMutator,||,&&,1,0.2543947,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
949,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9214,9217,BinaryOperatorMutator,||,|,4,0.0054649333,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
950,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9192,9192,UnaryOperatorMutator,!,?,2,0.020306943,"<mask>token.startsWith(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
951,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9192,9192,UnaryOperatorMutator,!,...,3,0.008346663,"<mask>token.startsWith(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
952,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9192,9192,UnaryOperatorMutator,!,--,4,0.0072621154,"<mask>token.startsWith(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
953,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9199,9208,MethodCallMutator,startsWith,has,0,0.64397645,"token.<mask>(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
954,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9199,9208,MethodCallMutator,startsWith,length,1,0.123905405,"token.<mask>(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
955,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9199,9208,MethodCallMutator,startsWith,is,2,0.08222202,"token.<mask>(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
956,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9199,9208,MethodCallMutator,startsWith,split,3,0.06540973,"token.<mask>(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
957,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9199,9208,MethodCallMutator,startsWith,match,4,0.012829064,"token.<mask>(""-"")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
958,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9193,9197,IdentifierMutator-Variable,token,word,2,2.273456E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
959,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9193,9197,IdentifierMutator-Variable,token,string,3,1.3670996E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
960,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9193,9197,IdentifierMutator-Variable,token,tag,4,1.3206506E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
961,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9210,9212,IdentifierMutator-Literal,"""-""","-""",0,0.22781633,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
962,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9210,9212,IdentifierMutator-Literal,"""-""",/-,1,0.14669563,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
963,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9210,9212,IdentifierMutator-Literal,"""-""",S,2,0.14482544,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
964,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9210,9212,IdentifierMutator-Literal,"""-""","-'",3,0.11063793,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
965,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9210,9212,IdentifierMutator-Literal,"""-""",-,4,0.083296746,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
966,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9232,9235,BinaryOperatorMutator,==,>,1,0.22987801,token.length() <mask> 1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
967,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9232,9235,BinaryOperatorMutator,==,<,2,0.066014454,token.length() <mask> 1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
968,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9232,9235,BinaryOperatorMutator,==,<,3,0.044731304,token.length() <mask> 1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
969,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9232,9235,BinaryOperatorMutator,==,=,4,0.024127923,token.length() <mask> 1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
970,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9224,9229,MethodCallMutator,length,size,1,1.9063667E-4,token.<mask>(),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
971,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9224,9229,MethodCallMutator,length,width,2,1.0075186E-4,token.<mask>(),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
972,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9224,9229,MethodCallMutator,length,count,3,9.903502E-5,token.<mask>(),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
973,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9224,9229,MethodCallMutator,length,len,4,9.756269E-5,token.<mask>(),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
974,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9218,9222,IdentifierMutator-Variable,token,option,1,3.2827642E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
975,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9218,9222,IdentifierMutator-Variable,token,argument,2,1.5464828E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
976,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9218,9222,IdentifierMutator-Variable,token,word,3,1.4200149E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
977,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9236,9236,IdentifierMutator-Literal,1,0,0,0.7607796,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
978,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9236,9236,IdentifierMutator-Literal,1,2,2,0.03166715,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
979,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9236,9236,IdentifierMutator-Literal,1,3,3,0.012573999,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
980,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,302,9236,9236,IdentifierMutator-Literal,1,4,4,0.005156969,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
981,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,304,9268,9272,IdentifierMutator-Literal,false,true,1,0.27587542,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
982,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,304,9268,9272,IdentifierMutator-Literal,false,null,2,1.6766912E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
983,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,304,9268,9272,IdentifierMutator-Literal,false,0,3,1.623805E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
984,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,304,9268,9272,IdentifierMutator-Literal,false,1,4,7.980603E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
985,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9353,9359,MethodCallMutator,indexOf,find,0,0.66496193,"token.<mask>(""="")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.<mask>(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
986,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9353,9359,MethodCallMutator,indexOf,index,1,0.19081736,"token.<mask>(""="")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.<mask>(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
987,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9353,9359,MethodCallMutator,indexOf,pos,2,0.053286646,"token.<mask>(""="")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.<mask>(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
988,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9353,9359,MethodCallMutator,indexOf,length,3,0.030690782,"token.<mask>(""="")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.<mask>(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
989,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9353,9359,MethodCallMutator,indexOf,position,4,0.029631626,"token.<mask>(""="")","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.<mask>(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
990,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9347,9351,IdentifierMutator-Variable,token,option,1,3.3562724E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos =<mask>.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
991,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9347,9351,IdentifierMutator-Variable,token,value,3,1.525131E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos =<mask>.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
992,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9347,9351,IdentifierMutator-Variable,token,keyword,4,1.403087E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos =<mask>.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
993,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9361,9363,IdentifierMutator-Literal,"""=""","-""",0,0.3344611,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(<mask>);
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
994,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9361,9363,IdentifierMutator-Literal,"""=""",-,1,0.2096652,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(<mask>);
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
995,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9361,9363,IdentifierMutator-Literal,"""=""","-'",2,0.12911679,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(<mask>);
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
996,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9361,9363,IdentifierMutator-Literal,"""=""",/-,3,0.081301026,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(<mask>);
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
997,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,308,9361,9363,IdentifierMutator-Literal,"""=""",--,4,0.05892351,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(<mask>);
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
998,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9447,IdentifierMutator-Conditional,"(pos==(-1))?token.substring(1):token.substring(1,pos)",token,0,0.7623579,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask>;
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
999,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9447,IdentifierMutator-Conditional,"(pos==(-1))?token.substring(1):token.substring(1,pos)",pos,1,0.1931057,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask>;
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1000,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9447,IdentifierMutator-Conditional,"(pos==(-1))?token.substring(1):token.substring(1,pos)",tag,2,0.0046415445,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask>;
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1001,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9447,IdentifierMutator-Conditional,"(pos==(-1))?token.substring(1):token.substring(1,pos)","""""",3,0.0029028736,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask>;
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1002,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9447,IdentifierMutator-Conditional,"(pos==(-1))?token.substring(1):token.substring(1,pos)",prefix,4,0.0018770515,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask>;
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1003,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9395,9398,BinaryOperatorMutator,==,!=,2,0.01609927,pos <mask> (-1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos<mask>-1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1004,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9395,9398,BinaryOperatorMutator,==,>,3,0.011278013,pos <mask> (-1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos<mask>-1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1005,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9395,9398,BinaryOperatorMutator,==,<=,4,0.00928235,pos <mask> (-1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos<mask>-1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1006,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9394,IdentifierMutator-Variable,pos,index,1,7.3409945E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask> == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1007,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9394,IdentifierMutator-Variable,pos,position,2,2.7357019E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask> == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1008,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9392,9394,IdentifierMutator-Variable,pos,offset,4,1.4120231E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName =<mask> == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1009,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9399,9399,UnaryOperatorMutator,-,+,2,4.4239027E-4,<mask>1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos ==<mask>1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1010,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9399,9399,UnaryOperatorMutator,-,"""-",3,2.7265327E-4,<mask>1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos ==<mask>1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1011,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9399,9399,UnaryOperatorMutator,-,$,4,1.7658294E-4,<mask>1,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos ==<mask>1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1012,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9400,9400,IdentifierMutator-Literal,1,2,2,0.0028826175,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -<mask> ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1013,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9400,9400,IdentifierMutator-Literal,1,3,3,1.3267188E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -<mask> ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1014,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9400,9400,IdentifierMutator-Literal,1,2,4,3.6239904E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -<mask> ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1015,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9410,9418,MethodCallMutator,substring,slice,0,0.52563226,token.<mask>(1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.<mask>(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1016,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9410,9418,MethodCallMutator,substring,length,1,0.13143325,token.<mask>(1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.<mask>(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1017,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9410,9418,MethodCallMutator,substring,group,2,0.08550829,token.<mask>(1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.<mask>(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1018,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9410,9418,MethodCallMutator,substring,ring,3,0.03832528,token.<mask>(1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.<mask>(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1019,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9410,9418,MethodCallMutator,substring,string,4,0.030273989,token.<mask>(1),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.<mask>(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1020,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9404,9408,IdentifierMutator-Variable,token,word,1,1.2449299E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ?<mask>.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1021,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9404,9408,IdentifierMutator-Variable,token,tag,2,1.1621708E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ?<mask>.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1022,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9404,9408,IdentifierMutator-Variable,token,option,3,1.13511705E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ?<mask>.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1023,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9420,9420,IdentifierMutator-Literal,1,0,1,0.05902464,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(<mask>) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1024,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9420,9420,IdentifierMutator-Literal,1,2,2,0.027109044,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(<mask>) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1025,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9420,9420,IdentifierMutator-Literal,1,4,3,0.00725081,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(<mask>) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1026,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9420,9420,IdentifierMutator-Literal,1,6,4,0.004716833,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(<mask>) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1027,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9431,9439,MethodCallMutator,substring,slice,0,0.63477325,"token.<mask>(1, pos)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.<mask>(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1028,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9431,9439,MethodCallMutator,substring,ring,1,0.11771455,"token.<mask>(1, pos)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.<mask>(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1029,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9431,9439,MethodCallMutator,substring,replace,2,0.058657542,"token.<mask>(1, pos)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.<mask>(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1030,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9431,9439,MethodCallMutator,substring,copy,3,0.044745415,"token.<mask>(1, pos)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.<mask>(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1031,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9431,9439,MethodCallMutator,substring,sub,4,0.042253226,"token.<mask>(1, pos)","boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.<mask>(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1032,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9425,9429,IdentifierMutator-Variable,token,option,1,9.13009E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) :<mask>.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1033,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9425,9429,IdentifierMutator-Variable,token,word,2,3.147161E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) :<mask>.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1034,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9425,9429,IdentifierMutator-Variable,token,tag,3,2.9651186E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) :<mask>.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1035,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9425,9429,IdentifierMutator-Variable,token,string,4,2.3394648E-5,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) :<mask>.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1036,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9441,9441,IdentifierMutator-Literal,1,0,1,0.39494154,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(<mask>, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1037,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9441,9441,IdentifierMutator-Literal,1,2,2,0.039273962,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(<mask>, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1038,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9441,9441,IdentifierMutator-Literal,1,3,3,0.0014928489,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(<mask>, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1039,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9441,9441,IdentifierMutator-Literal,1,0,4,0.0012842715,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(<mask>, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1040,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9444,9446,IdentifierMutator-Variable,pos,Pos,2,1.7379434E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1,<mask>);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1041,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9444,9446,IdentifierMutator-Variable,pos,position,3,1.5744855E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1,<mask>);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1042,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,309,9444,9446,IdentifierMutator-Variable,pos,len,4,1.5362212E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1,<mask>);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1043,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9470,9483,MethodCallMutator,hasShortOption,has,0,0.6932937,options.<mask>(optName),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.<mask>(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1044,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9470,9483,MethodCallMutator,hasShortOption,remove,1,0.101979755,options.<mask>(optName),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.<mask>(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1045,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9470,9483,MethodCallMutator,hasShortOption,add,2,0.08438003,options.<mask>(optName),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.<mask>(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1046,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9470,9483,MethodCallMutator,hasShortOption,get,3,0.028746339,options.<mask>(optName),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.<mask>(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1047,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9470,9483,MethodCallMutator,hasShortOption,include,4,0.015012006,options.<mask>(optName),"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.<mask>(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1048,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,IdentifierMutator-Variable,options,this,1,9.1377593E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1049,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,IdentifierMutator-Variable,options,Options,2,4.0910416E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1050,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,IdentifierMutator-Variable,options,option,3,2.6544707E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1051,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,FieldReferenceMutator,options,this,1,9.1377593E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1052,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,FieldReferenceMutator,options,Options,2,4.0910416E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1053,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9462,9468,FieldReferenceMutator,options,option,3,2.6544707E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (<mask>.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1054,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9485,9491,IdentifierMutator-Variable,optName,token,0,0.6573986,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(<mask>))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1055,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9485,9491,IdentifierMutator-Variable,optName,name,1,0.10492939,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(<mask>))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1056,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9485,9491,IdentifierMutator-Variable,optName,opt,2,0.046897706,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(<mask>))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1057,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9485,9491,IdentifierMutator-Variable,optName,option,3,0.044261325,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(<mask>))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1058,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,310,9485,9491,IdentifierMutator-Variable,optName,word,4,0.010720204,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(<mask>))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1059,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,312,9524,9527,IdentifierMutator-Literal,true,false,1,0.20953591,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return<mask>;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1060,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,312,9524,9527,IdentifierMutator-Literal,true,1,2,2.3594266E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return<mask>;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1061,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,312,9524,9527,IdentifierMutator-Literal,true,null,3,1.5617078E-4,<mask>,"boolean isShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return<mask>;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1062,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9631,9634,BinaryOperatorMutator,&&,&,2,0.045503687,(optName.length() > 0) <mask> options.hasShortOption(java.lang.String.valueOf(optName.charAt(0))),"    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0<mask>options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1063,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9631,9634,BinaryOperatorMutator,&&,?,3,0.02659771,(optName.length() > 0) <mask> options.hasShortOption(java.lang.String.valueOf(optName.charAt(0))),"    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0<mask>options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1064,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9631,9634,BinaryOperatorMutator,&&,||,4,0.005142088,(optName.length() > 0) <mask> options.hasShortOption(java.lang.String.valueOf(optName.charAt(0))),"    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0<mask>options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1065,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9627,9629,BinaryOperatorMutator,>,==,2,0.08042063,optName.length() <mask> 0,")
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length()<mask>0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1066,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9627,9629,BinaryOperatorMutator,>,!=,3,0.01655953,optName.length() <mask> 0,")
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length()<mask>0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1067,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9627,9629,BinaryOperatorMutator,>,=,4,0.0014474884,optName.length() <mask> 0,")
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length()<mask>0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1068,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9619,9624,MethodCallMutator,length,size,2,7.922265E-5,optName.<mask>(),"String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.<mask>() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1069,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9619,9624,MethodCallMutator,length,width,3,5.975057E-5,optName.<mask>(),"String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.<mask>() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1070,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9619,9624,MethodCallMutator,length,index,4,3.7216774E-5,optName.<mask>(),"String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.<mask>() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1071,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9611,9617,IdentifierMutator-Variable,optName,token,0,0.4262025,<mask>,"ShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return<mask>.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1072,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9611,9617,IdentifierMutator-Variable,optName,name,1,0.38482383,<mask>,"ShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return<mask>.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1073,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9611,9617,IdentifierMutator-Variable,optName,option,2,0.0865745,<mask>,"ShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return<mask>.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1074,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9611,9617,IdentifierMutator-Variable,optName,options,3,0.020047132,<mask>,"ShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return<mask>.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1075,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9611,9617,IdentifierMutator-Variable,optName,prefix,4,0.0047298083,<mask>,"ShortOption(String token)
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return<mask>.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1076,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9630,9630,IdentifierMutator-Literal,0,1,1,0.018492104,<mask>,"
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() ><mask> && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1077,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9630,9630,IdentifierMutator-Literal,0,2,3,8.698048E-4,<mask>,"
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() ><mask> && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1078,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9630,9630,IdentifierMutator-Literal,0,zero,4,2.3929444E-4,<mask>,"
    {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() ><mask> && options.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1079,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9643,9656,MethodCallMutator,hasShortOption,has,0,0.87936586,options.<mask>(String.valueOf(optName.charAt(0)))," {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.<mask>(String.valueOf(optName.charAt(0)));
    }"
1080,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9643,9656,MethodCallMutator,hasShortOption,add,1,0.0227017,options.<mask>(String.valueOf(optName.charAt(0)))," {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.<mask>(String.valueOf(optName.charAt(0)));
    }"
1081,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9643,9656,MethodCallMutator,hasShortOption,remove,2,0.020766992,options.<mask>(String.valueOf(optName.charAt(0)))," {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.<mask>(String.valueOf(optName.charAt(0)));
    }"
1082,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9643,9656,MethodCallMutator,hasShortOption,get,3,0.019810937,options.<mask>(String.valueOf(optName.charAt(0)))," {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.<mask>(String.valueOf(optName.charAt(0)));
    }"
1083,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9643,9656,MethodCallMutator,hasShortOption,include,4,0.007607991,options.<mask>(String.valueOf(optName.charAt(0)))," {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.<mask>(String.valueOf(optName.charAt(0)));
    }"
1084,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,IdentifierMutator-Variable,options,this,2,2.4309976E-4,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1085,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,IdentifierMutator-Variable,options,option,3,7.58005E-5,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1086,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,IdentifierMutator-Variable,options,config,4,6.369742E-5,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1087,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,FieldReferenceMutator,options,this,2,2.4309976E-4,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1088,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,FieldReferenceMutator,options,option,3,7.58005E-5,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1089,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9635,9641,FieldReferenceMutator,options,config,4,6.369742E-5,<mask>,"   {
        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 &&<mask>.hasShortOption(String.valueOf(optName.charAt(0)));
    }"
1090,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9665,9671,MethodCallMutator,valueOf,name,0,0.27832085,String.<mask>(optName.charAt(0)),"    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.<mask>(optName.charAt(0)));
    }"
1091,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9665,9671,MethodCallMutator,valueOf,escape,1,0.15985669,String.<mask>(optName.charAt(0)),"    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.<mask>(optName.charAt(0)));
    }"
1092,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9665,9671,MethodCallMutator,valueOf,id,2,0.08022324,String.<mask>(optName.charAt(0)),"    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.<mask>(optName.charAt(0)));
    }"
1093,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9665,9671,MethodCallMutator,valueOf,from,3,0.07120329,String.<mask>(optName.charAt(0)),"    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.<mask>(optName.charAt(0)));
    }"
1094,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9665,9671,MethodCallMutator,valueOf,quote,4,0.048651174,String.<mask>(optName.charAt(0)),"    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.<mask>(optName.charAt(0)));
    }"
1095,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9681,9686,MethodCallMutator,charAt,get,0,0.48419547,optName.<mask>(0)," (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.<mask>(0)));
    }"
1096,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9681,9686,MethodCallMutator,charAt,slice,1,0.21464744,optName.<mask>(0)," (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.<mask>(0)));
    }"
1097,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9681,9686,MethodCallMutator,charAt,length,2,0.05795025,optName.<mask>(0)," (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.<mask>(0)));
    }"
1098,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9681,9686,MethodCallMutator,charAt,at,3,0.037142668,optName.<mask>(0)," (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.<mask>(0)));
    }"
1099,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9681,9686,MethodCallMutator,charAt,group,4,0.033543892,optName.<mask>(0)," (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.<mask>(0)));
    }"
1100,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9673,9679,IdentifierMutator-Variable,optName,token,0,0.8165803,<mask>," // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(<mask>.charAt(0)));
    }"
1101,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9673,9679,IdentifierMutator-Variable,optName,name,1,0.08348101,<mask>," // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(<mask>.charAt(0)));
    }"
1102,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9673,9679,IdentifierMutator-Variable,optName,option,2,0.01897547,<mask>," // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(<mask>.charAt(0)));
    }"
1103,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9673,9679,IdentifierMutator-Variable,optName,prefix,3,0.0070127733,<mask>," // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(<mask>.charAt(0)));
    }"
1104,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9673,9679,IdentifierMutator-Variable,optName,word,4,0.0062760026,<mask>," // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(<mask>.charAt(0)));
    }"
1105,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9688,9688,IdentifierMutator-Literal,0,1,1,0.0019338637,<mask>," -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(<mask>)));
    }"
1106,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9688,9688,IdentifierMutator-Literal,0,2,3,1.01536636E-4,<mask>," -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(<mask>)));
    }"
1107,DefaultParser.java,isShortOption,boolean isShortOption(String token),299,315,9688,9688,IdentifierMutator-Literal,0,4,4,9.739609E-5,<mask>," -SV, -S=V, -SV1=V2, -S1S2)
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        // remove leading ""-"" and ""=value""
        int pos = token.indexOf(""="");
        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
        if (options.hasShortOption(optName))
        {
            return true;
        }
        // check for several concatenated short options
        return optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(<mask>)));
    }"
1108,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9883,9886,BinaryOperatorMutator,||,&&,0,0.60855985,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1109,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9883,9886,BinaryOperatorMutator,||,&&,1,0.27946204,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1110,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9883,9886,BinaryOperatorMutator,||,|,4,0.0034091955,"(!token.startsWith(""-"")) <mask> (token.length() == 1)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"")<mask>token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1111,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9861,9861,UnaryOperatorMutator,!,?,2,0.0032497405,"<mask>token.startsWith(""-"")","boolean isLongOption(String token)
    {
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1112,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9861,9861,UnaryOperatorMutator,!,?!,3,0.0031306322,"<mask>token.startsWith(""-"")","boolean isLongOption(String token)
    {
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1113,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9861,9861,UnaryOperatorMutator,!,...,4,0.0022062657,"<mask>token.startsWith(""-"")","boolean isLongOption(String token)
    {
        if (<mask>token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1114,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9868,9877,MethodCallMutator,startsWith,has,0,0.5662118,"token.<mask>(""-"")","boolean isLongOption(String token)
    {
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1115,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9868,9877,MethodCallMutator,startsWith,split,1,0.14918227,"token.<mask>(""-"")","boolean isLongOption(String token)
    {
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1116,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9868,9877,MethodCallMutator,startsWith,is,2,0.1116018,"token.<mask>(""-"")","boolean isLongOption(String token)
    {
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1117,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9868,9877,MethodCallMutator,startsWith,includes,3,0.02314986,"token.<mask>(""-"")","boolean isLongOption(String token)
    {
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1118,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9868,9877,MethodCallMutator,startsWith,remove,4,0.019815482,"token.<mask>(""-"")","boolean isLongOption(String token)
    {
        if (!token.<mask>(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1119,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9862,9866,IdentifierMutator-Variable,token,Token,2,1.2325885E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1120,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9862,9866,IdentifierMutator-Variable,token,word,3,1.21041165E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1121,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9862,9866,IdentifierMutator-Variable,token,oken,4,4.732885E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!<mask>.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1122,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9879,9881,IdentifierMutator-Literal,"""-""",--,0,0.630258,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1123,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9879,9881,IdentifierMutator-Literal,"""-""",=,1,0.06201629,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1124,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9879,9881,IdentifierMutator-Literal,"""-""","=""",2,0.06006819,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1125,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9879,9881,IdentifierMutator-Literal,"""-""","-""",3,0.055597454,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1126,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9879,9881,IdentifierMutator-Literal,"""-""","='",4,0.033338103,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(<mask>) || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1127,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9901,9904,BinaryOperatorMutator,==,>,0,0.3011905,token.length() <mask> 1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1128,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9901,9904,BinaryOperatorMutator,==,<,2,0.10407118,token.length() <mask> 1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1129,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9901,9904,BinaryOperatorMutator,==,-,3,0.09616239,token.length() <mask> 1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1130,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9901,9904,BinaryOperatorMutator,==,<,4,0.07985885,token.length() <mask> 1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length()<mask>1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1131,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9893,9898,MethodCallMutator,length,size,1,1.4475499E-4,token.<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1132,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9893,9898,MethodCallMutator,length,width,2,1.2808839E-4,token.<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1133,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9893,9898,MethodCallMutator,length,count,3,9.956639E-5,token.<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1134,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9893,9898,MethodCallMutator,length,split,4,8.965423E-5,token.<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.<mask>() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1135,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9887,9891,IdentifierMutator-Variable,token,option,1,7.6788705E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1136,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9887,9891,IdentifierMutator-Variable,token,tokens,3,3.3226956E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1137,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9887,9891,IdentifierMutator-Variable,token,argument,4,2.588994E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") ||<mask>.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1138,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9905,9905,IdentifierMutator-Literal,1,0,0,0.958862,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1139,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9905,9905,IdentifierMutator-Literal,1,2,2,0.0024563174,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1140,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9905,9905,IdentifierMutator-Literal,1,3,3,9.0901175E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1141,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,325,9905,9905,IdentifierMutator-Literal,1,5,4,6.5830164E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() ==<mask>)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1142,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,327,9937,9941,IdentifierMutator-Literal,false,true,0,0.5571378,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1143,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,327,9937,9941,IdentifierMutator-Literal,false,0,2,1.9905533E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1144,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,327,9937,9941,IdentifierMutator-Literal,false,null,3,1.648446E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1145,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,327,9937,9941,IdentifierMutator-Literal,false,1,4,1.3671977E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return<mask>;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1146,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9979,9985,MethodCallMutator,indexOf,find,0,0.88687986,"token.<mask>(""="")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.<mask>(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1147,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9979,9985,MethodCallMutator,indexOf,index,1,0.07340438,"token.<mask>(""="")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.<mask>(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1148,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9979,9985,MethodCallMutator,indexOf,length,2,0.009173382,"token.<mask>(""="")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.<mask>(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1149,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9979,9985,MethodCallMutator,indexOf,pos,3,0.008919496,"token.<mask>(""="")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.<mask>(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1150,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9979,9985,MethodCallMutator,indexOf,position,4,0.0062623047,"token.<mask>(""="")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.<mask>(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1151,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9973,9977,IdentifierMutator-Variable,token,option,2,3.138064E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos =<mask>.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1152,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9973,9977,IdentifierMutator-Variable,token,word,3,1.7349102E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos =<mask>.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1153,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9973,9977,IdentifierMutator-Variable,token,prefix,4,1.2909774E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos =<mask>.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1154,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9987,9989,IdentifierMutator-Literal,"""=""",-,0,0.28801396,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(<mask>);
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1155,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9987,9989,IdentifierMutator-Literal,"""=""",--,1,0.18045676,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(<mask>);
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1156,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9987,9989,IdentifierMutator-Literal,"""=""",/-,2,0.14879428,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(<mask>);
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1157,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9987,9989,IdentifierMutator-Literal,"""=""","-'",3,0.0560295,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(<mask>);
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1158,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,330,9987,9989,IdentifierMutator-Literal,"""=""",-+,4,0.03888088,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(<mask>);
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1159,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10054,IdentifierMutator-Conditional,"(pos==(-1))?token:token.substring(0,pos)",token,0,0.9702794,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask>;

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1160,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10054,IdentifierMutator-Conditional,"(pos==(-1))?token:token.substring(0,pos)",pos,1,0.01607336,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask>;

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1161,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10054,IdentifierMutator-Conditional,"(pos==(-1))?token:token.substring(0,pos)",tokens,2,6.1192154E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask>;

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1162,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10054,IdentifierMutator-Conditional,"(pos==(-1))?token:token.substring(0,pos)",this,3,4.9802935E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask>;

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1163,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10054,IdentifierMutator-Conditional,"(pos==(-1))?token:token.substring(0,pos)","""""",4,4.5674553E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask>;

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1164,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10015,10018,BinaryOperatorMutator,==,>,2,0.0064707166,pos <mask> (-1),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos<mask>-1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1165,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10015,10018,BinaryOperatorMutator,==,=,3,0.004813166,pos <mask> (-1),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos<mask>-1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1166,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10015,10018,BinaryOperatorMutator,==,===,4,0.0046316157,pos <mask> (-1),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos<mask>-1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1167,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10014,IdentifierMutator-Variable,pos,index,1,4.069229E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask> == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1168,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10014,IdentifierMutator-Variable,pos,position,3,1.9422012E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask> == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1169,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10012,10014,IdentifierMutator-Variable,pos,offset,4,7.0694873E-6,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t =<mask> == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1170,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10019,10019,UnaryOperatorMutator,-,+,1,1.4323446E-4,<mask>1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos ==<mask>1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1171,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10019,10019,UnaryOperatorMutator,-,"""-",3,7.314221E-5,<mask>1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos ==<mask>1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1172,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10019,10019,UnaryOperatorMutator,-,(-,4,3.1544412E-5,<mask>1,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos ==<mask>1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1173,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10020,10020,IdentifierMutator-Literal,1,2,2,0.0011672906,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -<mask> ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1174,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10020,10020,IdentifierMutator-Literal,1,3,3,4.960154E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -<mask> ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1175,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10020,10020,IdentifierMutator-Literal,1,2,4,4.127498E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -<mask> ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1176,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10024,10028,IdentifierMutator-Variable,token,"""""",1,0.19409785,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ?<mask> : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1177,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10024,10028,IdentifierMutator-Variable,token,null,2,0.07038063,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ?<mask> : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1178,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10024,10028,IdentifierMutator-Variable,token,"''",3,0.020637296,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ?<mask> : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1179,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10024,10028,IdentifierMutator-Variable,token,undefined,4,0.0036542856,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ?<mask> : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1180,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10038,10046,MethodCallMutator,substring,slice,0,0.5418124,"token.<mask>(0, pos)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.<mask>(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1181,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10038,10046,MethodCallMutator,substring,ring,1,0.22552225,"token.<mask>(0, pos)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.<mask>(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1182,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10038,10046,MethodCallMutator,substring,replace,2,0.0820136,"token.<mask>(0, pos)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.<mask>(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1183,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10038,10046,MethodCallMutator,substring,fill,3,0.021981565,"token.<mask>(0, pos)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.<mask>(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1184,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10038,10046,MethodCallMutator,substring,get,4,0.019792514,"token.<mask>(0, pos)","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.<mask>(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1185,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10032,10036,IdentifierMutator-Variable,token,option,1,1.7437816E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token :<mask>.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1186,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10032,10036,IdentifierMutator-Variable,token,string,3,5.190837E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token :<mask>.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1187,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10032,10036,IdentifierMutator-Variable,token,word,4,5.11057E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token :<mask>.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1188,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10048,10048,IdentifierMutator-Literal,0,1,1,0.09016411,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(<mask>, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1189,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10048,10048,IdentifierMutator-Literal,0,2,2,0.008546989,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(<mask>, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1190,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10048,10048,IdentifierMutator-Literal,0,6,4,0.0037813704,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(<mask>, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1191,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10051,10053,IdentifierMutator-Variable,pos,Pos,2,1.1702845E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0,<mask>);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1192,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10051,10053,IdentifierMutator-Variable,pos,position,3,8.679052E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0,<mask>);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1193,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,331,10051,10053,IdentifierMutator-Variable,pos,index,4,3.991277E-5,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0,<mask>);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1194,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10070,10070,UnaryOperatorMutator,!,--,1,0.14561468,<mask>options.getMatchingOptions(t).isEmpty(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (<mask>options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1195,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10070,10070,UnaryOperatorMutator,!,,2,0.032278482,<mask>options.getMatchingOptions(t).isEmpty(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (<mask>options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1196,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10070,10070,UnaryOperatorMutator,!,$,3,0.028256085,<mask>options.getMatchingOptions(t).isEmpty(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (<mask>options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1197,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10070,10070,UnaryOperatorMutator,!,_,4,0.02598251,<mask>options.getMatchingOptions(t).isEmpty(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (<mask>options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1198,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10101,10107,MethodCallMutator,isEmpty,size,0,0.7525753,options.getMatchingOptions(t).<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).<mask>())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1199,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10101,10107,MethodCallMutator,isEmpty,get,1,0.04869129,options.getMatchingOptions(t).<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).<mask>())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1200,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10101,10107,MethodCallMutator,isEmpty,next,2,0.025471555,options.getMatchingOptions(t).<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).<mask>())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1201,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10101,10107,MethodCallMutator,isEmpty,length,3,0.020801416,options.getMatchingOptions(t).<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).<mask>())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1202,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10101,10107,MethodCallMutator,isEmpty,empty,4,0.015975608,options.getMatchingOptions(t).<mask>(),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).<mask>())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1203,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10079,10096,MethodCallMutator,getMatchingOptions,get,0,0.9684968,options.<mask>(t),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.<mask>(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1204,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10079,10096,MethodCallMutator,getMatchingOptions,add,1,0.005434593,options.<mask>(t),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.<mask>(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1205,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10079,10096,MethodCallMutator,getMatchingOptions,key,2,0.0021851996,options.<mask>(t),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.<mask>(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1206,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10079,10096,MethodCallMutator,getMatchingOptions,remove,3,0.0020447434,options.<mask>(t),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.<mask>(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1207,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10079,10096,MethodCallMutator,getMatchingOptions,of,4,0.0013344004,options.<mask>(t),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.<mask>(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1208,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,IdentifierMutator-Variable,options,parser,1,0.074719004,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1209,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,IdentifierMutator-Variable,options,option,2,0.033871178,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1210,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,IdentifierMutator-Variable,options,config,3,0.030338451,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1211,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,IdentifierMutator-Variable,options,Options,4,0.025552023,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1212,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,FieldReferenceMutator,options,parser,1,0.074719004,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1213,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,FieldReferenceMutator,options,option,2,0.033871178,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1214,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,FieldReferenceMutator,options,config,3,0.030338451,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1215,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10071,10077,FieldReferenceMutator,options,Options,4,0.025552023,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!<mask>.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1216,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10098,10098,IdentifierMutator-Variable,t,token,1,0.07222025,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(<mask>).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1217,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10098,10098,IdentifierMutator-Variable,t,T,2,0.003563695,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(<mask>).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1218,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10098,10098,IdentifierMutator-Variable,t,ts,3,0.0020955277,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(<mask>).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1219,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,333,10098,10098,IdentifierMutator-Variable,t,s,4,0.0018215013,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(<mask>).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1220,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,336,10220,10223,IdentifierMutator-Literal,true,false,1,0.07697746,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return<mask>;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1221,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,336,10220,10223,IdentifierMutator-Literal,true,True,3,1.7492757E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return<mask>;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1222,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,336,10220,10223,IdentifierMutator-Literal,true,null,4,1.7181596E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return<mask>;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1223,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10281,10284,BinaryOperatorMutator,&&,&,2,0.0111562805,"(getLongPrefix(token) != null) <mask> (!token.startsWith(""--""))","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null<mask>!token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1224,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10281,10284,BinaryOperatorMutator,&&,||,3,0.010573944,"(getLongPrefix(token) != null) <mask> (!token.startsWith(""--""))","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null<mask>!token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1225,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10281,10284,BinaryOperatorMutator,&&,?,4,0.0019130794,"(getLongPrefix(token) != null) <mask> (!token.startsWith(""--""))","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null<mask>!token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1226,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10273,10276,BinaryOperatorMutator,!=,==,0,0.7811633,getLongPrefix(token) <mask> null,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token)<mask>null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1227,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10273,10276,BinaryOperatorMutator,!=,=,2,0.058835063,getLongPrefix(token) <mask> null,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token)<mask>null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1228,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10273,10276,BinaryOperatorMutator,!=,==,3,0.006990419,getLongPrefix(token) <mask> null,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token)<mask>null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1229,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10273,10276,BinaryOperatorMutator,!=,>,4,0.003813557,getLongPrefix(token) <mask> null,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token)<mask>null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1230,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10253,10265,MethodCallMutator,getLongPrefix,option,0,0.21977031,<mask>(token),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (<mask>(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1231,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10253,10265,MethodCallMutator,getLongPrefix,options,1,0.03997783,<mask>(token),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (<mask>(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1232,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10253,10265,MethodCallMutator,getLongPrefix,get,2,0.025514634,<mask>(token),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (<mask>(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1233,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10253,10265,MethodCallMutator,getLongPrefix,quote,3,0.024864282,<mask>(token),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (<mask>(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1234,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10253,10265,MethodCallMutator,getLongPrefix,split,4,0.024144217,<mask>(token),"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (<mask>(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1235,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10267,10271,IdentifierMutator-Variable,token,option,1,0.018224347,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(<mask>) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1236,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10267,10271,IdentifierMutator-Variable,token,options,2,0.0062156245,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(<mask>) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1237,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10267,10271,IdentifierMutator-Variable,token,word,3,0.003678108,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(<mask>) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1238,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10267,10271,IdentifierMutator-Variable,token,string,4,0.003630486,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(<mask>) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1239,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10277,10280,IdentifierMutator-Literal,null,"""""",1,0.0818501,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) !=<mask> && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1240,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10277,10280,IdentifierMutator-Literal,null,0,2,0.045995656,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) !=<mask> && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1241,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10277,10280,IdentifierMutator-Literal,null,"''",3,0.013159716,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) !=<mask> && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1242,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10277,10280,IdentifierMutator-Literal,null,NULL,4,0.007372827,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) !=<mask> && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1243,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10285,10285,UnaryOperatorMutator,!,(,1,0.027846662,"<mask>token.startsWith(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null &&<mask>token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1244,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10285,10285,UnaryOperatorMutator,!,(!,2,0.00908318,"<mask>token.startsWith(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null &&<mask>token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1245,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10285,10285,UnaryOperatorMutator,!,//,3,0.002538534,"<mask>token.startsWith(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null &&<mask>token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1246,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10285,10285,UnaryOperatorMutator,!,(,4,6.1539066E-4,"<mask>token.startsWith(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null &&<mask>token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1247,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10292,10301,MethodCallMutator,startsWith,has,0,0.48800552,"token.<mask>(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.<mask>(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1248,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10292,10301,MethodCallMutator,startsWith,is,1,0.3098676,"token.<mask>(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.<mask>(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1249,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10292,10301,MethodCallMutator,startsWith,split,2,0.070942484,"token.<mask>(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.<mask>(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1250,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10292,10301,MethodCallMutator,startsWith,match,3,0.018625328,"token.<mask>(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.<mask>(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1251,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10292,10301,MethodCallMutator,startsWith,includes,4,0.01646626,"token.<mask>(""--"")","boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.<mask>(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1252,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10286,10290,IdentifierMutator-Variable,token,Token,2,0.0010711456,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !<mask>.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1253,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10286,10290,IdentifierMutator-Variable,token,word,3,3.9124815E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !<mask>.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1254,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10286,10290,IdentifierMutator-Variable,token,oken,4,3.2921616E-4,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !<mask>.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return false;
    }"
1255,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10303,10306,IdentifierMutator-Literal,"""--""",-,0,0.42518947,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(<mask>))
        {
            // -LV
            return true;
        }

        return false;
    }"
1256,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10303,10306,IdentifierMutator-Literal,"""--""",/-,1,0.16547589,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(<mask>))
        {
            // -LV
            return true;
        }

        return false;
    }"
1257,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10303,10306,IdentifierMutator-Literal,"""--""","-'",2,0.04721809,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(<mask>))
        {
            // -LV
            return true;
        }

        return false;
    }"
1258,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10303,10306,IdentifierMutator-Literal,"""--""",--,3,0.04484846,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(<mask>))
        {
            // -LV
            return true;
        }

        return false;
    }"
1259,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,338,10303,10306,IdentifierMutator-Literal,"""--""","-""",4,0.03266023,<mask>,"boolean isLongOption(String token)
    {
        if (!token.startsWith(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(<mask>))
        {
            // -LV
            return true;
        }

        return false;
    }"
1260,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,341,10358,10361,IdentifierMutator-Literal,true,false,1,0.028539993,<mask>,"With(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return<mask>;
        }

        return false;
    }"
1261,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,341,10358,10361,IdentifierMutator-Literal,true,True,2,3.334789E-4,<mask>,"With(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return<mask>;
        }

        return false;
    }"
1262,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,341,10358,10361,IdentifierMutator-Literal,true,continue,3,2.5235477E-4,<mask>,"With(""-"") || token.length() == 1)
        {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return<mask>;
        }

        return false;
    }"
1263,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,344,10390,10394,IdentifierMutator-Literal,false,true,1,0.03380382,<mask>," {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return<mask>;
    }"
1264,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,344,10390,10394,IdentifierMutator-Literal,false,False,2,3.378693E-4,<mask>," {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return<mask>;
    }"
1265,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,344,10390,10394,IdentifierMutator-Literal,false,null,3,2.7728727E-4,<mask>," {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return<mask>;
    }"
1266,DefaultParser.java,isLongOption,boolean isLongOption(String token),323,344,10390,10394,IdentifierMutator-Literal,false,undefined,4,2.4023774E-4,<mask>," {
            return false;
        }

        int pos = token.indexOf(""="");
        String t = pos == -1 ? token : token.substring(0, pos);

        if (!options.getMatchingOptions(t).isEmpty())
        {
            // long or partial long options (--L, -L, --L=V, -L=V, --l, --l=V)
            return true;
        }
        else if (getLongPrefix(token) != null && !token.startsWith(""--""))
        {
            // -LV
            return true;
        }

        return<mask>;
    }"
1267,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10957,10960,BinaryOperatorMutator,&&,&,2,0.008826696,"(token.startsWith(""-"") && (token.length() > 1)) <mask> (!stopAtNonOption)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1<mask>!stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1268,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10957,10960,BinaryOperatorMutator,&&,||,3,0.004507848,"(token.startsWith(""-"") && (token.length() > 1)) <mask> (!stopAtNonOption)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1<mask>!stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1269,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10957,10960,BinaryOperatorMutator,&&,|,4,4.810233E-4,"(token.startsWith(""-"") && (token.length() > 1)) <mask> (!stopAtNonOption)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1<mask>!stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1270,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10935,10938,BinaryOperatorMutator,&&,||,2,0.018840462,"token.startsWith(""-"") <mask> (token.length() > 1)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"")<mask>token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1271,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10935,10938,BinaryOperatorMutator,&&,||,3,0.014915891,"token.startsWith(""-"") <mask> (token.length() > 1)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"")<mask>token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1272,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10935,10938,BinaryOperatorMutator,&&,&,4,0.012261594,"token.startsWith(""-"") <mask> (token.length() > 1)","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"")<mask>token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1273,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10920,10929,MethodCallMutator,startsWith,has,0,0.6863952,"token.<mask>(""-"")","void handleUnknownToken(String token) throws ParseException
    {
        if (token.<mask>(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1274,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10920,10929,MethodCallMutator,startsWith,split,1,0.094282955,"token.<mask>(""-"")","void handleUnknownToken(String token) throws ParseException
    {
        if (token.<mask>(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1275,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10920,10929,MethodCallMutator,startsWith,is,2,0.04966392,"token.<mask>(""-"")","void handleUnknownToken(String token) throws ParseException
    {
        if (token.<mask>(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1276,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10920,10929,MethodCallMutator,startsWith,match,3,0.017713822,"token.<mask>(""-"")","void handleUnknownToken(String token) throws ParseException
    {
        if (token.<mask>(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1277,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10920,10929,MethodCallMutator,startsWith,includes,4,0.016554931,"token.<mask>(""-"")","void handleUnknownToken(String token) throws ParseException
    {
        if (token.<mask>(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1278,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10914,10918,IdentifierMutator-Variable,token,string,2,3.1737617E-4,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (<mask>.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1279,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10914,10918,IdentifierMutator-Variable,token,word,3,2.426969E-4,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (<mask>.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1280,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10914,10918,IdentifierMutator-Variable,token,Token,4,1.4612556E-4,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (<mask>.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1281,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10931,10933,IdentifierMutator-Literal,"""-""",--,0,0.2589141,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(<mask>) && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1282,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10931,10933,IdentifierMutator-Literal,"""-""",option,1,0.102573514,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(<mask>) && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1283,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10931,10933,IdentifierMutator-Literal,"""-""",#,2,0.081561744,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(<mask>) && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1284,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10931,10933,IdentifierMutator-Literal,"""-""",-,3,0.06952256,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(<mask>) && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1285,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10931,10933,IdentifierMutator-Literal,"""-""",Option,4,0.054525085,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(<mask>) && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1286,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10953,10955,BinaryOperatorMutator,>,==,1,0.28686795,token.length() <mask> 1,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length()<mask>1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1287,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10953,10955,BinaryOperatorMutator,>,<,2,0.033137716,token.length() <mask> 1,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length()<mask>1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1288,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10953,10955,BinaryOperatorMutator,>,-,3,0.029191045,token.length() <mask> 1,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length()<mask>1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1289,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10945,10950,MethodCallMutator,length,len,1,2.2779402E-4,token.<mask>(),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.<mask>() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1290,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10945,10950,MethodCallMutator,length,width,2,1.8597893E-4,token.<mask>(),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.<mask>() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1291,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10945,10950,MethodCallMutator,length,size,3,1.8103566E-4,token.<mask>(),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.<mask>() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1292,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10945,10950,MethodCallMutator,length,count,4,1.20453224E-4,token.<mask>(),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.<mask>() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1293,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10939,10943,IdentifierMutator-Variable,token,option,1,0.0014196064,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") &&<mask>.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1294,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10939,10943,IdentifierMutator-Variable,token,argument,2,0.0013145136,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") &&<mask>.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1295,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10939,10943,IdentifierMutator-Variable,token,command,4,3.9119268E-4,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") &&<mask>.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1296,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10956,10956,IdentifierMutator-Literal,1,0,0,0.7693625,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() ><mask> && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1297,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10956,10956,IdentifierMutator-Literal,1,2,2,0.035174955,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() ><mask> && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1298,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10956,10956,IdentifierMutator-Literal,1,3,3,0.013674137,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() ><mask> && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1299,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10956,10956,IdentifierMutator-Literal,1,5,4,0.0057507684,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() ><mask> && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1300,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10961,10961,UnaryOperatorMutator,!,(!,1,0.0072907195,<mask>stopAtNonOption,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 &&<mask>stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1301,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10961,10961,UnaryOperatorMutator,!,(,2,0.0028050414,<mask>stopAtNonOption,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 &&<mask>stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1302,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10961,10961,UnaryOperatorMutator,!,//,3,0.002399961,<mask>stopAtNonOption,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 &&<mask>stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1303,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,IdentifierMutator-Variable,stopAtNonOption,skip,0,0.13383874,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1304,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,IdentifierMutator-Variable,stopAtNonOption,optional,1,0.056506503,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1305,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,IdentifierMutator-Variable,stopAtNonOption,skip,2,0.035436623,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1306,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,IdentifierMutator-Variable,stopAtNonOption,strict,3,0.035080872,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1307,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,IdentifierMutator-Variable,stopAtNonOption,ignore,4,0.033583723,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1308,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,FieldReferenceMutator,stopAtNonOption,skip,0,0.13383874,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1309,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,FieldReferenceMutator,stopAtNonOption,optional,1,0.056506503,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1310,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,FieldReferenceMutator,stopAtNonOption,skip,2,0.035436623,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1311,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,FieldReferenceMutator,stopAtNonOption,strict,3,0.035080872,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1312,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,358,10962,10976,FieldReferenceMutator,stopAtNonOption,ignore,4,0.033583723,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !<mask>)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1313,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11062,11064,BinaryOperatorMutator,+,"""+",2,0.0012650772,"""Unrecognized option: "" <mask> token","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: ""<mask>token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1314,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11062,11064,BinaryOperatorMutator,+,//,3,2.4391362E-4,"""Unrecognized option: "" <mask> token","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: ""<mask>token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1315,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11062,11064,BinaryOperatorMutator,+,.,4,1.5196897E-4,"""Unrecognized option: "" <mask> token","void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: ""<mask>token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1316,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11039,11061,IdentifierMutator-Literal,"""Unrecognizedoption:""","\""",0,0.0974053,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(<mask> + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1317,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11039,11061,IdentifierMutator-Literal,"""Unrecognizedoption:""","""",1,0.062410116,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(<mask> + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1318,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11039,11061,IdentifierMutator-Literal,"""Unrecognizedoption:""",prefix,2,0.052245308,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(<mask> + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1319,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11039,11061,IdentifierMutator-Literal,"""Unrecognizedoption:""",-,3,0.041602936,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(<mask> + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1320,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11039,11061,IdentifierMutator-Literal,"""Unrecognizedoption:""",--,4,0.03838165,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(<mask> + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1321,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11065,11069,IdentifierMutator-Variable,token,option,1,0.062522516,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" +<mask>, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1322,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11065,11069,IdentifierMutator-Variable,token,name,2,0.0068420884,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" +<mask>, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1323,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11065,11069,IdentifierMutator-Variable,token,opt,3,0.00626022,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" +<mask>, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1324,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11065,11069,IdentifierMutator-Variable,token,options,4,0.003728674,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" +<mask>, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1325,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11072,11076,IdentifierMutator-Variable,token,e,0,0.38170233,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token,<mask>);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1326,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11072,11076,IdentifierMutator-Variable,token,ex,1,0.141636,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token,<mask>);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1327,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11072,11076,IdentifierMutator-Variable,token,this,2,0.036704645,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token,<mask>);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1328,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11072,11076,IdentifierMutator-Variable,token,exception,3,0.028575575,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token,<mask>);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1329,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,360,11072,11076,IdentifierMutator-Variable,token,0,4,0.023414792,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token,<mask>);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1330,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11103,11108,MethodCallMutator,addArg,append,0,0.17901722,cmd.<mask>(token),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.<mask>(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1331,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11103,11108,MethodCallMutator,addArg,add,1,0.17648906,cmd.<mask>(token),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.<mask>(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1332,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11103,11108,MethodCallMutator,addArg,parse,2,0.12327434,cmd.<mask>(token),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.<mask>(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1333,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11103,11108,MethodCallMutator,addArg,option,3,0.05770131,cmd.<mask>(token),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.<mask>(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1334,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11103,11108,MethodCallMutator,addArg,set,4,0.02639512,cmd.<mask>(token),"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.<mask>(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1335,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,IdentifierMutator-Variable,cmd,parser,0,0.67128617,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1336,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,IdentifierMutator-Variable,cmd,args,1,0.018831408,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1337,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,IdentifierMutator-Variable,cmd,this,2,0.018385462,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1338,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,IdentifierMutator-Variable,cmd,parse,3,0.012540809,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1339,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,IdentifierMutator-Variable,cmd,options,4,0.011460386,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1340,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,FieldReferenceMutator,cmd,parser,0,0.67128617,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1341,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,FieldReferenceMutator,cmd,args,1,0.018831408,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1342,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,FieldReferenceMutator,cmd,this,2,0.018385462,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1343,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,FieldReferenceMutator,cmd,parse,3,0.012540809,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1344,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11099,11101,FieldReferenceMutator,cmd,options,4,0.011460386,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }<mask>.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1345,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11110,11114,IdentifierMutator-Variable,token,argument,1,0.039942674,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(<mask>);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1346,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11110,11114,IdentifierMutator-Variable,token,arg,2,0.023970667,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(<mask>);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1347,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11110,11114,IdentifierMutator-Variable,token,args,3,0.0125099,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(<mask>);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1348,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,363,11110,11114,IdentifierMutator-Variable,token,option,4,0.00692921,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(<mask>);
        if (stopAtNonOption)
        {
            skipParsing = true;
        }
    }"
1349,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,IdentifierMutator-Variable,stopAtNonOption,skip,0,0.62425274,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1350,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,IdentifierMutator-Variable,stopAtNonOption,debug,1,0.040668014,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1351,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,IdentifierMutator-Variable,stopAtNonOption,parse,2,0.018312827,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1352,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,IdentifierMutator-Variable,stopAtNonOption,check,3,0.012979944,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1353,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,IdentifierMutator-Variable,stopAtNonOption,process,4,0.011794076,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1354,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,FieldReferenceMutator,stopAtNonOption,skip,0,0.62425274,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1355,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,FieldReferenceMutator,stopAtNonOption,debug,1,0.040668014,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1356,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,FieldReferenceMutator,stopAtNonOption,parse,2,0.018312827,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1357,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,FieldReferenceMutator,stopAtNonOption,check,3,0.012979944,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1358,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,364,11130,11144,FieldReferenceMutator,stopAtNonOption,process,4,0.011794076,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (<mask>)
        {
            skipParsing = true;
        }
    }"
1359,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11180,11180,AssignmentMutator,skipParsing=true,Flag,0,0.09871892,skipParsing <mask>= true,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing<mask>= true;
        }
    }"
1360,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11180,11180,AssignmentMutator,skipParsing=true,Result,1,0.0744198,skipParsing <mask>= true,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing<mask>= true;
        }
    }"
1361,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11180,11180,AssignmentMutator,skipParsing=true,List,2,0.04524283,skipParsing <mask>= true,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing<mask>= true;
        }
    }"
1362,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11180,11180,AssignmentMutator,skipParsing=true,Options,3,0.03907976,skipParsing <mask>= true,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing<mask>= true;
        }
    }"
1363,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11180,11180,AssignmentMutator,skipParsing=true,2,4,0.035833433,skipParsing <mask>= true,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing<mask>= true;
        }
    }"
1364,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,IdentifierMutator-Variable,skipParsing,stop,0,0.70368725,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1365,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,IdentifierMutator-Variable,skipParsing,done,1,0.09545794,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1366,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,IdentifierMutator-Variable,skipParsing,stopped,2,0.04026923,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1367,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,IdentifierMutator-Variable,skipParsing,end,3,0.015890824,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1368,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,IdentifierMutator-Variable,skipParsing,finished,4,0.009314228,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1369,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,FieldReferenceMutator,skipParsing,stop,0,0.70368725,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1370,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,FieldReferenceMutator,skipParsing,done,1,0.09545794,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1371,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,FieldReferenceMutator,skipParsing,stopped,2,0.04026923,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1372,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,FieldReferenceMutator,skipParsing,end,3,0.015890824,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1373,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11169,11179,FieldReferenceMutator,skipParsing,finished,4,0.009314228,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {<mask> = true;
        }
    }"
1374,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11183,11186,IdentifierMutator-Literal,true,false,1,0.15554163,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing =<mask>;
        }
    }"
1375,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11183,11186,IdentifierMutator-Literal,true,0,2,0.0022328508,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing =<mask>;
        }
    }"
1376,DefaultParser.java,handleUnknownToken,void handleUnknownToken(String token) throws ParseException,356,366,11183,11186,IdentifierMutator-Literal,true,1,4,0.0011384954,<mask>,"void handleUnknownToken(String token) throws ParseException
    {
        if (token.startsWith(""-"") && token.length() > 1 && !stopAtNonOption)
        {
            throw new UnrecognizedOptionException(""Unrecognized option: "" + token, token);
        }

        cmd.addArg(token);
        if (stopAtNonOption)
        {
            skipParsing =<mask>;
        }
    }"
1377,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11480,11483,BinaryOperatorMutator,==,!=,0,0.51551116,"token.indexOf('=') <mask> (-1)","void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=')<mask>-1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1378,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11480,11483,BinaryOperatorMutator,==,>,3,0.07826941,"token.indexOf('=') <mask> (-1)","void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=')<mask>-1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1379,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11480,11483,BinaryOperatorMutator,==,===,4,0.01744489,"token.indexOf('=') <mask> (-1)","void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=')<mask>-1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1380,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11468,11474,MethodCallMutator,indexOf,find,0,0.5092583,"token.<mask>('=')","void handleLongOption(String token) throws ParseException
    {
        if (token.<mask>('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1381,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11468,11474,MethodCallMutator,indexOf,match,1,0.23315588,"token.<mask>('=')","void handleLongOption(String token) throws ParseException
    {
        if (token.<mask>('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1382,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11468,11474,MethodCallMutator,indexOf,index,2,0.08931451,"token.<mask>('=')","void handleLongOption(String token) throws ParseException
    {
        if (token.<mask>('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1383,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11468,11474,MethodCallMutator,indexOf,search,3,0.03129594,"token.<mask>('=')","void handleLongOption(String token) throws ParseException
    {
        if (token.<mask>('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1384,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11468,11474,MethodCallMutator,indexOf,count,4,0.025005516,"token.<mask>('=')","void handleLongOption(String token) throws ParseException
    {
        if (token.<mask>('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1385,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11462,11466,IdentifierMutator-Variable,token,string,1,3.6550706E-4,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (<mask>.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1386,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11462,11466,IdentifierMutator-Variable,token,word,3,2.4914677E-4,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (<mask>.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1387,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11462,11466,IdentifierMutator-Variable,token,option,4,1.379543E-4,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (<mask>.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1388,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11476,11478,IdentifierMutator-Literal,"'='","-'",0,0.1363602,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf(<mask>) == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1389,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11476,11478,IdentifierMutator-Literal,"'='","='",1,0.119330175,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf(<mask>) == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1390,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11476,11478,IdentifierMutator-Literal,"'='","\""",2,0.043084204,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf(<mask>) == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1391,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11476,11478,IdentifierMutator-Literal,"'='",=,3,0.035584472,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf(<mask>) == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1392,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11476,11478,IdentifierMutator-Literal,"'='","-""",4,0.03152216,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf(<mask>) == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1393,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11484,11484,UnaryOperatorMutator,-,+,2,3.475421E-4,<mask>1,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') ==<mask>1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1394,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11484,11484,UnaryOperatorMutator,-,$,3,1.8607521E-4,<mask>1,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') ==<mask>1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1395,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11484,11484,UnaryOperatorMutator,-,(-,4,7.312567E-5,<mask>1,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') ==<mask>1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1396,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11485,11485,IdentifierMutator-Literal,1,2,2,0.0032266448,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -<mask>)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1397,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11485,11485,IdentifierMutator-Literal,1,3,3,5.409942E-4,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -<mask>)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1398,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,382,11485,11485,IdentifierMutator-Literal,1,5,4,1.13334114E-4,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -<mask>)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1399,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11510,11537,MethodCallMutator,handleLongOptionWithoutEqual,parse,0,0.10447578,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {<mask>(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1400,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11510,11537,MethodCallMutator,handleLongOptionWithoutEqual,expect,1,0.08704513,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {<mask>(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1401,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11510,11537,MethodCallMutator,handleLongOptionWithoutEqual,unexpected,2,0.0730021,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {<mask>(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1402,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11510,11537,MethodCallMutator,handleLongOptionWithoutEqual,consume,3,0.04874517,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {<mask>(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1403,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11510,11537,MethodCallMutator,handleLongOptionWithoutEqual,accept,4,0.041695427,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {<mask>(token);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1404,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11539,11543,IdentifierMutator-Variable,token,rule,2,5.699989E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(<mask>);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1405,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11539,11543,IdentifierMutator-Variable,token,word,3,4.6694686E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(<mask>);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1406,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,384,11539,11543,IdentifierMutator-Variable,token,Token,4,4.3189066E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(<mask>);
        }
        else
        {
            handleLongOptionWithEqual(token);
        }
    }"
1407,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11592,11616,MethodCallMutator,handleLongOptionWithEqual,expect,0,0.11824007,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {<mask>(token);
        }
    }"
1408,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11592,11616,MethodCallMutator,handleLongOptionWithEqual,parse,1,0.10845767,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {<mask>(token);
        }
    }"
1409,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11592,11616,MethodCallMutator,handleLongOptionWithEqual,print,2,0.06742817,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {<mask>(token);
        }
    }"
1410,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11592,11616,MethodCallMutator,handleLongOptionWithEqual,unexpected,3,0.04534099,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {<mask>(token);
        }
    }"
1411,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11592,11616,MethodCallMutator,handleLongOptionWithEqual,accept,4,0.041474912,<mask>(token),"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {<mask>(token);
        }
    }"
1412,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11618,11622,IdentifierMutator-Variable,token,Token,2,5.7454426E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(<mask>);
        }
    }"
1413,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11618,11622,IdentifierMutator-Variable,token,word,3,5.5775176E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(<mask>);
        }
    }"
1414,DefaultParser.java,handleLongOption,void handleLongOption(String token) throws ParseException,380,388,11618,11622,IdentifierMutator-Variable,token,rule,4,4.517518E-6,<mask>,"void handleLongOption(String token) throws ParseException
    {
        if (token.indexOf('=') == -1)
        {
            handleLongOptionWithoutEqual(token);
        }
        else
        {
            handleLongOptionWithEqual(<mask>);
        }
    }"
1415,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11938,11955,MethodCallMutator,getMatchingOptions,get,0,0.40559292,options.<mask>(token),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.<mask>(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1416,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11938,11955,MethodCallMutator,getMatchingOptions,options,1,0.32407075,options.<mask>(token),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.<mask>(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1417,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11938,11955,MethodCallMutator,getMatchingOptions,option,2,0.13308617,options.<mask>(token),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.<mask>(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1418,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11938,11955,MethodCallMutator,getMatchingOptions,parse,3,0.023163904,options.<mask>(token),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.<mask>(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1419,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11938,11955,MethodCallMutator,getMatchingOptions,list,4,0.01600543,options.<mask>(token),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.<mask>(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1420,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,IdentifierMutator-Variable,options,parser,1,0.13601723,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1421,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,IdentifierMutator-Variable,options,this,2,0.0075957123,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1422,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,IdentifierMutator-Variable,options,tokens,3,0.0068297647,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1423,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,IdentifierMutator-Variable,options,flags,4,0.00419072,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1424,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,FieldReferenceMutator,options,parser,1,0.13601723,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1425,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,FieldReferenceMutator,options,this,2,0.0075957123,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1426,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,FieldReferenceMutator,options,tokens,3,0.0068297647,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1427,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11930,11936,FieldReferenceMutator,options,flags,4,0.00419072,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts =<mask>.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1428,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11957,11961,IdentifierMutator-Variable,token,true,2,2.5259968E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1429,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11957,11961,IdentifierMutator-Variable,token,Token,3,1.4389209E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1430,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,404,11957,11961,IdentifierMutator-Variable,token,tag,4,9.400206E-5,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1431,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11990,11996,MethodCallMutator,isEmpty,empty,0,0.6251702,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1432,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11990,11996,MethodCallMutator,isEmpty,size,1,0.28449026,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1433,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11990,11996,MethodCallMutator,isEmpty,Empty,2,0.079517856,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1434,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11990,11996,MethodCallMutator,isEmpty,last,3,0.002346278,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1435,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11990,11996,MethodCallMutator,isEmpty,length,4,0.001783178,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1436,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11977,11988,IdentifierMutator-Variable,matchingOpts,token,0,0.7718803,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1437,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11977,11988,IdentifierMutator-Variable,matchingOpts,options,1,0.15033613,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1438,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11977,11988,IdentifierMutator-Variable,matchingOpts,args,2,0.010308303,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1439,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11977,11988,IdentifierMutator-Variable,matchingOpts,match,3,0.0068078646,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1440,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,405,11977,11988,IdentifierMutator-Variable,matchingOpts,option,4,0.0050375103,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1441,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12023,12040,MethodCallMutator,handleUnknownToken,unexpected,0,0.27170315,<mask>(currentToken),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1442,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12023,12040,MethodCallMutator,handleUnknownToken,consume,1,0.15562773,<mask>(currentToken),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1443,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12023,12040,MethodCallMutator,handleUnknownToken,skip,2,0.07840775,<mask>(currentToken),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1444,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12023,12040,MethodCallMutator,handleUnknownToken,next,3,0.07796477,<mask>(currentToken),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1445,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12023,12040,MethodCallMutator,handleUnknownToken,parse,4,0.028399084,<mask>(currentToken),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1446,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,IdentifierMutator-Variable,currentToken,token,0,0.99448425,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1447,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,IdentifierMutator-Variable,currentToken,option,1,3.685553E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1448,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,IdentifierMutator-Variable,currentToken,token,2,2.2671155E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1449,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,IdentifierMutator-Variable,currentToken,Token,3,1.608196E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1450,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,IdentifierMutator-Variable,currentToken,true,4,1.3146923E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1451,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,FieldReferenceMutator,currentToken,token,0,0.99448425,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1452,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,FieldReferenceMutator,currentToken,option,1,3.685553E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1453,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,FieldReferenceMutator,currentToken,token,2,2.2671155E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1454,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,FieldReferenceMutator,currentToken,Token,3,1.608196E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1455,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,407,12042,12053,FieldReferenceMutator,currentToken,true,4,1.3146923E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1456,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12103,12105,BinaryOperatorMutator,>,==,0,0.47698823,matchingOpts.size() <mask> 1,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1457,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12103,12105,BinaryOperatorMutator,>,-,3,0.03844611,matchingOpts.size() <mask> 1,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1458,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12103,12105,BinaryOperatorMutator,>,<,4,0.021165326,matchingOpts.size() <mask> 1,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1459,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12097,12100,MethodCallMutator,size,length,2,1.01705984E-4,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1460,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12097,12100,MethodCallMutator,size,count,3,5.238312E-5,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1461,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12097,12100,MethodCallMutator,size,Size,4,1.2268218E-5,matchingOpts.<mask>(),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1462,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12084,12095,IdentifierMutator-Variable,matchingOpts,options,0,0.81745446,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1463,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12084,12095,IdentifierMutator-Variable,matchingOpts,token,1,0.051817726,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1464,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12084,12095,IdentifierMutator-Variable,matchingOpts,args,2,0.034104645,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1465,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12084,12095,IdentifierMutator-Variable,matchingOpts,option,3,0.014365652,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1466,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12084,12095,IdentifierMutator-Variable,matchingOpts,match,4,0.0075409478,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1467,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12106,12106,IdentifierMutator-Literal,1,0,1,0.29985014,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1468,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12106,12106,IdentifierMutator-Literal,1,2,2,0.0049503967,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1469,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,409,12106,12106,IdentifierMutator-Literal,1,0,4,6.366527E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1470,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12166,12170,IdentifierMutator-Variable,token,option,1,0.0054760035,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1471,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12166,12170,IdentifierMutator-Variable,token,options,2,0.0024402076,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1472,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12166,12170,IdentifierMutator-Variable,token,name,3,0.0010002793,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1473,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12166,12170,IdentifierMutator-Variable,token,tag,4,9.976301E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1474,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12173,12184,IdentifierMutator-Variable,matchingOpts,options,0,0.4988309,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token,<mask>);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1475,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12173,12184,IdentifierMutator-Variable,matchingOpts,this,1,0.04920341,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token,<mask>);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1476,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12173,12184,IdentifierMutator-Variable,matchingOpts,null,2,0.03717559,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token,<mask>);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1477,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12173,12184,IdentifierMutator-Variable,matchingOpts,error,3,0.032167394,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token,<mask>);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1478,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,411,12173,12184,IdentifierMutator-Variable,matchingOpts,true,4,0.03167865,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token,<mask>);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(0)));
        }
    }"
1479,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12233,12244,MethodCallMutator,handleOption,parse,0,0.14881474,<mask>(options.getOption(matchingOpts.get(0))),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {<mask>(options.getOption(matchingOpts.get(0)));
        }
    }"
1480,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12233,12244,MethodCallMutator,handleOption,print,1,0.09703463,<mask>(options.getOption(matchingOpts.get(0))),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {<mask>(options.getOption(matchingOpts.get(0)));
        }
    }"
1481,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12233,12244,MethodCallMutator,handleOption,add,2,0.09116403,<mask>(options.getOption(matchingOpts.get(0))),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {<mask>(options.getOption(matchingOpts.get(0)));
        }
    }"
1482,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12233,12244,MethodCallMutator,handleOption,accept,3,0.06979944,<mask>(options.getOption(matchingOpts.get(0))),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {<mask>(options.getOption(matchingOpts.get(0)));
        }
    }"
1483,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12233,12244,MethodCallMutator,handleOption,handle,4,0.03560623,<mask>(options.getOption(matchingOpts.get(0))),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {<mask>(options.getOption(matchingOpts.get(0)));
        }
    }"
1484,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12254,12262,MethodCallMutator,getOption,get,0,0.8443889,options.<mask>(matchingOpts.get(0)),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.<mask>(matchingOpts.get(0)));
        }
    }"
1485,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12254,12262,MethodCallMutator,getOption,parse,1,0.048735227,options.<mask>(matchingOpts.get(0)),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.<mask>(matchingOpts.get(0)));
        }
    }"
1486,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12254,12262,MethodCallMutator,getOption,option,2,0.021087557,options.<mask>(matchingOpts.get(0)),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.<mask>(matchingOpts.get(0)));
        }
    }"
1487,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12254,12262,MethodCallMutator,getOption,options,3,0.008007019,options.<mask>(matchingOpts.get(0)),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.<mask>(matchingOpts.get(0)));
        }
    }"
1488,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12254,12262,MethodCallMutator,getOption,remove,4,0.0071857325,options.<mask>(matchingOpts.get(0)),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.<mask>(matchingOpts.get(0)));
        }
    }"
1489,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,IdentifierMutator-Variable,options,Options,1,0.00910028,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1490,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,IdentifierMutator-Variable,options,parser,2,0.0045943437,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1491,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,IdentifierMutator-Variable,options,option,4,0.0019286241,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1492,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,FieldReferenceMutator,options,Options,1,0.00910028,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1493,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,FieldReferenceMutator,options,parser,2,0.0045943437,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1494,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12246,12252,FieldReferenceMutator,options,option,4,0.0019286241,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(<mask>.getOption(matchingOpts.get(0)));
        }
    }"
1495,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12277,12279,MethodCallMutator,get,item,1,0.007360371,matchingOpts.<mask>(0),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.<mask>(0)));
        }
    }"
1496,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12277,12279,MethodCallMutator,get,remove,2,0.0016147878,matchingOpts.<mask>(0),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.<mask>(0)));
        }
    }"
1497,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12277,12279,MethodCallMutator,get,list,3,1.1794761E-4,matchingOpts.<mask>(0),"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.<mask>(0)));
        }
    }"
1498,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12264,12275,IdentifierMutator-Variable,matchingOpts,token,0,0.315932,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(<mask>.get(0)));
        }
    }"
1499,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12264,12275,IdentifierMutator-Variable,matchingOpts,options,1,0.16654162,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(<mask>.get(0)));
        }
    }"
1500,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12264,12275,IdentifierMutator-Variable,matchingOpts,args,2,0.11420484,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(<mask>.get(0)));
        }
    }"
1501,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12264,12275,IdentifierMutator-Variable,matchingOpts,match,3,0.08448375,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(<mask>.get(0)));
        }
    }"
1502,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12264,12275,IdentifierMutator-Variable,matchingOpts,option,4,0.05063959,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(<mask>.get(0)));
        }
    }"
1503,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12281,12281,IdentifierMutator-Literal,0,1,1,0.009850546,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(<mask>)));
        }
    }"
1504,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12281,12281,IdentifierMutator-Literal,0,2,2,0.0011449647,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(<mask>)));
        }
    }"
1505,DefaultParser.java,handleLongOptionWithoutEqual,void handleLongOptionWithoutEqual(String token) throws ParseException,402,415,12281,12281,IdentifierMutator-Literal,0,token,4,6.7528896E-4,<mask>,"void handleLongOptionWithoutEqual(String token) throws ParseException
    {
        List<String> matchingOpts = options.getMatchingOptions(token);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(token, matchingOpts);
        }
        else
        {
            handleOption(options.getOption(matchingOpts.get(<mask>)));
        }
    }"
1506,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12583,12589,MethodCallMutator,indexOf,pos,0,0.469087,"token.<mask>('=')","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.<mask>('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1507,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12583,12589,MethodCallMutator,indexOf,find,1,0.17757665,"token.<mask>('=')","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.<mask>('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1508,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12583,12589,MethodCallMutator,indexOf,position,2,0.17017876,"token.<mask>('=')","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.<mask>('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1509,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12583,12589,MethodCallMutator,indexOf,index,3,0.13381734,"token.<mask>('=')","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.<mask>('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1510,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12583,12589,MethodCallMutator,indexOf,search,4,0.012225241,"token.<mask>('=')","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.<mask>('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1511,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12577,12581,IdentifierMutator-Variable,token,option,2,8.5293366E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos =<mask>.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1512,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12577,12581,IdentifierMutator-Variable,token,input,3,5.3435375E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos =<mask>.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1513,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12577,12581,IdentifierMutator-Variable,token,line,4,4.8886992E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos =<mask>.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1514,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12591,12593,IdentifierMutator-Literal,"'='","='",0,0.43462002,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf(<mask>);

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1515,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12591,12593,IdentifierMutator-Literal,"'='","-'",1,0.10381389,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf(<mask>);

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1516,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12591,12593,IdentifierMutator-Literal,"'='",=,2,0.039336663,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf(<mask>);

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1517,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12591,12593,IdentifierMutator-Literal,"'='",-,3,0.028535454,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf(<mask>);

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1518,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,431,12591,12593,IdentifierMutator-Literal,"'='",value,4,0.019715082,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf(<mask>);

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1519,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12627,12635,MethodCallMutator,substring,get,0,0.32750237,token.<mask>(pos + 1),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.<mask>(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1520,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12627,12635,MethodCallMutator,substring,ring,1,0.22888789,token.<mask>(pos + 1),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.<mask>(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1521,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12627,12635,MethodCallMutator,substring,slice,2,0.062138923,token.<mask>(pos + 1),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.<mask>(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1522,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12627,12635,MethodCallMutator,substring,group,3,0.056519892,token.<mask>(pos + 1),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.<mask>(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1523,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12627,12635,MethodCallMutator,substring,string,4,0.050928697,token.<mask>(pos + 1),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.<mask>(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1524,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12621,12625,IdentifierMutator-Variable,token,line,1,1.1895749E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value =<mask>.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1525,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12621,12625,IdentifierMutator-Variable,token,input,3,4.5735185E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value =<mask>.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1526,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12621,12625,IdentifierMutator-Variable,token,tag,4,4.345725E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value =<mask>.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1527,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12640,12642,BinaryOperatorMutator,+,",",2,0.0056505515,pos <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos<mask>1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1528,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12640,12642,BinaryOperatorMutator,+,-,3,0.0017182368,pos <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos<mask>1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1529,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12640,12642,BinaryOperatorMutator,+,)+,4,0.00131279,pos <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos<mask>1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1530,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12637,12639,IdentifierMutator-Variable,pos,Pos,1,5.8002456E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(<mask> + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1531,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12637,12639,IdentifierMutator-Variable,pos,0,3,7.853463E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(<mask> + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1532,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12637,12639,IdentifierMutator-Variable,pos,position,4,4.705214E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(<mask> + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1533,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12643,12643,IdentifierMutator-Literal,1,2,1,0.10947832,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos +<mask>);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1534,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12643,12643,IdentifierMutator-Literal,1,4,2,0.015549629,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos +<mask>);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1535,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12643,12643,IdentifierMutator-Literal,1,3,3,0.009515819,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos +<mask>);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1536,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,433,12643,12643,IdentifierMutator-Literal,1,6,4,0.0072596553,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos +<mask>);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1537,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12675,12683,MethodCallMutator,substring,ring,0,0.5272233,"token.<mask>(0, pos)","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.<mask>(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1538,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12675,12683,MethodCallMutator,substring,string,1,0.16363984,"token.<mask>(0, pos)","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.<mask>(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1539,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12675,12683,MethodCallMutator,substring,slice,2,0.10547845,"token.<mask>(0, pos)","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.<mask>(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1540,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12675,12683,MethodCallMutator,substring,replace,3,0.055640303,"token.<mask>(0, pos)","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.<mask>(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1541,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12675,12683,MethodCallMutator,substring,get,4,0.020294763,"token.<mask>(0, pos)","void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.<mask>(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1542,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12669,12673,IdentifierMutator-Variable,token,value,1,5.657371E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt =<mask>.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1543,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12669,12673,IdentifierMutator-Variable,token,line,2,7.1987015E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt =<mask>.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1544,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12669,12673,IdentifierMutator-Variable,token,option,3,6.4388274E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt =<mask>.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1545,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12669,12673,IdentifierMutator-Variable,token,tag,4,4.5279357E-5,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt =<mask>.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1546,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12685,12685,IdentifierMutator-Literal,0,2,1,0.23034698,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(<mask>, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1547,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12685,12685,IdentifierMutator-Literal,0,1,2,0.042688653,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(<mask>, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1548,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12685,12685,IdentifierMutator-Literal,0,6,3,0.029897299,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(<mask>, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1549,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12685,12685,IdentifierMutator-Literal,0,3,4,0.010640282,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(<mask>, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1550,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12688,12690,IdentifierMutator-Variable,pos,position,2,5.667391E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0,<mask>);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1551,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12688,12690,IdentifierMutator-Variable,pos,len,3,5.547819E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0,<mask>);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1552,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,435,12688,12690,IdentifierMutator-Variable,pos,index,4,2.5338458E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0,<mask>);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1553,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12739,12756,MethodCallMutator,getMatchingOptions,get,0,0.7078779,options.<mask>(opt),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.<mask>(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1554,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12739,12756,MethodCallMutator,getMatchingOptions,options,1,0.13429543,options.<mask>(opt),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.<mask>(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1555,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12739,12756,MethodCallMutator,getMatchingOptions,option,2,0.04828668,options.<mask>(opt),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.<mask>(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1556,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12739,12756,MethodCallMutator,getMatchingOptions,list,3,0.032637276,options.<mask>(opt),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.<mask>(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1557,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12739,12756,MethodCallMutator,getMatchingOptions,match,4,0.0070374426,options.<mask>(opt),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.<mask>(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1558,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,IdentifierMutator-Variable,options,parser,1,0.1603638,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1559,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,IdentifierMutator-Variable,options,this,2,0.010733443,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1560,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,IdentifierMutator-Variable,options,option,3,0.009570295,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1561,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,IdentifierMutator-Variable,options,flags,4,0.0063454206,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1562,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,FieldReferenceMutator,options,parser,1,0.1603638,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1563,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,FieldReferenceMutator,options,this,2,0.010733443,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1564,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,FieldReferenceMutator,options,option,3,0.009570295,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1565,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12731,12737,FieldReferenceMutator,options,flags,4,0.0063454206,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts =<mask>.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1566,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12758,12760,IdentifierMutator-Variable,opt,option,1,0.007661449,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1567,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12758,12760,IdentifierMutator-Variable,opt,value,2,0.001966726,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1568,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12758,12760,IdentifierMutator-Variable,opt,op,3,0.0011256173,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1569,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,437,12758,12760,IdentifierMutator-Variable,opt,token,4,4.95252E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(<mask>);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1570,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12789,12795,MethodCallMutator,isEmpty,size,0,0.6523802,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1571,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12789,12795,MethodCallMutator,isEmpty,empty,1,0.30120552,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1572,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12789,12795,MethodCallMutator,isEmpty,Empty,2,0.029440252,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1573,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12789,12795,MethodCallMutator,isEmpty,clear,3,0.004457846,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1574,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12789,12795,MethodCallMutator,isEmpty,last,4,0.0020078374,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.<mask>())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1575,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12776,12787,IdentifierMutator-Variable,matchingOpts,opt,0,0.47301537,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1576,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12776,12787,IdentifierMutator-Variable,matchingOpts,value,1,0.36517859,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1577,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12776,12787,IdentifierMutator-Variable,matchingOpts,options,2,0.032249138,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1578,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12776,12787,IdentifierMutator-Variable,matchingOpts,option,3,0.026190875,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1579,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,438,12776,12787,IdentifierMutator-Variable,matchingOpts,values,4,0.010319975,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (<mask>.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1580,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12822,12839,MethodCallMutator,handleUnknownToken,unexpected,0,0.22830081,<mask>(currentToken),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1581,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12822,12839,MethodCallMutator,handleUnknownToken,consume,1,0.1963792,<mask>(currentToken),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1582,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12822,12839,MethodCallMutator,handleUnknownToken,skip,2,0.08969997,<mask>(currentToken),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1583,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12822,12839,MethodCallMutator,handleUnknownToken,next,3,0.060920898,<mask>(currentToken),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1584,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12822,12839,MethodCallMutator,handleUnknownToken,parse,4,0.031806633,<mask>(currentToken),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {<mask>(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1585,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,IdentifierMutator-Variable,currentToken,token,0,0.9468747,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1586,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,IdentifierMutator-Variable,currentToken,opt,1,0.0083917165,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1587,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,IdentifierMutator-Variable,currentToken,option,2,0.00823184,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1588,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,IdentifierMutator-Variable,currentToken,value,3,0.0023353682,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1589,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,IdentifierMutator-Variable,currentToken,pos,4,0.0021911028,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1590,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,FieldReferenceMutator,currentToken,token,0,0.9468747,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1591,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,FieldReferenceMutator,currentToken,opt,1,0.0083917165,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1592,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,FieldReferenceMutator,currentToken,option,2,0.00823184,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1593,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,FieldReferenceMutator,currentToken,value,3,0.0023353682,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1594,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,440,12841,12852,FieldReferenceMutator,currentToken,pos,4,0.0021911028,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(<mask>);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1595,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12902,12904,BinaryOperatorMutator,>,==,0,0.46477768,matchingOpts.size() <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1596,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12902,12904,BinaryOperatorMutator,>,-,3,0.03128622,matchingOpts.size() <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1597,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12902,12904,BinaryOperatorMutator,>,==,4,0.015145802,matchingOpts.size() <mask> 1,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size()<mask>1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1598,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12896,12899,MethodCallMutator,size,length,2,4.9322225E-5,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1599,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12896,12899,MethodCallMutator,size,values,3,1.4619637E-5,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1600,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12896,12899,MethodCallMutator,size,count,4,1.4241695E-5,matchingOpts.<mask>(),"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.<mask>() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1601,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12883,12894,IdentifierMutator-Variable,matchingOpts,options,0,0.72859466,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1602,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12883,12894,IdentifierMutator-Variable,matchingOpts,option,1,0.08973391,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1603,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12883,12894,IdentifierMutator-Variable,matchingOpts,opt,2,0.08593392,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1604,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12883,12894,IdentifierMutator-Variable,matchingOpts,value,3,0.015470209,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1605,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12883,12894,IdentifierMutator-Variable,matchingOpts,args,4,0.014155406,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (<mask>.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1606,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12905,12905,IdentifierMutator-Literal,1,0,1,0.113396406,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1607,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12905,12905,IdentifierMutator-Literal,1,2,2,0.0042163064,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1608,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,442,12905,12905,IdentifierMutator-Literal,1,one,4,1.7510053E-4,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() ><mask>)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1609,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12965,12967,IdentifierMutator-Variable,opt,option,1,0.20798808,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1610,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12965,12967,IdentifierMutator-Variable,opt,token,2,0.1311872,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1611,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12965,12967,IdentifierMutator-Variable,opt,value,3,0.08625764,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1612,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12965,12967,IdentifierMutator-Variable,opt,tag,4,0.0045230733,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(<mask>, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1613,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12970,12981,IdentifierMutator-Variable,matchingOpts,value,0,0.90183824,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt,<mask>);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1614,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12970,12981,IdentifierMutator-Variable,matchingOpts,token,1,0.017715393,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt,<mask>);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1615,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12970,12981,IdentifierMutator-Variable,matchingOpts,pos,2,0.008332754,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt,<mask>);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1616,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12970,12981,IdentifierMutator-Variable,matchingOpts,null,3,0.0057751667,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt,<mask>);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1617,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,444,12970,12981,IdentifierMutator-Variable,matchingOpts,val,4,0.004169586,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt,<mask>);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1618,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13054,13062,MethodCallMutator,getOption,get,0,0.95404625,options.<mask>(matchingOpts.get(0)),"LongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.<mask>(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1619,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13054,13062,MethodCallMutator,getOption,remove,1,0.010170395,options.<mask>(matchingOpts.get(0)),"LongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.<mask>(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1620,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13054,13062,MethodCallMutator,getOption,option,2,0.006257283,options.<mask>(matchingOpts.get(0)),"LongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.<mask>(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1621,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13054,13062,MethodCallMutator,getOption,add,3,0.003450785,options.<mask>(matchingOpts.get(0)),"LongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.<mask>(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1622,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13054,13062,MethodCallMutator,getOption,find,4,0.0028976942,options.<mask>(matchingOpts.get(0)),"LongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.<mask>(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1623,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,IdentifierMutator-Variable,options,parser,1,0.032824233,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1624,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,IdentifierMutator-Variable,options,option,2,0.0066201026,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1625,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,IdentifierMutator-Variable,options,this,3,0.0055073854,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1626,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,IdentifierMutator-Variable,options,config,4,0.004393475,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1627,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,FieldReferenceMutator,options,parser,1,0.032824233,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1628,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,FieldReferenceMutator,options,option,2,0.0066201026,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1629,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,FieldReferenceMutator,options,this,3,0.0055073854,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1630,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13046,13052,FieldReferenceMutator,options,config,4,0.004393475,<mask>,"void handleLongOptionWithEqual(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option =<mask>.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1631,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13077,13079,MethodCallMutator,get,item,1,0.007221633,matchingOpts.<mask>(0),") throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.<mask>(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1632,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13077,13079,MethodCallMutator,get,remove,2,0.002556952,matchingOpts.<mask>(0),") throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.<mask>(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1633,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13077,13079,MethodCallMutator,get,value,3,3.2946822E-4,matchingOpts.<mask>(0),") throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.<mask>(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1634,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13077,13079,MethodCallMutator,get,group,4,2.175016E-4,matchingOpts.<mask>(0),") throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.<mask>(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1635,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13064,13075,IdentifierMutator-Variable,matchingOpts,args,0,0.5836136,<mask>,"Equal(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(<mask>.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1636,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13064,13075,IdentifierMutator-Variable,matchingOpts,token,1,0.054059062,<mask>,"Equal(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(<mask>.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1637,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13064,13075,IdentifierMutator-Variable,matchingOpts,argument,2,0.046093434,<mask>,"Equal(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(<mask>.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1638,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13064,13075,IdentifierMutator-Variable,matchingOpts,match,3,0.044004817,<mask>,"Equal(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(<mask>.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1639,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13064,13075,IdentifierMutator-Variable,matchingOpts,options,4,0.027363447,<mask>,"Equal(String token) throws ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(<mask>.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1640,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13081,13081,IdentifierMutator-Literal,0,1,1,0.018149666,<mask>," ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(<mask>));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1641,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13081,13081,IdentifierMutator-Literal,0,2,2,0.0027375307,<mask>," ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(<mask>));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1642,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,448,13081,13081,IdentifierMutator-Literal,0,opt,3,7.949835E-4,<mask>," ParseException
    {
        int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(<mask>));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1643,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13110,13119,MethodCallMutator,acceptsArg,optional,0,0.16388382,option.<mask>()," = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.<mask>())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1644,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13110,13119,MethodCallMutator,acceptsArg,help,1,0.15766567,option.<mask>()," = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.<mask>())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1645,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13110,13119,MethodCallMutator,acceptsArg,selected,2,0.076986805,option.<mask>()," = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.<mask>())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1646,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13110,13119,MethodCallMutator,acceptsArg,value,3,0.040651146,option.<mask>()," = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.<mask>())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1647,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13110,13119,MethodCallMutator,acceptsArg,valid,4,0.035159774,option.<mask>()," = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.<mask>())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1648,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13103,13108,IdentifierMutator-Variable,option,argument,1,0.001685709,<mask>," int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (<mask>.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1649,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13103,13108,IdentifierMutator-Variable,option,options,2,0.001568086,<mask>," int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (<mask>.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1650,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,450,13103,13108,IdentifierMutator-Variable,option,Option,4,8.413956E-4,<mask>," int pos = token.indexOf('=');

        String value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (<mask>.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1651,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13154,13165,MethodCallMutator,handleOption,accept,0,0.23350336,<mask>(option)," value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {<mask>(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1652,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13154,13165,MethodCallMutator,handleOption,process,1,0.09845847,<mask>(option)," value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {<mask>(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1653,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13154,13165,MethodCallMutator,handleOption,validate,2,0.05766466,<mask>(option)," value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {<mask>(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1654,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13154,13165,MethodCallMutator,handleOption,add,3,0.052130766,<mask>(option)," value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {<mask>(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1655,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13154,13165,MethodCallMutator,handleOption,parse,4,0.051699933,<mask>(option)," value = token.substring(pos + 1);

        String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {<mask>(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1656,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13167,13172,IdentifierMutator-Variable,option,options,1,0.0025955483,<mask>," String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(<mask>);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1657,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13167,13172,IdentifierMutator-Variable,option,argument,3,0.0014758218,<mask>," String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(<mask>);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1658,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,452,13167,13172,IdentifierMutator-Variable,option,Option,4,0.0010795881,<mask>," String opt = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(<mask>);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1659,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13206,13226,MethodCallMutator,addValueForProcessing,set,0,0.38265884,currentOption.<mask>(value),"<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1660,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13206,13226,MethodCallMutator,addValueForProcessing,add,1,0.07681402,currentOption.<mask>(value),"<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1661,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13206,13226,MethodCallMutator,addValueForProcessing,value,2,0.054044686,currentOption.<mask>(value),"<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1662,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13206,13226,MethodCallMutator,addValueForProcessing,option,3,0.04885754,currentOption.<mask>(value),"<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1663,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13206,13226,MethodCallMutator,addValueForProcessing,append,4,0.04553971,currentOption.<mask>(value),"<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1664,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,IdentifierMutator-Variable,currentOption,option,0,0.4077348,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1665,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,IdentifierMutator-Variable,currentOption,context,1,0.04533961,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1666,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,IdentifierMutator-Variable,currentOption,expression,2,0.040398672,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1667,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,IdentifierMutator-Variable,currentOption,options,3,0.038028177,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1668,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,IdentifierMutator-Variable,currentOption,result,4,0.029995244,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1669,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,FieldReferenceMutator,currentOption,option,0,0.4077348,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1670,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,FieldReferenceMutator,currentOption,context,1,0.04533961,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1671,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,FieldReferenceMutator,currentOption,expression,2,0.040398672,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1672,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,FieldReferenceMutator,currentOption,options,3,0.038028177,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1673,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13192,13204,FieldReferenceMutator,currentOption,result,4,0.029995244,<mask>," = token.substring(0, pos);

        List<String> matchingOpts = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1674,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13228,13232,IdentifierMutator-Variable,value,option,1,0.14820607,<mask>," = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1675,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13228,13232,IdentifierMutator-Variable,value,val,2,0.056329343,<mask>," = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1676,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13228,13232,IdentifierMutator-Variable,value,this,3,0.041258693,<mask>," = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1677,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,453,13228,13232,IdentifierMutator-Variable,value,argument,4,0.035166126,<mask>," = options.getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1678,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13265,13265,AssignmentMutator,currentOption=null,!,0,0.711348,currentOption <mask>= null,"matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1679,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13265,13265,AssignmentMutator,currentOption=null,|,1,0.059776727,currentOption <mask>= null,"matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1680,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13265,13265,AssignmentMutator,currentOption=null,^,2,0.04470534,currentOption <mask>= null,"matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1681,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13265,13265,AssignmentMutator,currentOption=null,||,3,0.042448565,currentOption <mask>= null,"matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1682,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13265,13265,AssignmentMutator,currentOption=null,*,4,0.040749807,currentOption <mask>= null,"matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1683,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,IdentifierMutator-Variable,currentOption,value,0,0.6125589,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1684,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,IdentifierMutator-Variable,currentOption,option,1,0.2770298,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1685,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,IdentifierMutator-Variable,currentOption,value,2,0.021760302,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1686,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,IdentifierMutator-Variable,currentOption,options,3,0.00888109,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1687,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,IdentifierMutator-Variable,currentOption,argument,4,0.008044059,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1688,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,FieldReferenceMutator,currentOption,value,0,0.6125589,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1689,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,FieldReferenceMutator,currentOption,option,1,0.2770298,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1690,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,FieldReferenceMutator,currentOption,value,2,0.021760302,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1691,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,FieldReferenceMutator,currentOption,options,3,0.00888109,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1692,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13252,13264,FieldReferenceMutator,currentOption,argument,4,0.008044059,<mask>,".getMatchingOptions(opt);
        if (matchingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1693,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13268,13271,IdentifierMutator-Literal,null,option,0,0.9689577,<mask>,"ingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1694,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13268,13271,IdentifierMutator-Literal,null,option,2,0.0020305654,<mask>,"ingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1695,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13268,13271,IdentifierMutator-Literal,null,value,3,0.00195965,<mask>,"ingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1696,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,454,13268,13271,IdentifierMutator-Literal,null,options,4,0.0016033188,<mask>,"ingOpts.isEmpty())
        {
            handleUnknownToken(currentToken);
        }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                handleUnknownToken(currentToken);
            }
        }
    }"
1697,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13335,13352,MethodCallMutator,handleUnknownToken,consume,0,0.15523848,<mask>(currentToken),"   }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {<mask>(currentToken);
            }
        }
    }"
1698,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13335,13352,MethodCallMutator,handleUnknownToken,skip,1,0.11194724,<mask>(currentToken),"   }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {<mask>(currentToken);
            }
        }
    }"
1699,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13335,13352,MethodCallMutator,handleUnknownToken,next,2,0.10944497,<mask>(currentToken),"   }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {<mask>(currentToken);
            }
        }
    }"
1700,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13335,13352,MethodCallMutator,handleUnknownToken,unexpected,3,0.09372973,<mask>(currentToken),"   }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {<mask>(currentToken);
            }
        }
    }"
1701,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13335,13352,MethodCallMutator,handleUnknownToken,emit,4,0.04265847,<mask>(currentToken),"   }
        else if (matchingOpts.size() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {<mask>(currentToken);
            }
        }
    }"
1702,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,IdentifierMutator-Variable,currentToken,option,0,0.67416745,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1703,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,IdentifierMutator-Variable,currentToken,token,1,0.2180447,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1704,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,IdentifierMutator-Variable,currentToken,value,2,0.030639676,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1705,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,IdentifierMutator-Variable,currentToken,argument,3,0.008901038,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1706,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,IdentifierMutator-Variable,currentToken,opt,4,0.0057980674,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1707,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,FieldReferenceMutator,currentToken,option,0,0.67416745,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1708,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,FieldReferenceMutator,currentToken,token,1,0.2180447,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1709,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,FieldReferenceMutator,currentToken,value,2,0.030639676,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1710,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,FieldReferenceMutator,currentToken,argument,3,0.008901038,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1711,DefaultParser.java,handleLongOptionWithEqual,void handleLongOptionWithEqual(String token) throws ParseException,429,458,13354,13365,FieldReferenceMutator,currentToken,opt,4,0.0057980674,<mask>,"() > 1)
        {
            throw new AmbiguousOptionException(opt, matchingOpts);
        }
        else
        {
            Option option = options.getOption(matchingOpts.get(0));

            if (option.acceptsArg())
            {
                handleOption(option);
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
    }"
1712,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13778,13796,MethodCallMutator,stripLeadingHyphens,escape,0,0.52148205,Util.<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.<mask>(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-X"
1713,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13778,13796,MethodCallMutator,stripLeadingHyphens,format,1,0.1225892,Util.<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.<mask>(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-X"
1714,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13778,13796,MethodCallMutator,stripLeadingHyphens,quote,2,0.05022642,Util.<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.<mask>(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-X"
1715,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13778,13796,MethodCallMutator,stripLeadingHyphens,strip,3,0.031452782,Util.<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.<mask>(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-X"
1716,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13778,13796,MethodCallMutator,stripLeadingHyphens,split,4,0.030283056,Util.<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.<mask>(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-X"
1717,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13798,13802,IdentifierMutator-Variable,token,t,1,3.6452938E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1718,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13798,13802,IdentifierMutator-Variable,token,string,2,2.6610395E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1719,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13798,13802,IdentifierMutator-Variable,token,text,3,2.6322156E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1720,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,484,13798,13802,IdentifierMutator-Variable,token,word,4,1.5434407E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1721,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13827,13833,MethodCallMutator,indexOf,find,0,0.35676903,"t.<mask>('=')","void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.<mask>('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1722,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13827,13833,MethodCallMutator,indexOf,index,1,0.25190422,"t.<mask>('=')","void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.<mask>('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1723,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13827,13833,MethodCallMutator,indexOf,count,2,0.12421215,"t.<mask>('=')","void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.<mask>('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1724,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13827,13833,MethodCallMutator,indexOf,pos,3,0.08603334,"t.<mask>('=')","void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.<mask>('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1725,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13827,13833,MethodCallMutator,indexOf,split,4,0.07180297,"t.<mask>('=')","void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.<mask>('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1726,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13825,13825,IdentifierMutator-Variable,t,token,1,0.10547977,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos =<mask>.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1727,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13825,13825,IdentifierMutator-Variable,t,s,2,0.0013782604,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos =<mask>.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1728,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13825,13825,IdentifierMutator-Variable,t,text,3,0.0011378312,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos =<mask>.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1729,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13825,13825,IdentifierMutator-Variable,t,tokens,4,7.7644055E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos =<mask>.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1730,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13835,13837,IdentifierMutator-Literal,"'='",/-,0,0.16507211,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf(<mask>);

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1731,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13835,13837,IdentifierMutator-Literal,"'='",-,1,0.13204597,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf(<mask>);

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1732,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13835,13837,IdentifierMutator-Literal,"'='","-'",2,0.0941855,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf(<mask>);

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1733,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13835,13837,IdentifierMutator-Literal,"'='",-+,3,0.06688944,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf(<mask>);

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1734,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,486,13835,13837,IdentifierMutator-Literal,"'='",/,4,0.047740582,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf(<mask>);

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1735,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13864,13867,BinaryOperatorMutator,==,-,0,0.42905232,t.length() <mask> 1,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length()<mask>1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1736,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13864,13867,BinaryOperatorMutator,==,>,1,0.12235502,t.length() <mask> 1,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length()<mask>1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1737,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13864,13867,BinaryOperatorMutator,==,-,2,0.07813303,t.length() <mask> 1,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length()<mask>1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1738,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13864,13867,BinaryOperatorMutator,==,>,4,0.07151268,t.length() <mask> 1,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length()<mask>1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1739,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13856,13861,MethodCallMutator,length,width,2,1.11055415E-4,t.<mask>(),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.<mask>() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1740,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13856,13861,MethodCallMutator,length,split,3,3.592392E-5,t.<mask>(),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.<mask>() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1741,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13856,13861,MethodCallMutator,length,count,4,3.5379053E-5,t.<mask>(),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.<mask>() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1742,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13854,13854,IdentifierMutator-Variable,t,token,1,0.42566136,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (<mask>.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1743,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13854,13854,IdentifierMutator-Variable,t,pos,2,0.007944252,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (<mask>.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1744,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13854,13854,IdentifierMutator-Variable,t,tag,3,0.003873732,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (<mask>.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1745,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13868,13868,IdentifierMutator-Literal,1,pos,0,0.84620273,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() ==<mask>)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1746,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13868,13868,IdentifierMutator-Literal,1,0,1,0.11840951,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() ==<mask>)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1747,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13868,13868,IdentifierMutator-Literal,1,2,3,0.0024487565,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() ==<mask>)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1748,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,488,13868,13868,IdentifierMutator-Literal,1,position,4,0.0023541579,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() ==<mask>)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1749,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13923,13936,MethodCallMutator,hasShortOption,has,0,0.9211585,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1750,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13923,13936,MethodCallMutator,hasShortOption,get,1,0.0121022,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1751,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13923,13936,MethodCallMutator,hasShortOption,option,2,0.008563415,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1752,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13923,13936,MethodCallMutator,hasShortOption,remove,3,0.0045749317,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1753,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13923,13936,MethodCallMutator,hasShortOption,key,4,0.0036762499,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1754,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,IdentifierMutator-Variable,options,option,1,3.0250272E-5,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1755,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,IdentifierMutator-Variable,options,Options,2,9.176794E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1756,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,IdentifierMutator-Variable,options,tags,4,4.652028E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1757,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,FieldReferenceMutator,options,option,1,3.0250272E-5,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1758,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,FieldReferenceMutator,options,Options,2,9.176794E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1759,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13915,13921,FieldReferenceMutator,options,tags,4,4.652028E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1760,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13938,13938,IdentifierMutator-Variable,t,token,1,7.310807E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1761,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13938,13938,IdentifierMutator-Variable,t,T,2,4.950005E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1762,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13938,13938,IdentifierMutator-Variable,t,s,3,2.5476894E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1763,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,491,13938,13938,IdentifierMutator-Variable,t,p,4,1.3317422E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1764,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13972,13983,MethodCallMutator,handleOption,option,0,0.23571663,<mask>(options.getOption(t)),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
        "
1765,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13972,13983,MethodCallMutator,handleOption,short,1,0.063545085,<mask>(options.getOption(t)),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
        "
1766,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13972,13983,MethodCallMutator,handleOption,print,2,0.056588717,<mask>(options.getOption(t)),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
        "
1767,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13972,13983,MethodCallMutator,handleOption,parse,3,0.040114168,<mask>(options.getOption(t)),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
        "
1768,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13972,13983,MethodCallMutator,handleOption,help,4,0.026828047,<mask>(options.getOption(t)),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
        "
1769,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13993,14001,MethodCallMutator,getOption,get,0,0.9594943,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1770,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13993,14001,MethodCallMutator,getOption,option,1,0.019988025,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1771,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13993,14001,MethodCallMutator,getOption,options,2,0.002021981,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1772,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13993,14001,MethodCallMutator,getOption,has,3,0.0016656838,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1773,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13993,14001,MethodCallMutator,getOption,parse,4,0.0013537678,options.<mask>(t),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1774,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,IdentifierMutator-Variable,options,option,1,1.0052775E-5,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1775,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,IdentifierMutator-Variable,options,this,2,8.278088E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1776,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,IdentifierMutator-Variable,options,settings,3,6.665715E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1777,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,IdentifierMutator-Variable,options,Options,4,5.0501408E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1778,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,FieldReferenceMutator,options,option,1,1.0052775E-5,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1779,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,FieldReferenceMutator,options,this,2,8.278088E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1780,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,FieldReferenceMutator,options,settings,3,6.665715E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1781,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,13985,13991,FieldReferenceMutator,options,Options,4,5.0501408E-6,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1782,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,14003,14003,IdentifierMutator-Variable,t,token,1,0.0084682405,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1783,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,14003,14003,IdentifierMutator-Variable,t,s,2,0.0015351318,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1784,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,14003,14003,IdentifierMutator-Variable,t,T,3,0.0012113309,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1785,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,493,14003,14003,IdentifierMutator-Variable,t,p,4,5.95733E-4,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1786,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14069,14086,MethodCallMutator,handleUnknownToken,consume,0,0.12222818,<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {<mask>(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
         "
1787,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14069,14086,MethodCallMutator,handleUnknownToken,parse,1,0.07997609,<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {<mask>(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
         "
1788,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14069,14086,MethodCallMutator,handleUnknownToken,print,2,0.05048644,<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {<mask>(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
         "
1789,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14069,14086,MethodCallMutator,handleUnknownToken,comment,3,0.03946671,<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {<mask>(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
         "
1790,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14069,14086,MethodCallMutator,handleUnknownToken,push,4,0.030530859,<mask>(token),"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {<mask>(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
         "
1791,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14088,14092,IdentifierMutator-Variable,token,t,1,0.01635067,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1792,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14088,14092,IdentifierMutator-Variable,token,e,2,0.0015015075,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1793,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14088,14092,IdentifierMutator-Variable,token,pos,3,0.0013751787,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1794,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,497,14088,14092,IdentifierMutator-Variable,token,option,4,0.0012632788,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(<mask>);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1795,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14140,14143,BinaryOperatorMutator,==,!=,2,0.11780222,pos <mask> (-1)," handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos<mask>-1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1796,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14140,14143,BinaryOperatorMutator,==,>,3,0.06796395,pos <mask> (-1)," handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos<mask>-1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1797,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14140,14143,BinaryOperatorMutator,==,>,4,0.041567124,pos <mask> (-1)," handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos<mask>-1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long"
1798,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14137,14139,IdentifierMutator-Variable,pos,token,0,0.24213566,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (<mask> == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1799,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14137,14139,IdentifierMutator-Variable,pos,t,1,0.2271658,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (<mask> == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1800,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14137,14139,IdentifierMutator-Variable,pos,i,3,0.040318474,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (<mask> == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1801,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14137,14139,IdentifierMutator-Variable,pos,index,4,0.018461503,<mask>,"void handleShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (<mask> == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a"
1802,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14144,14144,UnaryOperatorMutator,-,+,1,0.0013432178,<mask>1,"ShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos ==<mask>1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1803,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14144,14144,UnaryOperatorMutator,-,$,3,0.0011169648,<mask>1,"ShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos ==<mask>1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1804,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14144,14144,UnaryOperatorMutator,-,(-,4,4.7720017E-4,<mask>1,"ShortAndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos ==<mask>1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix"
1805,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14145,14145,IdentifierMutator-Literal,1,2,1,0.024387356,<mask>,"AndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -<mask>)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-"
1806,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14145,14145,IdentifierMutator-Literal,1,x,2,0.005103144,<mask>,"AndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -<mask>)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-"
1807,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14145,14145,IdentifierMutator-Literal,1,3,3,0.0041688634,<mask>,"AndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -<mask>)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-"
1808,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,500,14145,14145,IdentifierMutator-Literal,1,d,4,0.0029231452,<mask>,"AndLongOption(String token) throws ParseException
    {
        String t = Util.stripLeadingHyphens(token);

        int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -<mask>)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-"
1809,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14224,14237,MethodCallMutator,hasShortOption,has,0,0.88887036,options.<mask>(t)," pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if ("
1810,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14224,14237,MethodCallMutator,hasShortOption,get,1,0.02331964,options.<mask>(t)," pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if ("
1811,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14224,14237,MethodCallMutator,hasShortOption,filter,2,0.005490746,options.<mask>(t)," pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if ("
1812,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14224,14237,MethodCallMutator,hasShortOption,includes,3,0.0042531686,options.<mask>(t)," pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if ("
1813,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14224,14237,MethodCallMutator,hasShortOption,option,4,0.0037303807,options.<mask>(t)," pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.<mask>(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if ("
1814,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,IdentifierMutator-Variable,options,option,1,8.039697E-5,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1815,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,IdentifierMutator-Variable,options,this,2,6.1047367E-6,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1816,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,IdentifierMutator-Variable,options,Options,3,5.3808494E-6,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1817,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,FieldReferenceMutator,options,option,1,8.039697E-5,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1818,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,FieldReferenceMutator,options,this,2,6.1047367E-6,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1819,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14216,14222,FieldReferenceMutator,options,Options,3,5.3808494E-6,<mask>,"  int pos = t.indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (<mask>.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

             "
1820,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14239,14239,IdentifierMutator-Variable,t,token,1,3.5435767E-4,<mask>,"indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !="
1821,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14239,14239,IdentifierMutator-Variable,t,T,2,3.3496966E-4,<mask>,"indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !="
1822,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14239,14239,IdentifierMutator-Variable,t,s,3,2.6640992E-4,<mask>,"indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !="
1823,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,503,14239,14239,IdentifierMutator-Variable,t,f,4,1.9637878E-4,<mask>,"indexOf('=');

        if (t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(<mask>))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !="
1824,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14273,14284,MethodCallMutator,handleOption,option,0,0.35835987,<mask>(options.getOption(t)),"t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
 "
1825,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14273,14284,MethodCallMutator,handleOption,Option,1,0.07542729,<mask>(options.getOption(t)),"t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
 "
1826,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14273,14284,MethodCallMutator,handleOption,short,2,0.06804481,<mask>(options.getOption(t)),"t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
 "
1827,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14273,14284,MethodCallMutator,handleOption,print,3,0.045307606,<mask>(options.getOption(t)),"t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
 "
1828,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14273,14284,MethodCallMutator,handleOption,return,4,0.026965233,<mask>(options.getOption(t)),"t.length() == 1)
        {
            // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {<mask>(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
 "
1829,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14294,14302,MethodCallMutator,getOption,get,0,0.89851403,options.<mask>(t),"        // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
      "
1830,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14294,14302,MethodCallMutator,getOption,option,1,0.055943314,options.<mask>(t),"        // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
      "
1831,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14294,14302,MethodCallMutator,getOption,short,2,0.0059268028,options.<mask>(t),"        // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
      "
1832,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14294,14302,MethodCallMutator,getOption,options,3,0.004431771,options.<mask>(t),"        // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
      "
1833,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14294,14302,MethodCallMutator,getOption,remove,4,0.0027256154,options.<mask>(t),"        // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.<mask>(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
      "
1834,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,IdentifierMutator-Variable,options,option,1,1.3631379E-5,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1835,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,IdentifierMutator-Variable,options,Options,2,1.302386E-5,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1836,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,IdentifierMutator-Variable,options,settings,4,9.04842E-6,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1837,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,FieldReferenceMutator,options,option,1,1.3631379E-5,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1838,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,FieldReferenceMutator,options,Options,2,1.302386E-5,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1839,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14286,14292,FieldReferenceMutator,options,settings,4,9.04842E-6,<mask>,"          // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(<mask>.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
   "
1840,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14304,14304,IdentifierMutator-Variable,t,s,1,6.927604E-4,<mask>,"     // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
        "
1841,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14304,14304,IdentifierMutator-Variable,t,T,2,6.0516136E-4,<mask>,"     // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
        "
1842,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14304,14304,IdentifierMutator-Variable,t,token,3,4.8250248E-4,<mask>,"     // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
        "
1843,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,505,14304,14304,IdentifierMutator-Variable,t,n,4,2.8023115E-4,<mask>,"     // -S
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(<mask>));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
        "
1844,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14344,14344,UnaryOperatorMutator,!,...,2,0.009543875,<mask>options.getMatchingOptions(t).isEmpty(),"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (<mask>options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
       "
1845,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14344,14344,UnaryOperatorMutator,!,?,3,0.008244921,<mask>options.getMatchingOptions(t).isEmpty(),"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (<mask>options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
       "
1846,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14344,14344,UnaryOperatorMutator,!,!!,4,0.008153778,<mask>options.getMatchingOptions(t).isEmpty(),"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (<mask>options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
       "
1847,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14375,14381,MethodCallMutator,isEmpty,size,0,0.56523156,options.getMatchingOptions(t).<mask>(),"   {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).<mask>())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                  "
1848,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14375,14381,MethodCallMutator,isEmpty,empty,1,0.09134379,options.getMatchingOptions(t).<mask>(),"   {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).<mask>())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                  "
1849,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14375,14381,MethodCallMutator,isEmpty,next,2,0.07002556,options.getMatchingOptions(t).<mask>(),"   {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).<mask>())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                  "
1850,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14375,14381,MethodCallMutator,isEmpty,get,3,0.02402116,options.getMatchingOptions(t).<mask>(),"   {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).<mask>())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                  "
1851,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14375,14381,MethodCallMutator,isEmpty,any,4,0.012579786,options.getMatchingOptions(t).<mask>(),"   {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).<mask>())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                  "
1852,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14353,14370,MethodCallMutator,getMatchingOptions,get,0,0.66041976,options.<mask>(t),"          {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.<mask>(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
             "
1853,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14353,14370,MethodCallMutator,getMatchingOptions,option,1,0.25278345,options.<mask>(t),"          {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.<mask>(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
             "
1854,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14353,14370,MethodCallMutator,getMatchingOptions,options,2,0.044764783,options.<mask>(t),"          {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.<mask>(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
             "
1855,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14353,14370,MethodCallMutator,getMatchingOptions,section,3,0.006353672,options.<mask>(t),"          {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.<mask>(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
             "
1856,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14353,14370,MethodCallMutator,getMatchingOptions,opt,4,0.0038980374,options.<mask>(t),"          {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.<mask>(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
             "
1857,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,IdentifierMutator-Variable,options,this,1,0.0032262343,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1858,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,IdentifierMutator-Variable,options,config,2,0.0024693192,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1859,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,IdentifierMutator-Variable,options,parser,3,0.0024256771,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1860,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,IdentifierMutator-Variable,options,option,4,0.0023709263,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1861,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,FieldReferenceMutator,options,this,1,0.0032262343,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1862,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,FieldReferenceMutator,options,config,2,0.0024693192,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1863,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,FieldReferenceMutator,options,parser,3,0.0024256771,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1864,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14345,14351,FieldReferenceMutator,options,option,4,0.0023709263,<mask>,"            {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!<mask>.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
        "
1865,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14372,14372,IdentifierMutator-Variable,t,token,1,0.095066026,<mask>,"     {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(<mask>).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
               "
1866,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14372,14372,IdentifierMutator-Variable,t,true,2,0.011319205,<mask>,"     {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(<mask>).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
               "
1867,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14372,14372,IdentifierMutator-Variable,t,c,3,0.004493808,<mask>,"     {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(<mask>).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
               "
1868,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,507,14372,14372,IdentifierMutator-Variable,t,T,4,0.0044024535,<mask>,"     {
                handleOption(options.getOption(t));
            }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(<mask>).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
               "
1869,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14444,14471,MethodCallMutator,handleLongOptionWithoutEqual,help,0,0.11520106,<mask>(token),"    }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l<mask>(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
            "
1870,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14444,14471,MethodCallMutator,handleLongOptionWithoutEqual,handle,1,0.096582636,<mask>(token),"    }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l<mask>(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
            "
1871,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14444,14471,MethodCallMutator,handleLongOptionWithoutEqual,usage,2,0.057474516,<mask>(token),"    }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l<mask>(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
            "
1872,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14444,14471,MethodCallMutator,handleLongOptionWithoutEqual,print,3,0.05019149,<mask>(token),"    }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l<mask>(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
            "
1873,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14444,14471,MethodCallMutator,handleLongOptionWithoutEqual,exit,4,0.046681646,<mask>(token),"    }
            else
            {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l<mask>(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
            "
1874,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14473,14477,IdentifierMutator-Variable,token,t,0,0.5731078,<mask>,"       {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(<mask>);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
              "
1875,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14473,14477,IdentifierMutator-Variable,token,options,1,0.13989215,<mask>,"       {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(<mask>);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
              "
1876,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14473,14477,IdentifierMutator-Variable,token,option,2,0.11609152,<mask>,"       {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(<mask>);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
              "
1877,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14473,14477,IdentifierMutator-Variable,token,opt,3,0.031434022,<mask>,"       {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(<mask>);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
              "
1878,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,510,14473,14477,IdentifierMutator-Variable,token,true,4,0.016349021,<mask>,"       {
                handleUnknownToken(token);
            }
        }
        else if (pos == -1)
        {
            // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(<mask>);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
              "
1879,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14608,14620,MethodCallMutator,getLongPrefix,option,0,0.3995238,<mask>(t)," // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt =<mask>(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                 "
1880,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14608,14620,MethodCallMutator,getLongPrefix,opt,1,0.19768244,<mask>(t)," // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt =<mask>(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                 "
1881,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14608,14620,MethodCallMutator,getLongPrefix,trim,2,0.04249205,<mask>(t)," // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt =<mask>(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                 "
1882,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14608,14620,MethodCallMutator,getLongPrefix,Option,3,0.019781623,<mask>(t)," // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt =<mask>(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                 "
1883,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14608,14620,MethodCallMutator,getLongPrefix,help,4,0.0143840425,<mask>(t)," // no equal sign found (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt =<mask>(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                 "
1884,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14622,14622,IdentifierMutator-Variable,t,token,1,0.4262997,<mask>," (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(<mask>);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                   "
1885,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14622,14622,IdentifierMutator-Variable,t,option,2,0.009936949,<mask>," (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(<mask>);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                   "
1886,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14622,14622,IdentifierMutator-Variable,t,opt,3,0.008005371,<mask>," (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(<mask>);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                   "
1887,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,515,14622,14622,IdentifierMutator-Variable,t,options,4,0.0064458647,<mask>," (-xxx)
            if (options.hasShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(<mask>);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                   "
1888,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14658,14661,BinaryOperatorMutator,&&,&,2,0.0057209027,(opt != null) <mask> options.getOption(opt).acceptsArg(),"t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null<mask>options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
    "
1889,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14658,14661,BinaryOperatorMutator,&&,AND,3,0.001523468,(opt != null) <mask> options.getOption(opt).acceptsArg(),"t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null<mask>options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
    "
1890,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14658,14661,BinaryOperatorMutator,&&,.,4,9.491E-4,(opt != null) <mask> options.getOption(opt).acceptsArg(),"t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null<mask>options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
    "
1891,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14650,14653,BinaryOperatorMutator,!=,==,1,0.007816012,opt <mask> null,"Option(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt<mask>null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
  "
1892,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14650,14653,BinaryOperatorMutator,!=,=,2,0.0015328095,opt <mask> null,"Option(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt<mask>null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
  "
1893,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14650,14653,BinaryOperatorMutator,!=,.,3,3.6658894E-4,opt <mask> null,"Option(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt<mask>null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
  "
1894,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14650,14653,BinaryOperatorMutator,!=,!,4,3.288659E-4,opt <mask> null,"Option(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt<mask>null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
  "
1895,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14647,14649,IdentifierMutator-Variable,opt,option,1,0.0017286723,<mask>,"ShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (<mask> != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
 "
1896,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14647,14649,IdentifierMutator-Variable,opt,op,2,3.7065585E-4,<mask>,"ShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (<mask> != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
 "
1897,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14647,14649,IdentifierMutator-Variable,opt,Opt,3,2.8179458E-4,<mask>,"ShortOption(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (<mask> != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
 "
1898,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14654,14657,IdentifierMutator-Literal,null,"""""",1,4.7007494E-4,<mask>,"(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !=<mask> && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
   "
1899,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14654,14657,IdentifierMutator-Literal,null,NULL,2,2.2942157E-4,<mask>,"(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !=<mask> && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
   "
1900,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14654,14657,IdentifierMutator-Literal,null,t,3,1.396279E-4,<mask>,"(t))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt !=<mask> && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
   "
1901,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14685,14694,MethodCallMutator,acceptsArg,has,0,0.12083819,options.getOption(opt).<mask>(),"       {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).<mask>())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
              "
1902,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14685,14694,MethodCallMutator,acceptsArg,length,1,0.10742898,options.getOption(opt).<mask>(),"       {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).<mask>())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
              "
1903,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14685,14694,MethodCallMutator,acceptsArg,get,2,0.093044765,options.getOption(opt).<mask>(),"       {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).<mask>())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
              "
1904,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14685,14694,MethodCallMutator,acceptsArg,available,3,0.0510392,options.getOption(opt).<mask>(),"       {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).<mask>())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
              "
1905,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14685,14694,MethodCallMutator,acceptsArg,empty,4,0.046120718,options.getOption(opt).<mask>(),"       {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).<mask>())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
              "
1906,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14670,14678,MethodCallMutator,getOption,get,0,0.9668452,options.<mask>(opt),"            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.<mask>(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
        "
1907,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14670,14678,MethodCallMutator,getOption,option,1,0.01847009,options.<mask>(opt),"            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.<mask>(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
        "
1908,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14670,14678,MethodCallMutator,getOption,has,2,0.0021994049,options.<mask>(opt),"            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.<mask>(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
        "
1909,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14670,14678,MethodCallMutator,getOption,key,3,7.788466E-4,options.<mask>(opt),"            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.<mask>(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
        "
1910,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14670,14678,MethodCallMutator,getOption,find,4,7.7079976E-4,options.<mask>(opt),"            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.<mask>(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
        "
1911,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,IdentifierMutator-Variable,options,tokens,2,1.9691545E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1912,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,IdentifierMutator-Variable,options,extensions,3,1.7117303E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1913,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,IdentifierMutator-Variable,options,commands,4,1.6922028E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1914,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,FieldReferenceMutator,options,tokens,2,1.9691545E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1915,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,FieldReferenceMutator,options,extensions,3,1.7117303E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1916,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14662,14668,FieldReferenceMutator,options,commands,4,1.6922028E-4,<mask>,"))
            {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null &&<mask>.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
     "
1917,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14680,14682,IdentifierMutator-Variable,opt,option,1,3.377829E-4,<mask>,"         {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(<mask>).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
          "
1918,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14680,14682,IdentifierMutator-Variable,opt,op,2,1.9790647E-4,<mask>,"         {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(<mask>).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
          "
1919,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14680,14682,IdentifierMutator-Variable,opt,Opt,3,4.7255646E-5,<mask>,"         {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(<mask>).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
          "
1920,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,517,14680,14682,IdentifierMutator-Variable,opt,t,4,3.2013093E-5,<mask>,"         {
                handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(<mask>).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
          "
1921,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14737,14748,MethodCallMutator,handleOption,handle,0,0.1556904,<mask>(options.getOption(opt)),"   handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {<mask>(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                  "
1922,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14737,14748,MethodCallMutator,handleOption,process,1,0.09434936,<mask>(options.getOption(opt)),"   handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {<mask>(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                  "
1923,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14737,14748,MethodCallMutator,handleOption,parse,2,0.057021104,<mask>(options.getOption(opt)),"   handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {<mask>(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                  "
1924,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14737,14748,MethodCallMutator,handleOption,print,3,0.047593646,<mask>(options.getOption(opt)),"   handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {<mask>(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                  "
1925,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14737,14748,MethodCallMutator,handleOption,handler,4,0.02074097,<mask>(options.getOption(opt)),"   handleOption(options.getOption(t));
            }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {<mask>(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                  "
1926,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14758,14766,MethodCallMutator,getOption,get,0,0.9821154,options.<mask>(opt),"
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.<mask>(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null"
1927,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14758,14766,MethodCallMutator,getOption,option,1,0.0047298945,options.<mask>(opt),"
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.<mask>(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null"
1928,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14758,14766,MethodCallMutator,getOption,parse,2,0.0018348513,options.<mask>(opt),"
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.<mask>(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null"
1929,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14758,14766,MethodCallMutator,getOption,remove,3,0.0010335607,options.<mask>(opt),"
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.<mask>(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null"
1930,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14758,14766,MethodCallMutator,getOption,add,4,9.985432E-4,options.<mask>(opt),"
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.<mask>(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null"
1931,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,IdentifierMutator-Variable,options,option,1,2.8409766E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1932,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,IdentifierMutator-Variable,options,Options,2,2.8069036E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1933,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,IdentifierMutator-Variable,options,this,4,1.2499397E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1934,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,FieldReferenceMutator,options,option,1,2.8409766E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1935,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,FieldReferenceMutator,options,Options,2,2.8069036E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1936,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14750,14756,FieldReferenceMutator,options,this,4,1.2499397E-5,<mask>,"  }
            else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(<mask>.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    current"
1937,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14768,14770,IdentifierMutator-Variable,opt,option,1,2.9470254E-4,<mask>,"          else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(<mask>));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
"
1938,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14768,14770,IdentifierMutator-Variable,opt,op,2,1.0723719E-4,<mask>,"          else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(<mask>));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
"
1939,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,519,14768,14770,IdentifierMutator-Variable,opt,Opt,3,5.0438724E-5,<mask>,"          else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(<mask>));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
"
1940,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14809,14829,MethodCallMutator,addValueForProcessing,add,0,0.29700735,currentOption.<mask>(t.substring(opt.length())),"            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.<mask>(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
            "
1941,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14809,14829,MethodCallMutator,addValueForProcessing,append,1,0.17262572,currentOption.<mask>(t.substring(opt.length())),"            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.<mask>(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
            "
1942,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14809,14829,MethodCallMutator,addValueForProcessing,set,2,0.13143222,currentOption.<mask>(t.substring(opt.length())),"            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.<mask>(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
            "
1943,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14809,14829,MethodCallMutator,addValueForProcessing,remove,3,0.034026787,currentOption.<mask>(t.substring(opt.length())),"            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.<mask>(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
            "
1944,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14809,14829,MethodCallMutator,addValueForProcessing,delete,4,0.016424773,currentOption.<mask>(t.substring(opt.length())),"            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.<mask>(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
            "
1945,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,IdentifierMutator-Variable,currentOption,option,0,0.34984097,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1946,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,IdentifierMutator-Variable,currentOption,Option,1,0.13842238,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1947,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,IdentifierMutator-Variable,currentOption,option,2,0.0737879,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1948,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,IdentifierMutator-Variable,currentOption,token,3,0.050155073,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1949,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,IdentifierMutator-Variable,currentOption,token,4,0.046132986,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1950,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,FieldReferenceMutator,currentOption,option,0,0.34984097,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1951,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,FieldReferenceMutator,currentOption,Option,1,0.13842238,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1952,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,FieldReferenceMutator,currentOption,option,2,0.0737879,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1953,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,FieldReferenceMutator,currentOption,token,3,0.050155073,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1954,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14795,14807,FieldReferenceMutator,currentOption,token,4,0.046132986,<mask>,"        else if (!options.getMatchingOptions(t).isEmpty())
            {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));<mask>.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
      "
1955,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14833,14841,MethodCallMutator,substring,slice,0,0.4188724,t.<mask>(opt.length()),"    {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.<mask>(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
"
1956,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14833,14841,MethodCallMutator,substring,ring,1,0.1250662,t.<mask>(opt.length()),"    {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.<mask>(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
"
1957,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14833,14841,MethodCallMutator,substring,get,2,0.108374186,t.<mask>(opt.length()),"    {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.<mask>(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
"
1958,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14833,14841,MethodCallMutator,substring,abs,3,0.048547223,t.<mask>(opt.length()),"    {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.<mask>(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
"
1959,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14833,14841,MethodCallMutator,substring,repeat,4,0.047980808,t.<mask>(opt.length()),"    {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.<mask>(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
"
1960,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14831,14831,IdentifierMutator-Variable,t,token,1,0.031697642,<mask>,"      {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(<mask>.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
              "
1961,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14831,14831,IdentifierMutator-Variable,t,opt,2,0.01605127,<mask>,"      {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(<mask>.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
              "
1962,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14831,14831,IdentifierMutator-Variable,t,option,3,0.0037295895,<mask>,"      {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(<mask>.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
              "
1963,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14831,14831,IdentifierMutator-Variable,t,s,4,0.0033263683,<mask>,"      {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(<mask>.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
              "
1964,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14847,14852,MethodCallMutator,length,size,1,5.1783386E-4,opt.<mask>(),"                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.<mask>()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
    "
1965,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14847,14852,MethodCallMutator,length,width,2,2.5104894E-4,opt.<mask>(),"                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.<mask>()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
    "
1966,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14847,14852,MethodCallMutator,length,value,3,1.0540157E-4,opt.<mask>(),"                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.<mask>()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
    "
1967,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14847,14852,MethodCallMutator,length,len,4,1.0321182E-4,opt.<mask>(),"                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.<mask>()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
    "
1968,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14843,14845,IdentifierMutator-Variable,opt,t,1,0.003814903,<mask>," {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(<mask>.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
  "
1969,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14843,14845,IdentifierMutator-Variable,opt,option,2,0.0025707535,<mask>," {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(<mask>.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
  "
1970,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14843,14845,IdentifierMutator-Variable,opt,Opt,3,0.0024501518,<mask>," {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(<mask>.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
  "
1971,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,520,14843,14845,IdentifierMutator-Variable,opt,op,4,0.0012857415,<mask>," {
                // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(<mask>.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
  "
1972,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14892,14892,AssignmentMutator,currentOption=null,!,0,0.57372147,currentOption <mask>= null,"             handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption<mask>= null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1973,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14892,14892,AssignmentMutator,currentOption=null,|,1,0.14335884,currentOption <mask>= null,"             handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption<mask>= null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1974,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14892,14892,AssignmentMutator,currentOption=null,^,2,0.060202118,currentOption <mask>= null,"             handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption<mask>= null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1975,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14892,14892,AssignmentMutator,currentOption=null,!,3,0.05326567,currentOption <mask>= null,"             handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption<mask>= null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1976,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14892,14892,AssignmentMutator,currentOption=null,||,4,0.04840163,currentOption <mask>= null,"             handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption<mask>= null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1977,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,IdentifierMutator-Variable,currentOption,option,0,0.4162848,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1978,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,IdentifierMutator-Variable,currentOption,token,1,0.07712989,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1979,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,IdentifierMutator-Variable,currentOption,option,2,0.05529768,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1980,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,IdentifierMutator-Variable,currentOption,Option,3,0.040975176,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1981,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,IdentifierMutator-Variable,currentOption,token,4,0.04002606,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1982,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,FieldReferenceMutator,currentOption,option,0,0.4162848,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1983,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,FieldReferenceMutator,currentOption,token,1,0.07712989,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1984,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,FieldReferenceMutator,currentOption,option,2,0.05529768,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1985,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,FieldReferenceMutator,currentOption,Option,3,0.040975176,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1986,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14879,14891,FieldReferenceMutator,currentOption,token,4,0.04002606,<mask>,"             // -L or -l
                handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));<mask> = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
           "
1987,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14895,14898,IdentifierMutator-Literal,null,nil,1,0.003467505,<mask>,"            handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption =<mask>;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
             "
1988,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14895,14898,IdentifierMutator-Literal,null,false,2,5.2165706E-4,<mask>,"            handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption =<mask>;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
             "
1989,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14895,14898,IdentifierMutator-Literal,null,opt,3,3.957544E-4,<mask>,"            handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption =<mask>;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
             "
1990,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,521,14895,14898,IdentifierMutator-Literal,null,t,4,3.7139165E-4,<mask>,"            handleLongOptionWithoutEqual(token);
            }
            else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption =<mask>;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
             "
1991,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14944,14957,MethodCallMutator,isJavaProperty,empty,0,0.20539205,<mask>(t),"        else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (<mask>(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                  "
1992,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14944,14957,MethodCallMutator,isJavaProperty,flag,1,0.09840702,<mask>(t),"        else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (<mask>(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                  "
1993,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14944,14957,MethodCallMutator,isJavaProperty,switch,2,0.06668911,<mask>(t),"        else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (<mask>(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                  "
1994,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14944,14957,MethodCallMutator,isJavaProperty,optional,3,0.0398932,<mask>(t),"        else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (<mask>(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                  "
1995,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14944,14957,MethodCallMutator,isJavaProperty,null,4,0.015367704,<mask>(t),"        else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (<mask>(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                  "
1996,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14959,14959,IdentifierMutator-Variable,t,option,1,0.18098655,<mask>,"    else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(<mask>))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handle"
1997,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14959,14959,IdentifierMutator-Variable,t,opt,2,0.03906039,<mask>,"    else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(<mask>))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handle"
1998,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14959,14959,IdentifierMutator-Variable,t,type,3,0.006090874,<mask>,"    else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(<mask>))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handle"
1999,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,523,14959,14959,IdentifierMutator-Variable,t,token,4,0.005570011,<mask>,"    else
            {
                // look for a long prefix (-Xmx512m)
                String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(<mask>))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handle"
2000,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15038,15049,MethodCallMutator,handleOption,handle,0,0.35512507,"<mask>(options.getOption(t.substring(0, 1)))","              String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)<mask>(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
   "
2001,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15038,15049,MethodCallMutator,handleOption,process,1,0.08720402,"<mask>(options.getOption(t.substring(0, 1)))","              String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)<mask>(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
   "
2002,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15038,15049,MethodCallMutator,handleOption,parse,2,0.04451317,"<mask>(options.getOption(t.substring(0, 1)))","              String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)<mask>(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
   "
2003,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15038,15049,MethodCallMutator,handleOption,handler,3,0.0294458,"<mask>(options.getOption(t.substring(0, 1)))","              String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)<mask>(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
   "
2004,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15038,15049,MethodCallMutator,handleOption,option,4,0.027792953,"<mask>(options.getOption(t.substring(0, 1)))","              String opt = getLongPrefix(t);

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)<mask>(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
   "
2005,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15059,15067,MethodCallMutator,getOption,get,0,0.9949634,"options.<mask>(t.substring(0, 1))","               if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.<mask>(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
        "
2006,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15059,15067,MethodCallMutator,getOption,option,1,9.6200965E-4,"options.<mask>(t.substring(0, 1))","               if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.<mask>(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
        "
2007,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15059,15067,MethodCallMutator,getOption,parse,2,4.140094E-4,"options.<mask>(t.substring(0, 1))","               if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.<mask>(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
        "
2008,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15059,15067,MethodCallMutator,getOption,find,3,3.1987223E-4,"options.<mask>(t.substring(0, 1))","               if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.<mask>(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
        "
2009,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15059,15067,MethodCallMutator,getOption,remove,4,3.0890515E-4,"options.<mask>(t.substring(0, 1))","               if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.<mask>(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
        "
2010,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,IdentifierMutator-Variable,options,this,1,1.6274293E-4,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2011,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,IdentifierMutator-Variable,options,Options,2,1.599603E-4,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2012,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,IdentifierMutator-Variable,options,settings,3,7.405689E-5,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2013,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,IdentifierMutator-Variable,options,types,4,6.2782616E-5,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2014,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,FieldReferenceMutator,options,this,1,1.6274293E-4,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2015,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,FieldReferenceMutator,options,Options,2,1.599603E-4,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2016,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,FieldReferenceMutator,options,settings,3,7.405689E-5,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2017,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15051,15057,FieldReferenceMutator,options,types,4,6.2782616E-5,<mask>,"

                if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(<mask>.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
     "
2018,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15071,15079,MethodCallMutator,substring,slice,0,0.8699914,"t.<mask>(0, 1)","          if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.<mask>(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal"
2019,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15071,15079,MethodCallMutator,substring,sub,1,0.023179667,"t.<mask>(0, 1)","          if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.<mask>(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal"
2020,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15071,15079,MethodCallMutator,substring,split,2,0.016830292,"t.<mask>(0, 1)","          if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.<mask>(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal"
2021,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15071,15079,MethodCallMutator,substring,ring,3,0.013847681,"t.<mask>(0, 1)","          if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.<mask>(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal"
2022,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15071,15079,MethodCallMutator,substring,replace,4,0.008827004,"t.<mask>(0, 1)","          if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.<mask>(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal"
2023,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15069,15069,IdentifierMutator-Variable,t,T,1,7.8696647E-4,<mask>,"            if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(<mask>.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
          "
2024,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15069,15069,IdentifierMutator-Variable,t,token,2,4.091061E-4,<mask>,"            if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(<mask>.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
          "
2025,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15069,15069,IdentifierMutator-Variable,t,s,4,2.1039345E-4,<mask>,"            if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(<mask>.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
          "
2026,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15081,15081,IdentifierMutator-Literal,0,1,1,0.04723469,<mask>,"       if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(<mask>, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found"
2027,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15081,15081,IdentifierMutator-Literal,0,2,2,0.014447784,<mask>,"       if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(<mask>, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found"
2028,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15081,15081,IdentifierMutator-Literal,0,6,3,0.0012081935,<mask>,"       if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(<mask>, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found"
2029,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15084,15084,IdentifierMutator-Literal,1,2,2,0.013367857,<mask>,"     if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0,<mask>)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx"
2030,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15084,15084,IdentifierMutator-Literal,1,0,3,0.007731551,<mask>,"     if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0,<mask>)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx"
2031,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,526,15084,15084,IdentifierMutator-Literal,1,2,4,0.0024630749,<mask>,"     if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0,<mask>)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx"
2032,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15124,15144,MethodCallMutator,addValueForProcessing,set,0,0.26454744,currentOption.<mask>(t.substring(1)),"            {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.<mask>(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
 "
2033,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15124,15144,MethodCallMutator,addValueForProcessing,add,1,0.14310487,currentOption.<mask>(t.substring(1)),"            {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.<mask>(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
 "
2034,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15124,15144,MethodCallMutator,addValueForProcessing,append,2,0.11118712,currentOption.<mask>(t.substring(1)),"            {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.<mask>(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
 "
2035,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15124,15144,MethodCallMutator,addValueForProcessing,value,3,0.061376195,currentOption.<mask>(t.substring(1)),"            {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.<mask>(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
 "
2036,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15124,15144,MethodCallMutator,addValueForProcessing,remove,4,0.026110742,currentOption.<mask>(t.substring(1)),"            {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.<mask>(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
 "
2037,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,IdentifierMutator-Variable,currentOption,option,0,0.45388028,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2038,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,IdentifierMutator-Variable,currentOption,token,1,0.11570939,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2039,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,IdentifierMutator-Variable,currentOption,Option,2,0.040690936,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2040,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,IdentifierMutator-Variable,currentOption,this,3,0.035910003,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2041,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,IdentifierMutator-Variable,currentOption,token,4,0.028367842,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2042,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,FieldReferenceMutator,currentOption,option,0,0.45388028,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2043,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,FieldReferenceMutator,currentOption,token,1,0.11570939,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2044,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,FieldReferenceMutator,currentOption,Option,2,0.040690936,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2045,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,FieldReferenceMutator,currentOption,this,3,0.035910003,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2046,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15110,15122,FieldReferenceMutator,currentOption,token,4,0.028367842,<mask>,"  if (opt != null && options.getOption(opt).acceptsArg())
                {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));<mask>.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring("
2047,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15148,15156,MethodCallMutator,substring,slice,0,0.28120807,t.<mask>(1),"    {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.<mask>(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
      "
2048,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15148,15156,MethodCallMutator,substring,group,1,0.12867008,t.<mask>(1),"    {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.<mask>(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
      "
2049,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15148,15156,MethodCallMutator,substring,get,2,0.09596518,t.<mask>(1),"    {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.<mask>(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
      "
2050,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15148,15156,MethodCallMutator,substring,sub,3,0.06596527,t.<mask>(1),"    {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.<mask>(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
      "
2051,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15148,15156,MethodCallMutator,substring,string,4,0.042542886,t.<mask>(1),"    {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.<mask>(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
      "
2052,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15146,15146,IdentifierMutator-Variable,t,token,1,8.699541E-4,<mask>,"      {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(<mask>.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
   "
2053,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15146,15146,IdentifierMutator-Variable,t,s,2,4.0323043E-4,<mask>,"      {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(<mask>.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
   "
2054,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15146,15146,IdentifierMutator-Variable,t,p,4,3.292433E-4,<mask>,"      {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(<mask>.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
   "
2055,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15158,15158,IdentifierMutator-Literal,1,2,1,0.019564379,<mask>," {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(<mask>));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
        "
2056,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15158,15158,IdentifierMutator-Literal,1,0,2,0.0013874525,<mask>," {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(<mask>));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
        "
2057,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,527,15158,15158,IdentifierMutator-Literal,1,3,3,7.660363E-4,<mask>," {
                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(<mask>));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
        "
2058,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15196,15196,AssignmentMutator,currentOption=null,!,0,0.5445261,currentOption <mask>= null,"options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption<mask>= null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2059,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15196,15196,AssignmentMutator,currentOption=null,||,1,0.11584677,currentOption <mask>= null,"options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption<mask>= null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2060,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15196,15196,AssignmentMutator,currentOption=null,|,2,0.094152585,currentOption <mask>= null,"options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption<mask>= null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2061,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15196,15196,AssignmentMutator,currentOption=null,^,3,0.058755115,currentOption <mask>= null,"options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption<mask>= null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2062,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15196,15196,AssignmentMutator,currentOption=null,!,4,0.056529034,currentOption <mask>= null,"options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption<mask>= null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2063,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,IdentifierMutator-Variable,currentOption,option,0,0.36692744,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2064,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,IdentifierMutator-Variable,currentOption,token,1,0.1469834,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2065,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,IdentifierMutator-Variable,currentOption,token,2,0.07725127,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2066,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,IdentifierMutator-Variable,currentOption,options,3,0.057001296,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2067,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,IdentifierMutator-Variable,currentOption,option,4,0.052654374,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2068,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,FieldReferenceMutator,currentOption,option,0,0.36692744,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2069,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,FieldReferenceMutator,currentOption,token,1,0.1469834,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2070,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,FieldReferenceMutator,currentOption,token,2,0.07725127,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2071,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,FieldReferenceMutator,currentOption,options,3,0.057001296,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2072,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15183,15195,FieldReferenceMutator,currentOption,option,4,0.052654374,<mask>,"                    handleOption(options.getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));<mask> = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

       "
2073,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15199,15202,IdentifierMutator-Literal,null,nil,1,0.005740828,<mask>,".getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption =<mask>;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

         "
2074,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15199,15202,IdentifierMutator-Literal,null,t,2,0.0033495086,<mask>,".getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption =<mask>;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

         "
2075,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15199,15202,IdentifierMutator-Literal,null,undefined,3,9.6428033E-4,<mask>,".getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption =<mask>;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

         "
2076,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,528,15199,15202,IdentifierMutator-Literal,null,false,4,8.61403E-4,<mask>,".getOption(opt));
                    currentOption.addValueForProcessing(t.substring(opt.length()));
                    currentOption = null;
                }
                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption =<mask>;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

         "
2077,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15323,15347,MethodCallMutator,handleConcatenatedOptions,1,0,0.49299258,<mask>(token),"                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V<mask>(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
             "
2078,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15323,15347,MethodCallMutator,handleConcatenatedOptions,3,1,0.2581514,<mask>(token),"                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V<mask>(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
             "
2079,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15323,15347,MethodCallMutator,handleConcatenatedOptions,2,2,0.069135875,<mask>(token),"                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V<mask>(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
             "
2080,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15323,15347,MethodCallMutator,handleConcatenatedOptions,4,3,0.04924031,<mask>(token),"                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V<mask>(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
             "
2081,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15323,15347,MethodCallMutator,handleConcatenatedOptions,6,4,0.0074391463,<mask>(token),"                else if (isJavaProperty(t))
                {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V<mask>(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
             "
2082,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15349,15353,IdentifierMutator-Variable,token,options,0,0.96343505,<mask>,"              {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(<mask>);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
               "
2083,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15349,15353,IdentifierMutator-Variable,token,option,1,0.017825114,<mask>,"              {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(<mask>);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
               "
2084,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15349,15353,IdentifierMutator-Variable,token,this,2,0.0033785999,<mask>,"              {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(<mask>);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
               "
2085,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15349,15353,IdentifierMutator-Variable,token,t,3,0.0016292967,<mask>,"              {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(<mask>);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
               "
2086,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,533,15349,15353,IdentifierMutator-Variable,token,ts,4,0.0011807905,<mask>,"              {
                    // -SV1 (-Dflag)
                    handleOption(options.getOption(t.substring(0, 1)));
                    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(<mask>);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
               "
2087,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15492,15500,MethodCallMutator,substring,string,0,0.7713169,"t.<mask>(0, pos)","    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.<mask>(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }"
2088,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15492,15500,MethodCallMutator,substring,ring,1,0.16428049,"t.<mask>(0, pos)","    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.<mask>(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }"
2089,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15492,15500,MethodCallMutator,substring,slice,2,0.030032676,"t.<mask>(0, pos)","    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.<mask>(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }"
2090,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15492,15500,MethodCallMutator,substring,group,3,0.0058638584,"t.<mask>(0, pos)","    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.<mask>(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }"
2091,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15492,15500,MethodCallMutator,substring,get,4,0.0034607754,"t.<mask>(0, pos)","    currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.<mask>(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }"
2092,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15490,15490,IdentifierMutator-Variable,t,s,1,3.1413982E-4,<mask>,"      currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt =<mask>.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
             "
2093,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15490,15490,IdentifierMutator-Variable,t,r,2,1.8771943E-4,<mask>,"      currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt =<mask>.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
             "
2094,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15490,15490,IdentifierMutator-Variable,t,m,3,6.0489496E-5,<mask>,"      currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt =<mask>.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
             "
2095,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15490,15490,IdentifierMutator-Variable,t,p,4,5.6338282E-5,<mask>,"      currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt =<mask>.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
             "
2096,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15502,15502,IdentifierMutator-Literal,0,1,1,0.28582922,<mask>," currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(<mask>, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
 "
2097,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15502,15502,IdentifierMutator-Literal,0,2,2,0.054587267,<mask>," currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(<mask>, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
 "
2098,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15502,15502,IdentifierMutator-Literal,0,6,3,0.00881087,<mask>," currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(<mask>, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
 "
2099,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15502,15502,IdentifierMutator-Literal,0,3,4,0.0048001735,<mask>," currentOption.addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(<mask>, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
 "
2100,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15505,15507,IdentifierMutator-Variable,pos,1,2,0.0010758976,<mask>,".addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0,<mask>);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
   "
2101,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15505,15507,IdentifierMutator-Variable,pos,len,3,2.9309542E-4,<mask>,".addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0,<mask>);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
   "
2102,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,540,15505,15507,IdentifierMutator-Variable,pos,2,4,2.7988016E-4,<mask>,".addValueForProcessing(t.substring(1));
                    currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0,<mask>);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
   "
2103,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15540,15548,MethodCallMutator,substring,string,0,0.6066108,t.<mask>(pos + 1),"                currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.<mask>(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
      "
2104,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15540,15548,MethodCallMutator,substring,ring,1,0.20499735,t.<mask>(pos + 1),"                currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.<mask>(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
      "
2105,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15540,15548,MethodCallMutator,substring,group,2,0.043188583,t.<mask>(pos + 1),"                currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.<mask>(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
      "
2106,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15540,15548,MethodCallMutator,substring,slice,3,0.021497462,t.<mask>(pos + 1),"                currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.<mask>(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
      "
2107,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15540,15548,MethodCallMutator,substring,get,4,0.017731288,t.<mask>(pos + 1),"                currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.<mask>(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
      "
2108,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15538,15538,IdentifierMutator-Variable,t,s,1,5.2616134E-4,<mask>,"                  currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value =<mask>.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
   "
2109,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15538,15538,IdentifierMutator-Variable,t,r,2,2.3682161E-4,<mask>,"                  currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value =<mask>.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
   "
2110,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15538,15538,IdentifierMutator-Variable,t,p,3,1.5975002E-4,<mask>,"                  currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value =<mask>.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
   "
2111,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15538,15538,IdentifierMutator-Variable,t,w,4,8.524919E-5,<mask>,"                  currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value =<mask>.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
   "
2112,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15553,15555,BinaryOperatorMutator,+,",",2,0.013709706,pos <mask> 1,"            currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos<mask>1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
         "
2113,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15553,15555,BinaryOperatorMutator,+,)+,3,0.010510895,pos <mask> 1,"            currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos<mask>1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
         "
2114,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15553,15555,BinaryOperatorMutator,+,-,4,0.0016464102,pos <mask> 1,"            currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos<mask>1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
         "
2115,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15550,15552,IdentifierMutator-Variable,pos,Pos,2,2.4509625E-4,<mask>,"             currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(<mask> + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
        "
2116,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15550,15552,IdentifierMutator-Variable,pos,neg,3,6.7110144E-5,<mask>,"             currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(<mask> + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
        "
2117,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15550,15552,IdentifierMutator-Variable,pos,len,4,5.5879806E-5,<mask>,"             currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(<mask> + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
        "
2118,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15556,15556,IdentifierMutator-Literal,1,2,1,0.0447151,<mask>,"           currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos +<mask>);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
          "
2119,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15556,15556,IdentifierMutator-Literal,1,4,2,0.004166635,<mask>,"           currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos +<mask>);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
          "
2120,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15556,15556,IdentifierMutator-Literal,1,pos,3,0.003643421,<mask>,"           currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos +<mask>);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
          "
2121,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,541,15556,15556,IdentifierMutator-Literal,1,3,4,0.0023069188,<mask>,"           currentOption = null;
                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos +<mask>);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
          "
2122,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15589,15592,BinaryOperatorMutator,==,>,1,0.37743205,opt.length() <mask> 1,"            }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length()<mask>1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
             "
2123,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15589,15592,BinaryOperatorMutator,==,>,2,0.04685351,opt.length() <mask> 1,"            }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length()<mask>1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
             "
2124,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15589,15592,BinaryOperatorMutator,==,-,3,0.04238064,opt.length() <mask> 1,"            }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length()<mask>1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
             "
2125,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15589,15592,BinaryOperatorMutator,==,<,4,0.019057542,opt.length() <mask> 1,"            }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length()<mask>1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
             "
2126,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15581,15586,MethodCallMutator,length,width,2,3.865781E-4,opt.<mask>(),"              }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.<mask>() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
           "
2127,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15581,15586,MethodCallMutator,length,size,3,3.280151E-4,opt.<mask>(),"              }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.<mask>() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
           "
2128,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15581,15586,MethodCallMutator,length,len,4,2.73896E-4,opt.<mask>(),"              }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.<mask>() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
           "
2129,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15577,15579,IdentifierMutator-Variable,opt,value,0,0.7078296,<mask>,"                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (<mask>.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
         "
2130,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15577,15579,IdentifierMutator-Variable,opt,option,2,0.03713869,<mask>,"                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (<mask>.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
         "
2131,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15577,15579,IdentifierMutator-Variable,opt,val,3,0.004488725,<mask>,"                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (<mask>.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
         "
2132,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15577,15579,IdentifierMutator-Variable,opt,token,4,0.001130698,<mask>,"                }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (<mask>.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
         "
2133,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15593,15593,IdentifierMutator-Literal,1,0,0,0.82835805,<mask>,"           }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() ==<mask>)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
              "
2134,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15593,15593,IdentifierMutator-Literal,1,2,2,0.032548092,<mask>,"           }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() ==<mask>)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
              "
2135,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15593,15593,IdentifierMutator-Literal,1,4,3,0.010032189,<mask>,"           }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() ==<mask>)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
              "
2136,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,543,15593,15593,IdentifierMutator-Literal,1,3,4,0.0077095423,<mask>,"           }
                else
                {
                    // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() ==<mask>)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
              "
2137,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15674,15682,MethodCallMutator,getOption,get,0,0.9827172,options.<mask>(opt),"         // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.<mask>(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJava"
2138,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15674,15682,MethodCallMutator,getOption,option,1,0.0043919533,options.<mask>(opt),"         // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.<mask>(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJava"
2139,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15674,15682,MethodCallMutator,getOption,remove,2,0.0016759433,options.<mask>(opt),"         // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.<mask>(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJava"
2140,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15674,15682,MethodCallMutator,getOption,get,3,0.0015626039,options.<mask>(opt),"         // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.<mask>(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJava"
2141,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15674,15682,MethodCallMutator,getOption,find,4,0.0013631769,options.<mask>(opt),"         // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.<mask>(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJava"
2142,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,IdentifierMutator-Variable,options,parser,0,0.39361677,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2143,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,IdentifierMutator-Variable,options,config,2,0.051142547,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2144,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,IdentifierMutator-Variable,options,command,3,0.027082555,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2145,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,IdentifierMutator-Variable,options,this,4,0.019136216,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2146,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,FieldReferenceMutator,options,parser,0,0.39361677,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2147,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,FieldReferenceMutator,options,config,2,0.051142547,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2148,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,FieldReferenceMutator,options,command,3,0.027082555,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2149,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15666,15672,FieldReferenceMutator,options,this,4,0.019136216,<mask>,"           // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option =<mask>.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if"
2150,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15684,15686,IdentifierMutator-Variable,opt,option,1,0.054874305,<mask>,"      // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(<mask>);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty("
2151,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15684,15686,IdentifierMutator-Variable,opt,value,2,0.014606287,<mask>,"      // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(<mask>);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty("
2152,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15684,15686,IdentifierMutator-Variable,opt,key,3,0.0020018641,<mask>,"      // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(<mask>);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty("
2153,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,546,15684,15686,IdentifierMutator-Variable,opt,name,4,0.0011882026,<mask>,"      // -S1S2S3 or -S1S2V
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(<mask>);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty("
2154,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15724,15727,BinaryOperatorMutator,&&,&,2,0.0033865224,(option != null) <mask> option.acceptsArg(),"                  handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null<mask>option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
       "
2155,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15724,15727,BinaryOperatorMutator,&&,AND,3,6.320582E-4,(option != null) <mask> option.acceptsArg(),"                  handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null<mask>option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
       "
2156,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15724,15727,BinaryOperatorMutator,&&,||,4,2.3096046E-4,(option != null) <mask> option.acceptsArg(),"                  handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null<mask>option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
       "
2157,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15716,15719,BinaryOperatorMutator,!=,==,1,0.037550896,option <mask> null,"                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option<mask>null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
     "
2158,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15716,15719,BinaryOperatorMutator,!=,=,2,0.0069033178,option <mask> null,"                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option<mask>null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
     "
2159,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15716,15719,BinaryOperatorMutator,!=,!,3,3.5009457E-4,option <mask> null,"                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option<mask>null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
     "
2160,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15716,15719,BinaryOperatorMutator,!=,==,4,2.9089925E-4,option <mask> null,"                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option<mask>null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
     "
2161,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15710,15715,IdentifierMutator-Variable,option,argument,2,0.0026091395,<mask>,"
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (<mask> != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
    "
2162,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15710,15715,IdentifierMutator-Variable,option,optional,3,0.0012253119,<mask>,"
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (<mask> != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
    "
2163,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15710,15715,IdentifierMutator-Variable,option,Option,4,7.941399E-4,<mask>,"
                    handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (<mask> != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
    "
2164,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15720,15723,IdentifierMutator-Literal,null,this,2,1.3851422E-4,<mask>,"                   handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option !=<mask> && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
      "
2165,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15720,15723,IdentifierMutator-Literal,null,NULL,3,7.490862E-5,<mask>,"                   handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option !=<mask> && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
      "
2166,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15720,15723,IdentifierMutator-Literal,null,undefined,4,7.1406015E-5,<mask>,"                   handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option !=<mask> && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
      "
2167,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15735,15744,MethodCallMutator,acceptsArg,optional,0,0.14770454,option.<mask>(),"               handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.<mask>())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
            "
2168,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15735,15744,MethodCallMutator,acceptsArg,valid,1,0.09266555,option.<mask>(),"               handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.<mask>())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
            "
2169,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15735,15744,MethodCallMutator,acceptsArg,help,2,0.07676181,option.<mask>(),"               handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.<mask>())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
            "
2170,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15735,15744,MethodCallMutator,acceptsArg,selected,3,0.061580986,option.<mask>(),"               handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.<mask>())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
            "
2171,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15735,15744,MethodCallMutator,acceptsArg,value,4,0.056216832,option.<mask>(),"               handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.<mask>())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
            "
2172,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15728,15733,IdentifierMutator-Variable,option,options,1,0.002437439,<mask>,"                 handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null &&<mask>.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
        "
2173,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15728,15733,IdentifierMutator-Variable,option,argument,2,0.0014643775,<mask>,"                 handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null &&<mask>.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
        "
2174,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,547,15728,15733,IdentifierMutator-Variable,option,this,4,5.031091E-4,<mask>,"                 handleConcatenatedOptions(token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null &&<mask>.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
        "
2175,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15787,15798,MethodCallMutator,handleOption,process,0,0.06550267,<mask>(option),"token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {<mask>(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption"
2176,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15787,15798,MethodCallMutator,handleOption,add,1,0.06533186,<mask>(option),"token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {<mask>(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption"
2177,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15787,15798,MethodCallMutator,handleOption,accept,2,0.053981118,<mask>(option),"token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {<mask>(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption"
2178,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15787,15798,MethodCallMutator,handleOption,validate,3,0.053274527,<mask>(option),"token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {<mask>(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption"
2179,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15787,15798,MethodCallMutator,handleOption,assert,4,0.025821181,<mask>(option),"token);
                }
            }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {<mask>(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption"
2180,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15800,15805,IdentifierMutator-Variable,option,opt,1,0.010057252,<mask>,"         }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(<mask>);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt"
2181,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15800,15805,IdentifierMutator-Variable,option,options,2,0.006901781,<mask>,"         }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(<mask>);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt"
2182,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,549,15800,15805,IdentifierMutator-Variable,option,token,4,0.0027191674,<mask>,"         }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(<mask>);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt"
2183,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15843,15863,MethodCallMutator,addValueForProcessing,add,0,0.9660266,currentOption.<mask>(value),"  else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.<mask>(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.add"
2184,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15843,15863,MethodCallMutator,addValueForProcessing,set,1,0.010681086,currentOption.<mask>(value),"  else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.<mask>(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.add"
2185,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15843,15863,MethodCallMutator,addValueForProcessing,remove,2,0.008341985,currentOption.<mask>(value),"  else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.<mask>(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.add"
2186,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15843,15863,MethodCallMutator,addValueForProcessing,append,3,0.0019708227,currentOption.<mask>(value),"  else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.<mask>(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.add"
2187,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15843,15863,MethodCallMutator,addValueForProcessing,update,4,0.0013645268,currentOption.<mask>(value),"  else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.<mask>(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.add"
2188,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,IdentifierMutator-Variable,currentOption,option,0,0.59643614,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2189,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,IdentifierMutator-Variable,currentOption,parser,1,0.025671452,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2190,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,IdentifierMutator-Variable,currentOption,options,2,0.019932216,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2191,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,IdentifierMutator-Variable,currentOption,expression,3,0.017505573,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2192,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,IdentifierMutator-Variable,currentOption,node,4,0.013936297,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2193,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,FieldReferenceMutator,currentOption,option,0,0.59643614,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2194,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,FieldReferenceMutator,currentOption,parser,1,0.025671452,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2195,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,FieldReferenceMutator,currentOption,options,2,0.019932216,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2196,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,FieldReferenceMutator,currentOption,expression,3,0.017505573,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2197,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15829,15841,FieldReferenceMutator,currentOption,node,4,0.013936297,<mask>,"       }
        }
        else
        {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);<mask>.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
             "
2198,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15865,15869,IdentifierMutator-Variable,value,val,1,0.0072734,<mask>,"     {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(<mask>);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueFor"
2199,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15865,15869,IdentifierMutator-Variable,value,option,2,0.0022108278,<mask>,"     {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(<mask>);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueFor"
2200,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15865,15869,IdentifierMutator-Variable,value,true,3,0.0012313585,<mask>,"     {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(<mask>);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueFor"
2201,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,550,15865,15869,IdentifierMutator-Variable,value,this,4,0.0010890854,<mask>,"     {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(<mask>);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueFor"
2202,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15906,15906,AssignmentMutator,currentOption=null,!,0,0.4512375,currentOption <mask>= null,"yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption<mask>= null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2203,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15906,15906,AssignmentMutator,currentOption=null,^,1,0.107499324,currentOption <mask>= null,"yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption<mask>= null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2204,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15906,15906,AssignmentMutator,currentOption=null,|,2,0.094351724,currentOption <mask>= null,"yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption<mask>= null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2205,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15906,15906,AssignmentMutator,currentOption=null,*,3,0.08664305,currentOption <mask>= null,"yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption<mask>= null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2206,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15906,15906,AssignmentMutator,currentOption=null,||,4,0.06214663,currentOption <mask>= null,"yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption<mask>= null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2207,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,IdentifierMutator-Variable,currentOption,option,0,0.81725615,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2208,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,IdentifierMutator-Variable,currentOption,value,1,0.058266383,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2209,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,IdentifierMutator-Variable,currentOption,option,2,0.021603264,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2210,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,IdentifierMutator-Variable,currentOption,token,3,0.019489564,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2211,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,IdentifierMutator-Variable,currentOption,opt,4,0.011523345,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2212,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,FieldReferenceMutator,currentOption,option,0,0.81725615,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2213,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,FieldReferenceMutator,currentOption,value,1,0.058266383,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2214,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,FieldReferenceMutator,currentOption,option,2,0.021603264,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2215,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,FieldReferenceMutator,currentOption,token,3,0.019489564,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2216,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15893,15905,FieldReferenceMutator,currentOption,opt,4,0.011523345,<mask>,"   {
            // equal sign found (-xxx=yyy)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);<mask> = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
            "
2217,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15909,15912,IdentifierMutator-Literal,null,option,0,0.88909435,<mask>,"y)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption =<mask>;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
              "
2218,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15909,15912,IdentifierMutator-Literal,null,undefined,2,0.0031625205,<mask>,"y)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption =<mask>;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
              "
2219,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15909,15912,IdentifierMutator-Literal,null,options,3,0.002529792,<mask>,"y)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption =<mask>;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
              "
2220,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,551,15909,15912,IdentifierMutator-Literal,null,value,4,0.0020224792,<mask>,"y)
            String opt = t.substring(0, pos);
            String value = t.substring(pos + 1);

            if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption =<mask>;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
              "
2221,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,15992,16009,MethodCallMutator,handleUnknownToken,unexpected,0,0.16237605,<mask>(token),"          if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {<mask>(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
  "
2222,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,15992,16009,MethodCallMutator,handleUnknownToken,consume,1,0.094046965,<mask>(token),"          if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {<mask>(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
  "
2223,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,15992,16009,MethodCallMutator,handleUnknownToken,next,2,0.088818915,<mask>(token),"          if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {<mask>(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
  "
2224,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,15992,16009,MethodCallMutator,handleUnknownToken,emit,3,0.05566654,<mask>(token),"          if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {<mask>(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
  "
2225,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,15992,16009,MethodCallMutator,handleUnknownToken,print,4,0.042531203,<mask>(token),"          if (opt.length() == 1)
            {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {<mask>(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
  "
2226,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,16011,16015,IdentifierMutator-Variable,token,option,0,0.7087812,<mask>,"       {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(<mask>);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
    "
2227,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,16011,16015,IdentifierMutator-Variable,token,opt,2,0.06505168,<mask>,"       {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(<mask>);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
    "
2228,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,16011,16015,IdentifierMutator-Variable,token,value,3,0.0069125975,<mask>,"       {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(<mask>);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
    "
2229,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,555,16011,16015,IdentifierMutator-Variable,token,options,4,0.0062207244,<mask>,"       {
                // -S=V
                Option option = options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(<mask>);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
    "
2230,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16072,16085,MethodCallMutator,isJavaProperty,empty,0,0.53779745,<mask>(opt)," options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (<mask>(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
  "
2231,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16072,16085,MethodCallMutator,isJavaProperty,number,1,0.037127312,<mask>(opt)," options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (<mask>(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
  "
2232,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16072,16085,MethodCallMutator,isJavaProperty,null,2,0.029932436,<mask>(opt)," options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (<mask>(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
  "
2233,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16072,16085,MethodCallMutator,isJavaProperty,string,3,0.016380925,<mask>(opt)," options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (<mask>(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
  "
2234,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16072,16085,MethodCallMutator,isJavaProperty,optional,4,0.015624304,<mask>(opt)," options.getOption(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (<mask>(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
  "
2235,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16087,16089,IdentifierMutator-Variable,opt,option,0,0.5777161,<mask>,"(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(<mask>))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
    "
2236,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16087,16089,IdentifierMutator-Variable,opt,token,1,0.27435613,<mask>,"(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(<mask>))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
    "
2237,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16087,16089,IdentifierMutator-Variable,opt,key,3,0.0034650753,<mask>,"(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(<mask>))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
    "
2238,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,558,16087,16089,IdentifierMutator-Variable,opt,options,4,0.0021728082,<mask>,"(opt);
                if (option != null && option.acceptsArg())
                {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(<mask>))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
    "
2239,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16164,16175,MethodCallMutator,handleOption,handle,0,0.09423296,"<mask>(options.getOption(opt.substring(0, 1)))","   {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)<mask>(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2240,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16164,16175,MethodCallMutator,handleOption,parse,1,0.056847878,"<mask>(options.getOption(opt.substring(0, 1)))","   {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)<mask>(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2241,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16164,16175,MethodCallMutator,handleOption,process,2,0.04075059,"<mask>(options.getOption(opt.substring(0, 1)))","   {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)<mask>(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2242,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16164,16175,MethodCallMutator,handleOption,eval,3,0.03902182,"<mask>(options.getOption(opt.substring(0, 1)))","   {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)<mask>(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2243,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16164,16175,MethodCallMutator,handleOption,assert,4,0.03739809,"<mask>(options.getOption(opt.substring(0, 1)))","   {
                    handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)<mask>(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2244,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16185,16193,MethodCallMutator,getOption,get,0,0.9556807,"options.<mask>(opt.substring(0, 1))","   handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.<mask>(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2245,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16185,16193,MethodCallMutator,getOption,remove,1,0.004048131,"options.<mask>(opt.substring(0, 1))","   handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.<mask>(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2246,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16185,16193,MethodCallMutator,getOption,key,2,0.003954726,"options.<mask>(opt.substring(0, 1))","   handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.<mask>(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2247,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16185,16193,MethodCallMutator,getOption,find,3,0.0036333615,"options.<mask>(opt.substring(0, 1))","   handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.<mask>(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2248,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16185,16193,MethodCallMutator,getOption,delete,4,0.0036196313,"options.<mask>(opt.substring(0, 1))","   handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.<mask>(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2249,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,IdentifierMutator-Variable,options,option,0,0.14979024,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2250,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,IdentifierMutator-Variable,options,this,2,0.08899595,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2251,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,IdentifierMutator-Variable,options,config,3,0.055806123,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2252,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,IdentifierMutator-Variable,options,parser,4,0.038980804,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2253,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,FieldReferenceMutator,options,option,0,0.14979024,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2254,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,FieldReferenceMutator,options,this,2,0.08899595,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2255,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,FieldReferenceMutator,options,config,3,0.055806123,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2256,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16177,16183,FieldReferenceMutator,options,parser,4,0.038980804,<mask>,"     handleOption(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(<mask>.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2257,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16199,16207,MethodCallMutator,substring,slice,0,0.7175568,"opt.<mask>(0, 1)","option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.<mask>(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2258,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16199,16207,MethodCallMutator,substring,sub,1,0.06597856,"opt.<mask>(0, 1)","option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.<mask>(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2259,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16199,16207,MethodCallMutator,substring,split,2,0.05133292,"opt.<mask>(0, 1)","option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.<mask>(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2260,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16199,16207,MethodCallMutator,substring,ring,3,0.036015753,"opt.<mask>(0, 1)","option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.<mask>(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2261,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16199,16207,MethodCallMutator,substring,replace,4,0.028753502,"opt.<mask>(0, 1)","option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.<mask>(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2262,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16195,16197,IdentifierMutator-Variable,opt,option,1,2.5896932E-4,<mask>,"Option(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(<mask>.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2263,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16195,16197,IdentifierMutator-Variable,opt,op,2,1.5740813E-4,<mask>,"Option(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(<mask>.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2264,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16195,16197,IdentifierMutator-Variable,opt,Opt,3,1.2185083E-4,<mask>,"Option(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(<mask>.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2265,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16195,16197,IdentifierMutator-Variable,opt,prop,4,8.189296E-5,<mask>,"Option(option);
                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(<mask>.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2266,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16209,16209,IdentifierMutator-Literal,0,1,1,0.037607837,<mask>,"                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(<mask>, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2267,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16209,16209,IdentifierMutator-Literal,0,2,2,0.019219894,<mask>,"                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(<mask>, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2268,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16209,16209,IdentifierMutator-Literal,0,6,3,0.0020830263,<mask>,"                    currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(<mask>, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2269,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16212,16212,IdentifierMutator-Literal,1,2,2,0.008706196,<mask>,"                  currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0,<mask>)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2270,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16212,16212,IdentifierMutator-Literal,1,0,3,0.0022709388,<mask>,"                  currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0,<mask>)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2271,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,561,16212,16212,IdentifierMutator-Literal,1,2,4,0.0019293585,<mask>,"                  currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0,<mask>)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2272,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16248,16268,MethodCallMutator,addValueForProcessing,set,0,0.33706406,currentOption.<mask>(opt.substring(1)),"ForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.<mask>(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2273,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16248,16268,MethodCallMutator,addValueForProcessing,add,1,0.13784672,currentOption.<mask>(opt.substring(1)),"ForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.<mask>(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2274,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16248,16268,MethodCallMutator,addValueForProcessing,append,2,0.06016268,currentOption.<mask>(opt.substring(1)),"ForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.<mask>(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2275,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16248,16268,MethodCallMutator,addValueForProcessing,key,3,0.05377171,currentOption.<mask>(opt.substring(1)),"ForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.<mask>(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2276,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16248,16268,MethodCallMutator,addValueForProcessing,remove,4,0.047294877,currentOption.<mask>(opt.substring(1)),"ForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.<mask>(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2277,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,IdentifierMutator-Variable,currentOption,option,0,0.54535246,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2278,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,IdentifierMutator-Variable,currentOption,option,1,0.09039476,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2279,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,IdentifierMutator-Variable,currentOption,value,2,0.08852751,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2280,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,IdentifierMutator-Variable,currentOption,options,3,0.04481536,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2281,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,IdentifierMutator-Variable,currentOption,this,4,0.01982349,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2282,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,FieldReferenceMutator,currentOption,option,0,0.54535246,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2283,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,FieldReferenceMutator,currentOption,option,1,0.09039476,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2284,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,FieldReferenceMutator,currentOption,value,2,0.08852751,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2285,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,FieldReferenceMutator,currentOption,options,3,0.04481536,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2286,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16234,16246,FieldReferenceMutator,currentOption,this,4,0.01982349,<mask>,"               currentOption.addValueForProcessing(value);
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));<mask>.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2287,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16274,16282,MethodCallMutator,substring,slice,0,0.21666403,opt.<mask>(1),"                   currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.<mask>(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2288,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16274,16282,MethodCallMutator,substring,split,1,0.17634092,opt.<mask>(1),"                   currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.<mask>(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2289,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16274,16282,MethodCallMutator,substring,group,2,0.15760614,opt.<mask>(1),"                   currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.<mask>(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2290,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16274,16282,MethodCallMutator,substring,get,3,0.035763223,opt.<mask>(1),"                   currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.<mask>(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2291,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16274,16282,MethodCallMutator,substring,ring,4,0.028506784,opt.<mask>(1),"                   currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.<mask>(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2292,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16270,16272,IdentifierMutator-Variable,opt,option,1,0.0013361094,<mask>,"
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(<mask>.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2293,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16270,16272,IdentifierMutator-Variable,opt,prop,2,1.975654E-4,<mask>,"
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(<mask>.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2294,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16270,16272,IdentifierMutator-Variable,opt,op,3,1.7347216E-4,<mask>,"
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(<mask>.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2295,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16270,16272,IdentifierMutator-Variable,opt,value,4,1.02153645E-4,<mask>,"
                    currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(<mask>.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2296,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16284,16284,IdentifierMutator-Literal,1,2,1,0.007876746,<mask>,"                currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(<mask>));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2297,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16284,16284,IdentifierMutator-Literal,1,0,2,9.378713E-4,<mask>,"                currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(<mask>));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2298,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,562,16284,16284,IdentifierMutator-Literal,1,i,4,6.1697327E-4,<mask>,"                currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(<mask>));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2299,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16319,16339,MethodCallMutator,addValueForProcessing,set,0,0.4221043,currentOption.<mask>(value),"                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2300,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16319,16339,MethodCallMutator,addValueForProcessing,add,1,0.16804631,currentOption.<mask>(value),"                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2301,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16319,16339,MethodCallMutator,addValueForProcessing,update,2,0.08286368,currentOption.<mask>(value),"                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2302,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16319,16339,MethodCallMutator,addValueForProcessing,append,3,0.05606655,currentOption.<mask>(value),"                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2303,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16319,16339,MethodCallMutator,addValueForProcessing,value,4,0.05034581,currentOption.<mask>(value),"                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.<mask>(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2304,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,IdentifierMutator-Variable,currentOption,option,0,0.33369258,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2305,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,IdentifierMutator-Variable,currentOption,option,1,0.1740388,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2306,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,IdentifierMutator-Variable,currentOption,options,2,0.041212626,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2307,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,IdentifierMutator-Variable,currentOption,token,3,0.030218212,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2308,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,IdentifierMutator-Variable,currentOption,opt,4,0.023456752,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2309,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,FieldReferenceMutator,currentOption,option,0,0.33369258,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2310,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,FieldReferenceMutator,currentOption,option,1,0.1740388,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2311,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,FieldReferenceMutator,currentOption,options,2,0.041212626,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2312,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,FieldReferenceMutator,currentOption,token,3,0.030218212,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2313,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16305,16317,FieldReferenceMutator,currentOption,opt,4,0.023456752,<mask>,"              currentOption = null;
                }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));<mask>.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2314,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16341,16345,IdentifierMutator-Variable,value,token,1,0.14848933,<mask>,"          }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2315,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16341,16345,IdentifierMutator-Variable,value,val,2,0.05686662,<mask>,"          }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2316,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16341,16345,IdentifierMutator-Variable,value,true,3,0.05559255,<mask>,"          }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2317,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,563,16341,16345,IdentifierMutator-Variable,value,opt,4,0.031936783,<mask>,"          }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(<mask>);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2318,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16378,16378,AssignmentMutator,currentOption=null,!,0,0.6619818,currentOption <mask>= null,"       else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2319,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16378,16378,AssignmentMutator,currentOption=null,||,1,0.09517545,currentOption <mask>= null,"       else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2320,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16378,16378,AssignmentMutator,currentOption=null,|,2,0.04307916,currentOption <mask>= null,"       else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2321,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16378,16378,AssignmentMutator,currentOption=null,!,3,0.04205467,currentOption <mask>= null,"       else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2322,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16378,16378,AssignmentMutator,currentOption=null,*,4,0.035913408,currentOption <mask>= null,"       else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption<mask>= null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2323,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,IdentifierMutator-Variable,currentOption,value,0,0.5710499,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2324,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,IdentifierMutator-Variable,currentOption,option,1,0.16899936,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2325,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,IdentifierMutator-Variable,currentOption,token,2,0.041585255,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2326,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,IdentifierMutator-Variable,currentOption,options,3,0.03453304,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2327,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,IdentifierMutator-Variable,currentOption,value,4,0.0239666,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2328,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,FieldReferenceMutator,currentOption,value,0,0.5710499,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2329,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,FieldReferenceMutator,currentOption,option,1,0.16899936,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2330,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,FieldReferenceMutator,currentOption,token,2,0.041585255,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2331,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,FieldReferenceMutator,currentOption,options,3,0.03453304,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2332,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16365,16377,FieldReferenceMutator,currentOption,value,4,0.0239666,<mask>,"        }
                else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);<mask> = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2333,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16381,16384,IdentifierMutator-Literal,null,option,1,0.25114352,<mask>,"      else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2334,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16381,16384,IdentifierMutator-Literal,null,value,2,0.10355749,<mask>,"      else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2335,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16381,16384,IdentifierMutator-Literal,null,opt,3,0.08693544,<mask>,"      else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2336,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,564,16381,16384,IdentifierMutator-Literal,null,undefined,4,0.03044965,<mask>,"      else
                {
                    handleUnknownToken(token);
                }
            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption =<mask>;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(token);
            }
        }
   "
2337,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16480,16504,MethodCallMutator,handleLongOptionWithEqual,print,0,0.082139455,<mask>(token),"            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V<mask>(token);
            }
        }
   "
2338,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16480,16504,MethodCallMutator,handleLongOptionWithEqual,process,1,0.06792976,<mask>(token),"            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V<mask>(token);
            }
        }
   "
2339,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16480,16504,MethodCallMutator,handleLongOptionWithEqual,parse,2,0.061905924,<mask>(token),"            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V<mask>(token);
            }
        }
   "
2340,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16480,16504,MethodCallMutator,handleLongOptionWithEqual,assert,3,0.051333364,<mask>(token),"            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V<mask>(token);
            }
        }
   "
2341,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16480,16504,MethodCallMutator,handleLongOptionWithEqual,eval,4,0.046421364,<mask>(token),"            }
            else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V<mask>(token);
            }
        }
   "
2342,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16506,16510,IdentifierMutator-Variable,token,options,0,0.59718364,<mask>,"  else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(<mask>);
            }
        }
   "
2343,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16506,16510,IdentifierMutator-Variable,token,option,1,0.15866072,<mask>,"  else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(<mask>);
            }
        }
   "
2344,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16506,16510,IdentifierMutator-Variable,token,opt,2,0.10319368,<mask>,"  else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(<mask>);
            }
        }
   "
2345,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16506,16510,IdentifierMutator-Variable,token,value,3,0.04598254,<mask>,"  else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(<mask>);
            }
        }
   "
2346,DefaultParser.java,handleShortAndLongOption,void handleShortAndLongOption(String token) throws ParseException,482,569,16506,16510,IdentifierMutator-Variable,token,true,4,0.009160758,<mask>,"  else if (isJavaProperty(opt))
            {
                // -SV1=V2 (-Dkey=value)
                handleOption(options.getOption(opt.substring(0, 1)));
                currentOption.addValueForProcessing(opt.substring(1));
                currentOption.addValueForProcessing(value);
                currentOption = null;
            }
            else
            {
                // -L=V or -l=V
                handleLongOptionWithEqual(<mask>);
            }
        }
   "
2347,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16738,16756,MethodCallMutator,stripLeadingHyphens,escape,0,0.37725273,Util.<mask>(token),"String getLongPrefix(String token)
    {
        String t = Util.<mask>(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2348,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16738,16756,MethodCallMutator,stripLeadingHyphens,quote,1,0.15297376,Util.<mask>(token),"String getLongPrefix(String token)
    {
        String t = Util.<mask>(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2349,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16738,16756,MethodCallMutator,stripLeadingHyphens,token,2,0.07610049,Util.<mask>(token),"String getLongPrefix(String token)
    {
        String t = Util.<mask>(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2350,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16738,16756,MethodCallMutator,stripLeadingHyphens,split,3,0.063701116,Util.<mask>(token),"String getLongPrefix(String token)
    {
        String t = Util.<mask>(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2351,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16738,16756,MethodCallMutator,stripLeadingHyphens,format,4,0.04441672,Util.<mask>(token),"String getLongPrefix(String token)
    {
        String t = Util.<mask>(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2352,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16758,16762,IdentifierMutator-Variable,token,t,1,5.253269E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2353,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16758,16762,IdentifierMutator-Variable,token,Token,2,2.869027E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2354,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,581,16758,16762,IdentifierMutator-Variable,token,text,3,1.0387004E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(<mask>);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2355,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,584,16803,16806,IdentifierMutator-Literal,null,"""""",1,0.2975425,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt =<mask>;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2356,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,584,16803,16806,IdentifierMutator-Literal,null,t,2,0.061720155,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt =<mask>;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2357,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,584,16803,16806,IdentifierMutator-Literal,null,token,3,0.05838322,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt =<mask>;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2358,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,584,16803,16806,IdentifierMutator-Literal,null,"''",4,0.03065567,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt =<mask>;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2359,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16823,16823,AssignmentMutator,i=t.length()-2,<,0,0.36658305,i <mask>= t.length() - 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i<mask>= t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2360,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16823,16823,AssignmentMutator,i=t.length()-2,<,1,0.2765162,i <mask>= t.length() - 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i<mask>= t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2361,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16823,16823,AssignmentMutator,i=t.length()-2,!,2,0.08104287,i <mask>= t.length() - 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i<mask>= t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2362,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16823,16823,AssignmentMutator,i=t.length()-2,=,3,0.0665053,i <mask>= t.length() - 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i<mask>= t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2363,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16823,16823,AssignmentMutator,i=t.length()-2,*,4,0.057974875,i <mask>= t.length() - 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i<mask>= t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2364,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16822,16822,IdentifierMutator-Variable,i,I,2,2.8303295E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (<mask> = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2365,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16822,16822,IdentifierMutator-Variable,i,ai,3,4.6593916E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (<mask> = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2366,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16822,16822,IdentifierMutator-Variable,i,pi,4,2.6133503E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (<mask> = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2367,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16836,16838,BinaryOperatorMutator,-,/,2,0.07656697,t.length() <mask> 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length()<mask>2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2368,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16836,16838,BinaryOperatorMutator,-,)-,3,0.021931617,t.length() <mask> 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length()<mask>2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2369,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16836,16838,BinaryOperatorMutator,-,/,4,0.009931827,t.length() <mask> 2,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length()<mask>2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2370,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16828,16833,MethodCallMutator,length,len,1,3.7110446E-4,t.<mask>(),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.<mask>() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2371,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16828,16833,MethodCallMutator,length,size,3,8.867825E-5,t.<mask>(),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.<mask>() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2372,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16828,16833,MethodCallMutator,length,width,4,8.689608E-5,t.<mask>(),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.<mask>() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2373,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16826,16826,IdentifierMutator-Variable,t,token,1,0.12709178,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i =<mask>.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2374,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16826,16826,IdentifierMutator-Variable,t,tokens,2,0.0034251774,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i =<mask>.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2375,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16826,16826,IdentifierMutator-Variable,t,prefix,3,0.0026983803,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i =<mask>.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2376,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16826,16826,IdentifierMutator-Variable,t,s,4,0.0017459093,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i =<mask>.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2377,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16839,16839,IdentifierMutator-Literal,2,1,0,0.91650146,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() -<mask>; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2378,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16839,16839,IdentifierMutator-Literal,2,i,2,0.004650733,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() -<mask>; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2379,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16839,16839,IdentifierMutator-Literal,2,3,3,0.0036247761,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() -<mask>; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2380,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16839,16839,IdentifierMutator-Literal,2,4,4,0.0015386519,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() -<mask>; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2381,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16843,16845,BinaryOperatorMutator,>,>=,2,0.22175281,i <mask> 1,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i<mask>1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2382,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16843,16845,BinaryOperatorMutator,>,+,3,0.11685976,i <mask> 1,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i<mask>1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2383,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16843,16845,BinaryOperatorMutator,>,-,4,0.03294377,i <mask> 1,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i<mask>1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2384,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16842,16842,IdentifierMutator-Variable,i,I,2,4.3766413E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2;<mask> > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2385,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16842,16842,IdentifierMutator-Variable,i,t,3,3.4440007E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2;<mask> > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2386,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16842,16842,IdentifierMutator-Variable,i,it,4,2.220969E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2;<mask> > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2387,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16846,16846,IdentifierMutator-Literal,1,0,0,0.922948,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i ><mask>; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2388,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16846,16846,IdentifierMutator-Literal,1,2,2,0.010548592,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i ><mask>; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2389,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16846,16846,IdentifierMutator-Literal,1,0,3,0.0035125692,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i ><mask>; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2390,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16846,16846,IdentifierMutator-Literal,1,i,4,0.0029554465,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i ><mask>; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2391,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16850,16851,UnaryOperatorMutator,--,-=,2,8.7011E-5,i<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i<mask>)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2392,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16850,16851,UnaryOperatorMutator,--,++,3,3.993361E-5,i<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i<mask>)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2393,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16850,16851,UnaryOperatorMutator,--,=-,4,2.4730023E-5,i<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i<mask>)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2394,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16849,16849,IdentifierMutator-Variable,i,I,2,3.3070683E-6,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1;<mask>--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2395,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16849,16849,IdentifierMutator-Variable,i,I,3,2.7622052E-6,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1;<mask>--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2396,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,585,16849,16849,IdentifierMutator-Variable,i,,4,1.4640666E-6,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1;<mask>--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2397,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16894,16902,MethodCallMutator,substring,ring,0,0.38640535,"t.<mask>(0, i)","String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.<mask>(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2398,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16894,16902,MethodCallMutator,substring,slice,1,0.28960964,"t.<mask>(0, i)","String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.<mask>(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2399,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16894,16902,MethodCallMutator,substring,get,2,0.096409075,"t.<mask>(0, i)","String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.<mask>(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2400,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16894,16902,MethodCallMutator,substring,replace,3,0.06517569,"t.<mask>(0, i)","String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.<mask>(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2401,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16894,16902,MethodCallMutator,substring,string,4,0.03531423,"t.<mask>(0, i)","String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.<mask>(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2402,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16892,16892,IdentifierMutator-Variable,t,token,1,0.004988579,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix =<mask>.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2403,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16892,16892,IdentifierMutator-Variable,t,s,2,3.233603E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix =<mask>.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2404,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16892,16892,IdentifierMutator-Variable,t,prefix,3,2.466846E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix =<mask>.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2405,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16892,16892,IdentifierMutator-Variable,t,text,4,2.2323681E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix =<mask>.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2406,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16904,16904,IdentifierMutator-Literal,0,1,0,0.5449608,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(<mask>, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2407,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16904,16904,IdentifierMutator-Literal,0,2,2,0.18345557,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(<mask>, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2408,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16904,16904,IdentifierMutator-Literal,0,1,4,0.0013066353,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(<mask>, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2409,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16907,16907,IdentifierMutator-Variable,i,1,2,4.6837787E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0,<mask>);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2410,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16907,16907,IdentifierMutator-Variable,i,2,3,3.6894513E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0,<mask>);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2411,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,587,16907,16907,IdentifierMutator-Variable,i,3,4,5.9075704E-5,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0,<mask>);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2412,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16935,16947,MethodCallMutator,hasLongOption,add,0,0.31057778,options.<mask>(prefix),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.<mask>(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2413,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16935,16947,MethodCallMutator,hasLongOption,has,1,0.17898093,options.<mask>(prefix),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.<mask>(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2414,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16935,16947,MethodCallMutator,hasLongOption,append,2,0.08168315,options.<mask>(prefix),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.<mask>(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2415,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16935,16947,MethodCallMutator,hasLongOption,include,3,0.074547485,options.<mask>(prefix),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.<mask>(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2416,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16935,16947,MethodCallMutator,hasLongOption,get,4,0.0689132,options.<mask>(prefix),"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.<mask>(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2417,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,IdentifierMutator-Variable,options,option,1,0.083836935,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2418,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,IdentifierMutator-Variable,options,opt,2,0.047410443,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2419,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,IdentifierMutator-Variable,options,config,3,0.036665488,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2420,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,IdentifierMutator-Variable,options,parser,4,0.032314345,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2421,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,FieldReferenceMutator,options,option,1,0.083836935,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2422,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,FieldReferenceMutator,options,opt,2,0.047410443,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2423,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,FieldReferenceMutator,options,config,3,0.036665488,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2424,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16927,16933,FieldReferenceMutator,options,parser,4,0.032314345,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (<mask>.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2425,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16949,16954,IdentifierMutator-Variable,prefix,opt,2,2.532558E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(<mask>))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2426,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16949,16954,IdentifierMutator-Variable,prefix,token,3,2.4494436E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(<mask>))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2427,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,588,16949,16954,IdentifierMutator-Variable,prefix,ix,4,1.433645E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(<mask>))
            {
                opt = prefix;
                break;
            }
        }
        
        return opt;
    }"
2428,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16991,16991,AssignmentMutator,opt=prefix,|,0,0.45446944,opt <mask>= prefix,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt<mask>= prefix;
                break;
            }
        }
        
        return opt;
    }"
2429,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16991,16991,AssignmentMutator,opt=prefix,.,1,0.2710223,opt <mask>= prefix,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt<mask>= prefix;
                break;
            }
        }
        
        return opt;
    }"
2430,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16991,16991,AssignmentMutator,opt=prefix,+,2,0.14064823,opt <mask>= prefix,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt<mask>= prefix;
                break;
            }
        }
        
        return opt;
    }"
2431,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16991,16991,AssignmentMutator,opt=prefix,||,3,0.0297734,opt <mask>= prefix,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt<mask>= prefix;
                break;
            }
        }
        
        return opt;
    }"
2432,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16991,16991,AssignmentMutator,opt=prefix,.,4,0.026591195,opt <mask>= prefix,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt<mask>= prefix;
                break;
            }
        }
        
        return opt;
    }"
2433,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16988,16990,IdentifierMutator-Variable,opt,option,2,0.0018506892,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {<mask> = prefix;
                break;
            }
        }
        
        return opt;
    }"
2434,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16988,16990,IdentifierMutator-Variable,opt,Opt,3,6.108591E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {<mask> = prefix;
                break;
            }
        }
        
        return opt;
    }"
2435,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16988,16990,IdentifierMutator-Variable,opt,prefix,4,5.2279205E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {<mask> = prefix;
                break;
            }
        }
        
        return opt;
    }"
2436,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16994,16999,IdentifierMutator-Variable,prefix,null,2,4.170122E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt =<mask>;
                break;
            }
        }
        
        return opt;
    }"
2437,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16994,16999,IdentifierMutator-Variable,prefix,t,3,3.9237633E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt =<mask>;
                break;
            }
        }
        
        return opt;
    }"
2438,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,590,16994,16999,IdentifierMutator-Variable,prefix,"""""",4,3.0198542E-4,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt =<mask>;
                break;
            }
        }
        
        return opt;
    }"
2439,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,595,17073,17075,IdentifierMutator-Variable,opt,prefix,1,0.01719908,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return<mask>;
    }"
2440,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,595,17073,17075,IdentifierMutator-Variable,opt,token,2,0.0117900185,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return<mask>;
    }"
2441,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,595,17073,17075,IdentifierMutator-Variable,opt,null,3,0.010003741,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return<mask>;
    }"
2442,DefaultParser.java,getLongPrefix,String getLongPrefix(String token),579,595,17073,17075,IdentifierMutator-Variable,opt,false,4,0.004776873,<mask>,"String getLongPrefix(String token)
    {
        String t = Util.stripLeadingHyphens(token);

        int i;
        String opt = null;
        for (i = t.length() - 2; i > 1; i--)
        {
            String prefix = t.substring(0, i);
            if (options.hasLongOption(prefix))
            {
                opt = prefix;
                break;
            }
        }
        
        return<mask>;
    }"
2443,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17258,17266,MethodCallMutator,substring,slice,0,0.2886647,"token.<mask>(0, 1)","boolean isJavaProperty(String token)
    {
        String opt = token.<mask>(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2444,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17258,17266,MethodCallMutator,substring,replace,1,0.23153487,"token.<mask>(0, 1)","boolean isJavaProperty(String token)
    {
        String opt = token.<mask>(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2445,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17258,17266,MethodCallMutator,substring,split,2,0.13093017,"token.<mask>(0, 1)","boolean isJavaProperty(String token)
    {
        String opt = token.<mask>(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2446,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17258,17266,MethodCallMutator,substring,ring,3,0.09921298,"token.<mask>(0, 1)","boolean isJavaProperty(String token)
    {
        String opt = token.<mask>(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2447,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17258,17266,MethodCallMutator,substring,sub,4,0.033707198,"token.<mask>(0, 1)","boolean isJavaProperty(String token)
    {
        String opt = token.<mask>(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2448,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17252,17256,IdentifierMutator-Variable,token,input,1,6.83863E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt =<mask>.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2449,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17252,17256,IdentifierMutator-Variable,token,text,2,6.3281266E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt =<mask>.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2450,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17252,17256,IdentifierMutator-Variable,token,tokens,3,4.8894562E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt =<mask>.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2451,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17252,17256,IdentifierMutator-Variable,token,word,4,4.1420797E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt =<mask>.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2452,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17268,17268,IdentifierMutator-Literal,0,1,1,0.04474823,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(<mask>, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2453,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17268,17268,IdentifierMutator-Literal,0,2,2,0.009689415,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(<mask>, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2454,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17268,17268,IdentifierMutator-Literal,0,6,3,0.0035252739,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(<mask>, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2455,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17271,17271,IdentifierMutator-Literal,1,2,1,0.30682367,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0,<mask>);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2456,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17271,17271,IdentifierMutator-Literal,1,3,2,0.051204376,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0,<mask>);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2457,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17271,17271,IdentifierMutator-Literal,1,4,3,0.03980251,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0,<mask>);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2458,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,603,17271,17271,IdentifierMutator-Literal,1,pos,4,0.028448123,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0,<mask>);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2459,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17307,17315,MethodCallMutator,getOption,get,0,0.95616186,options.<mask>(opt),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.<mask>(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2460,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17307,17315,MethodCallMutator,getOption,get,1,0.024471391,options.<mask>(opt),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.<mask>(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2461,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17307,17315,MethodCallMutator,getOption,Get,2,0.0056143366,options.<mask>(opt),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.<mask>(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2462,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17307,17315,MethodCallMutator,getOption,option,3,0.0024636465,options.<mask>(opt),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.<mask>(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2463,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17307,17315,MethodCallMutator,getOption,find,4,0.0016037599,options.<mask>(opt),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.<mask>(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2464,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,IdentifierMutator-Variable,options,parser,0,0.15927976,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2465,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,IdentifierMutator-Variable,options,config,2,0.09784253,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2466,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,IdentifierMutator-Variable,options,this,3,0.031998295,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2467,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,IdentifierMutator-Variable,options,reader,4,0.025535217,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2468,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,FieldReferenceMutator,options,parser,0,0.15927976,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2469,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,FieldReferenceMutator,options,config,2,0.09784253,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2470,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,FieldReferenceMutator,options,this,3,0.031998295,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2471,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17299,17305,FieldReferenceMutator,options,reader,4,0.025535217,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option =<mask>.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2472,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17317,17319,IdentifierMutator-Variable,opt,op,1,6.423381E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(<mask>);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2473,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17317,17319,IdentifierMutator-Variable,opt,Opt,2,9.696598E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(<mask>);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2474,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17317,17319,IdentifierMutator-Variable,opt,option,3,8.967289E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(<mask>);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2475,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,604,17317,17319,IdentifierMutator-Variable,opt,token,4,5.2737993E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(<mask>);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2476,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17353,17356,BinaryOperatorMutator,&&,AND,2,0.0015697439,(option != null) <mask> ((option.getArgs() >= 2) || (option.getArgs() == Option.UNLIMITED_VALUES)),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null<mask>(option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2477,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17353,17356,BinaryOperatorMutator,&&,And,3,0.0012452751,(option != null) <mask> ((option.getArgs() >= 2) || (option.getArgs() == Option.UNLIMITED_VALUES)),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null<mask>(option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2478,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17353,17356,BinaryOperatorMutator,&&,&,4,0.0012105772,(option != null) <mask> ((option.getArgs() >= 2) || (option.getArgs() == Option.UNLIMITED_VALUES)),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null<mask>(option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2479,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17345,17348,BinaryOperatorMutator,!=,==,1,0.010646818,option <mask> null,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option<mask>null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2480,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17345,17348,BinaryOperatorMutator,!=,=,2,0.003443224,option <mask> null,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option<mask>null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2481,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17345,17348,BinaryOperatorMutator,!=,N,3,5.493529E-4,option <mask> null,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option<mask>null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2482,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17345,17348,BinaryOperatorMutator,!=,.,4,4.5920114E-4,option <mask> null,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option<mask>null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2483,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17339,17344,IdentifierMutator-Variable,option,options,1,3.1205994E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return<mask> != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2484,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17339,17344,IdentifierMutator-Variable,option,argument,2,8.246769E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return<mask> != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2485,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17339,17344,IdentifierMutator-Variable,option,error,3,3.967711E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return<mask> != null && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2486,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17349,17352,IdentifierMutator-Literal,null,nil,2,1.135938E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option !=<mask> && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2487,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17349,17352,IdentifierMutator-Literal,null,undefined,3,4.822035E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option !=<mask> && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2488,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17349,17352,IdentifierMutator-Literal,null,NULL,4,3.7364174E-5,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option !=<mask> && (option.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2489,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17379,17382,BinaryOperatorMutator,||,&&,1,0.03079778,(option.getArgs() >= 2) <mask> (option.getArgs() == Option.UNLIMITED_VALUES),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2<mask>option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2490,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17379,17382,BinaryOperatorMutator,||,&&,2,0.022445107,(option.getArgs() >= 2) <mask> (option.getArgs() == Option.UNLIMITED_VALUES),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2<mask>option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2491,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17379,17382,BinaryOperatorMutator,||,|,4,0.010294834,(option.getArgs() >= 2) <mask> (option.getArgs() == Option.UNLIMITED_VALUES),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2<mask>option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2492,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17374,17377,BinaryOperatorMutator,>=,>,0,0.62156343,option.getArgs() <mask> 2,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs()<mask>2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2493,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17374,17377,BinaryOperatorMutator,>=,==,1,0.26260084,option.getArgs() <mask> 2,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs()<mask>2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2494,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17374,17377,BinaryOperatorMutator,>=,<,2,0.029175894,option.getArgs() <mask> 2,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs()<mask>2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2495,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17374,17377,BinaryOperatorMutator,>=,==,3,0.020559741,option.getArgs() <mask> 2,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs()<mask>2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2496,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17374,17377,BinaryOperatorMutator,>=,>,4,0.01881529,option.getArgs() <mask> 2,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs()<mask>2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2497,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17365,17371,MethodCallMutator,getArgs,args,0,0.8030863,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.<mask>() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2498,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17365,17371,MethodCallMutator,getArgs,Args,1,0.090012915,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.<mask>() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2499,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17365,17371,MethodCallMutator,getArgs,size,2,0.01778769,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.<mask>() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2500,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17365,17371,MethodCallMutator,getArgs,arg,3,0.014073045,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.<mask>() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2501,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17365,17371,MethodCallMutator,getArgs,length,4,0.009746217,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.<mask>() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2502,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17358,17363,IdentifierMutator-Variable,option,Option,2,3.6212182E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (<mask>.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2503,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17358,17363,IdentifierMutator-Variable,option,options,3,1.7574777E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (<mask>.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2504,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17358,17363,IdentifierMutator-Variable,option,opt,4,1.4083159E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (<mask>.getArgs() >= 2 || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2505,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17378,17378,IdentifierMutator-Literal,2,0,0,0.4806046,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >=<mask> || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2506,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17378,17378,IdentifierMutator-Literal,2,1,1,0.34213027,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >=<mask> || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2507,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17378,17378,IdentifierMutator-Literal,2,3,3,0.01498655,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >=<mask> || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2508,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17378,17378,IdentifierMutator-Literal,2,5,4,0.007512261,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >=<mask> || option.getArgs() == Option.UNLIMITED_VALUES);
    }"
2509,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17399,17402,BinaryOperatorMutator,==,>=,1,0.20390038,option.getArgs() <mask> Option.UNLIMITED_VALUES,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs()<mask>Option.UNLIMITED_VALUES);
    }"
2510,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17399,17402,BinaryOperatorMutator,==,<=,3,0.054755088,option.getArgs() <mask> Option.UNLIMITED_VALUES,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs()<mask>Option.UNLIMITED_VALUES);
    }"
2511,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17399,17402,BinaryOperatorMutator,==,>,4,0.053407736,option.getArgs() <mask> Option.UNLIMITED_VALUES,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs()<mask>Option.UNLIMITED_VALUES);
    }"
2512,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17390,17396,MethodCallMutator,getArgs,value,0,0.26473522,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.<mask>() == Option.UNLIMITED_VALUES);
    }"
2513,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17390,17396,MethodCallMutator,getArgs,args,1,0.17842773,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.<mask>() == Option.UNLIMITED_VALUES);
    }"
2514,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17390,17396,MethodCallMutator,getArgs,values,2,0.09686655,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.<mask>() == Option.UNLIMITED_VALUES);
    }"
2515,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17390,17396,MethodCallMutator,getArgs,type,3,0.042586684,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.<mask>() == Option.UNLIMITED_VALUES);
    }"
2516,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17390,17396,MethodCallMutator,getArgs,default,4,0.033695333,option.<mask>(),"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.<mask>() == Option.UNLIMITED_VALUES);
    }"
2517,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17383,17388,IdentifierMutator-Variable,option,options,1,9.992344E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 ||<mask>.getArgs() == Option.UNLIMITED_VALUES);
    }"
2518,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17383,17388,IdentifierMutator-Variable,option,opt,3,1.3144017E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 ||<mask>.getArgs() == Option.UNLIMITED_VALUES);
    }"
2519,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17383,17388,IdentifierMutator-Variable,option,argument,4,1.1042962E-4,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 ||<mask>.getArgs() == Option.UNLIMITED_VALUES);
    }"
2520,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17403,17425,IdentifierMutator-Variable,Option.UNLIMITED_VALUES,1,0,0.7268102,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() ==<mask>);
    }"
2521,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17403,17425,IdentifierMutator-Variable,Option.UNLIMITED_VALUES,0,1,0.15403979,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() ==<mask>);
    }"
2522,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17403,17425,IdentifierMutator-Variable,Option.UNLIMITED_VALUES,3,2,0.056670982,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() ==<mask>);
    }"
2523,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17403,17425,IdentifierMutator-Variable,Option.UNLIMITED_VALUES,2,3,0.03584821,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() ==<mask>);
    }"
2524,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17403,17425,IdentifierMutator-Variable,Option.UNLIMITED_VALUES,4,4,0.006834616,<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() ==<mask>);
    }"
2525,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17410,17425,FieldReferenceMutator,UNLIMITED_VALUES,ALL,0,0.2997287,Option.<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.<mask>);
    }"
2526,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17410,17425,FieldReferenceMutator,UNLIMITED_VALUES,ANY,1,0.10014237,Option.<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.<mask>);
    }"
2527,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17410,17425,FieldReferenceMutator,UNLIMITED_VALUES,VALUE,2,0.06509717,Option.<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.<mask>);
    }"
2528,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17410,17425,FieldReferenceMutator,UNLIMITED_VALUES,NAME,3,0.027994499,Option.<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.<mask>);
    }"
2529,DefaultParser.java,isJavaProperty,boolean isJavaProperty(String token),601,606,17410,17425,FieldReferenceMutator,UNLIMITED_VALUES,*,4,0.023064418,Option.<mask>,"boolean isJavaProperty(String token)
    {
        String opt = token.substring(0, 1);
        Option option = options.getOption(opt);

        return option != null && (option.getArgs() >= 2 || option.getArgs() == Option.<mask>);
    }"
2530,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,612,17583,17599,MethodCallMutator,checkRequiredArgs,check,0,0.8947344,<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one<mask>();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2531,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,612,17583,17599,MethodCallMutator,checkRequiredArgs,validate,1,0.01573169,<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one<mask>();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2532,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,612,17583,17599,MethodCallMutator,checkRequiredArgs,Check,2,0.008744397,<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one<mask>();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2533,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,612,17583,17599,MethodCallMutator,checkRequiredArgs,check,3,0.0077235154,<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one<mask>();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2534,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,612,17583,17599,MethodCallMutator,checkRequiredArgs,verify,4,0.0075122556,<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one<mask>();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2535,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17619,17619,AssignmentMutator,option=((org.apache.commons.cli.Option)(option.clone())),|,0,0.45608,option <mask>= ((org.apache.commons.cli.Option) (option.clone())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option<mask>= (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2536,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17619,17619,AssignmentMutator,option=((org.apache.commons.cli.Option)(option.clone())),*,1,0.19500375,option <mask>= ((org.apache.commons.cli.Option) (option.clone())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option<mask>= (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2537,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17619,17619,AssignmentMutator,option=((org.apache.commons.cli.Option)(option.clone())),!,2,0.046815183,option <mask>= ((org.apache.commons.cli.Option) (option.clone())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option<mask>= (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2538,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17619,17619,AssignmentMutator,option=((org.apache.commons.cli.Option)(option.clone())),&,3,0.030283052,option <mask>= ((org.apache.commons.cli.Option) (option.clone())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option<mask>= (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2539,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17619,17619,AssignmentMutator,option=((org.apache.commons.cli.Option)(option.clone())),^,4,0.028407086,option <mask>= ((org.apache.commons.cli.Option) (option.clone())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option<mask>= (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2540,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17613,17618,IdentifierMutator-Variable,option,Option,2,0.001705011,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();<mask> = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2541,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17613,17618,IdentifierMutator-Variable,option,argument,3,0.0012629476,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();<mask> = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2542,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17613,17618,IdentifierMutator-Variable,option,options,4,8.231797E-4,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();<mask> = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2543,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17638,17642,MethodCallMutator,clone,parent,1,0.09173547,((Option) (option.<mask>())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.<mask>();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2544,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17638,17642,MethodCallMutator,clone,copy,2,0.034287933,((Option) (option.<mask>())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.<mask>();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2545,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17638,17642,MethodCallMutator,clone,next,3,0.025035447,((Option) (option.<mask>())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.<mask>();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2546,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17638,17642,MethodCallMutator,clone,value,4,0.024083564,((Option) (option.<mask>())),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.<mask>();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2547,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17631,17636,IdentifierMutator-Variable,option,Option,2,0.004620557,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option)<mask>.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2548,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17631,17636,IdentifierMutator-Variable,option,argument,3,0.0029250802,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option)<mask>.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2549,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,614,17631,17636,IdentifierMutator-Variable,option,argument,4,0.0026080792,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option)<mask>.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2550,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17656,17676,MethodCallMutator,updateRequiredOptions,check,0,0.59437704,<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();<mask>(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2551,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17656,17676,MethodCallMutator,updateRequiredOptions,validate,1,0.19390199,<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();<mask>(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2552,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17656,17676,MethodCallMutator,updateRequiredOptions,assert,2,0.035751875,<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();<mask>(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2553,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17656,17676,MethodCallMutator,updateRequiredOptions,verify,3,0.025215833,<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();<mask>(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2554,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17656,17676,MethodCallMutator,updateRequiredOptions,init,4,0.008004673,<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();<mask>(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2555,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17678,17683,IdentifierMutator-Variable,option,cmd,1,0.07385427,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(<mask>);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2556,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17678,17683,IdentifierMutator-Variable,option,command,2,0.029966438,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(<mask>);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2557,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17678,17683,IdentifierMutator-Variable,option,options,3,0.02318367,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(<mask>);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2558,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,616,17678,17683,IdentifierMutator-Variable,option,config,4,0.009733746,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(<mask>);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2559,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17700,17708,MethodCallMutator,addOption,add,0,0.665353,cmd.<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.<mask>(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2560,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17700,17708,MethodCallMutator,addOption,add,1,0.077691525,cmd.<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.<mask>(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2561,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17700,17708,MethodCallMutator,addOption,append,2,0.062102675,cmd.<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.<mask>(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2562,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17700,17708,MethodCallMutator,addOption,accept,3,0.02314194,cmd.<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.<mask>(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2563,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17700,17708,MethodCallMutator,addOption,insert,4,0.015635014,cmd.<mask>(option),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.<mask>(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2564,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,IdentifierMutator-Variable,cmd,parser,0,0.17052026,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2565,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,IdentifierMutator-Variable,cmd,options,1,0.06618763,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2566,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,IdentifierMutator-Variable,cmd,super,2,0.04341092,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2567,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,IdentifierMutator-Variable,cmd,this,3,0.04087435,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2568,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,IdentifierMutator-Variable,cmd,parent,4,0.038849298,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2569,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,FieldReferenceMutator,cmd,parser,0,0.17052026,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2570,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,FieldReferenceMutator,cmd,options,1,0.06618763,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2571,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,FieldReferenceMutator,cmd,super,2,0.04341092,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2572,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,FieldReferenceMutator,cmd,this,3,0.04087435,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2573,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17696,17698,FieldReferenceMutator,cmd,parent,4,0.038849298,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);<mask>.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2574,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17710,17715,IdentifierMutator-Variable,option,options,2,0.0012749153,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(<mask>);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2575,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17710,17715,IdentifierMutator-Variable,option,this,3,8.6432084E-4,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(<mask>);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2576,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,618,17710,17715,IdentifierMutator-Variable,option,Option,4,6.8129064E-4,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(<mask>);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2577,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17739,17744,MethodCallMutator,hasArg,valid,0,0.18885358,option.<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.<mask>())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2578,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17739,17744,MethodCallMutator,hasArg,check,1,0.1468741,option.<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.<mask>())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2579,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17739,17744,MethodCallMutator,hasArg,optional,2,0.08617781,option.<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.<mask>())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2580,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17739,17744,MethodCallMutator,hasArg,required,3,0.054173443,option.<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.<mask>())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2581,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17739,17744,MethodCallMutator,hasArg,flag,4,0.0496338,option.<mask>(),"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.<mask>())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2582,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17732,17737,IdentifierMutator-Variable,option,command,1,0.014317591,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (<mask>.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2583,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17732,17737,IdentifierMutator-Variable,option,cmd,2,0.004557649,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (<mask>.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2584,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17732,17737,IdentifierMutator-Variable,option,argument,3,0.002721268,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (<mask>.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2585,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,620,17732,17737,IdentifierMutator-Variable,option,options,4,0.0026067705,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (<mask>.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2586,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17784,17784,AssignmentMutator,currentOption=option,|,0,0.87176687,currentOption <mask>= option,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption<mask>= option;
        }
        else
        {
            currentOption = null;
        }
    }"
2587,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17784,17784,AssignmentMutator,currentOption=option,*,1,0.023027806,currentOption <mask>= option,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption<mask>= option;
        }
        else
        {
            currentOption = null;
        }
    }"
2588,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17784,17784,AssignmentMutator,currentOption=option,||,2,0.02149199,currentOption <mask>= option,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption<mask>= option;
        }
        else
        {
            currentOption = null;
        }
    }"
2589,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17784,17784,AssignmentMutator,currentOption=option,&,3,0.017217515,currentOption <mask>= option,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption<mask>= option;
        }
        else
        {
            currentOption = null;
        }
    }"
2590,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17784,17784,AssignmentMutator,currentOption=option,!,4,0.010812614,currentOption <mask>= option,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption<mask>= option;
        }
        else
        {
            currentOption = null;
        }
    }"
2591,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,IdentifierMutator-Variable,currentOption,current,0,0.23174441,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2592,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,IdentifierMutator-Variable,currentOption,arg,1,0.124451816,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2593,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,IdentifierMutator-Variable,currentOption,argument,2,0.10636505,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2594,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,IdentifierMutator-Variable,currentOption,option,3,0.07683899,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2595,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,IdentifierMutator-Variable,currentOption,cmd,4,0.05670217,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2596,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,FieldReferenceMutator,currentOption,current,0,0.23174441,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2597,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,FieldReferenceMutator,currentOption,arg,1,0.124451816,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2598,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,FieldReferenceMutator,currentOption,argument,2,0.10636505,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2599,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,FieldReferenceMutator,currentOption,option,3,0.07683899,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2600,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17771,17783,FieldReferenceMutator,currentOption,cmd,4,0.05670217,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {<mask> = option;
        }
        else
        {
            currentOption = null;
        }
    }"
2601,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17787,17792,IdentifierMutator-Variable,option,null,1,0.43829614,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption =<mask>;
        }
        else
        {
            currentOption = null;
        }
    }"
2602,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17787,17792,IdentifierMutator-Variable,option,argument,2,0.004972114,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption =<mask>;
        }
        else
        {
            currentOption = null;
        }
    }"
2603,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17787,17792,IdentifierMutator-Variable,option,false,3,0.004359882,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption =<mask>;
        }
        else
        {
            currentOption = null;
        }
    }"
2604,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,622,17787,17792,IdentifierMutator-Variable,option,arg,4,0.003710251,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption =<mask>;
        }
        else
        {
            currentOption = null;
        }
    }"
2605,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17853,17853,AssignmentMutator,currentOption=null,|,0,0.27136558,currentOption <mask>= null,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption<mask>= null;
        }
    }"
2606,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17853,17853,AssignmentMutator,currentOption=null,||,1,0.25782457,currentOption <mask>= null,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption<mask>= null;
        }
    }"
2607,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17853,17853,AssignmentMutator,currentOption=null,!,2,0.24378328,currentOption <mask>= null,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption<mask>= null;
        }
    }"
2608,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17853,17853,AssignmentMutator,currentOption=null,&,3,0.09261746,currentOption <mask>= null,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption<mask>= null;
        }
    }"
2609,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17853,17853,AssignmentMutator,currentOption=null,^,4,0.04203319,currentOption <mask>= null,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption<mask>= null;
        }
    }"
2610,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,IdentifierMutator-Variable,currentOption,option,0,0.55329674,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2611,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,IdentifierMutator-Variable,currentOption,cmd,1,0.10195233,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2612,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,IdentifierMutator-Variable,currentOption,command,2,0.07185794,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2613,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,IdentifierMutator-Variable,currentOption,argument,3,0.04777412,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2614,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,IdentifierMutator-Variable,currentOption,options,4,0.015562539,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2615,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,FieldReferenceMutator,currentOption,option,0,0.55329674,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2616,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,FieldReferenceMutator,currentOption,cmd,1,0.10195233,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2617,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,FieldReferenceMutator,currentOption,command,2,0.07185794,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2618,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,FieldReferenceMutator,currentOption,argument,3,0.04777412,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2619,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17840,17852,FieldReferenceMutator,currentOption,options,4,0.015562539,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {<mask> = null;
        }
    }"
2620,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17856,17859,IdentifierMutator-Literal,null,option,0,0.9799415,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption =<mask>;
        }
    }"
2621,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17856,17859,IdentifierMutator-Literal,null,argument,2,0.0010154549,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption =<mask>;
        }
    }"
2622,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17856,17859,IdentifierMutator-Literal,null,options,3,9.2164805E-4,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption =<mask>;
        }
    }"
2623,DefaultParser.java,handleOption,void handleOption(Option option) throws ParseException,609,626,17856,17859,IdentifierMutator-Literal,null,undefined,4,7.1629975E-4,<mask>,"void handleOption(Option option) throws ParseException
    {
        // check the previous option before handling the next one
        checkRequiredArgs();

        option = (Option) option.clone();

        updateRequiredOptions(option);

        cmd.addOption(option);

        if (option.hasArg())
        {
            currentOption = option;
        }
        else
        {
            currentOption =<mask>;
        }
    }"
2624,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18109,18118,MethodCallMutator,isRequired,required,0,0.6418232,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.<mask>())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2625,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18109,18118,MethodCallMutator,isRequired,selected,1,0.18055555,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.<mask>())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2626,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18109,18118,MethodCallMutator,isRequired,optional,2,0.06057944,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.<mask>())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2627,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18109,18118,MethodCallMutator,isRequired,select,3,0.012365767,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.<mask>())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2628,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18109,18118,MethodCallMutator,isRequired,value,4,0.0097148735,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.<mask>())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2629,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18102,18107,IdentifierMutator-Variable,option,group,1,0.042080093,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (<mask>.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2630,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18102,18107,IdentifierMutator-Variable,option,options,2,0.002252328,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (<mask>.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2631,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,637,18102,18107,IdentifierMutator-Variable,option,section,4,4.846766E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (<mask>.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2632,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18158,18163,MethodCallMutator,remove,add,1,0.479993,expectedOpts.<mask>(option.getKey()),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.<mask>(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2633,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18158,18163,MethodCallMutator,remove,push,2,0.0047572516,expectedOpts.<mask>(option.getKey()),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.<mask>(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2634,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18158,18163,MethodCallMutator,remove,get,3,0.0023160991,expectedOpts.<mask>(option.getKey()),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.<mask>(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2635,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18158,18163,MethodCallMutator,remove,delete,4,0.0018086995,expectedOpts.<mask>(option.getKey()),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.<mask>(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2636,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,IdentifierMutator-Variable,expectedOpts,required,0,0.29652968,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2637,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,IdentifierMutator-Variable,expectedOpts,options,1,0.13254926,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2638,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,IdentifierMutator-Variable,expectedOpts,selected,2,0.09952023,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2639,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,IdentifierMutator-Variable,expectedOpts,candidates,3,0.047008995,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2640,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,IdentifierMutator-Variable,expectedOpts,groups,4,0.033281133,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2641,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,FieldReferenceMutator,expectedOpts,required,0,0.29652968,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2642,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,FieldReferenceMutator,expectedOpts,options,1,0.13254926,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2643,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,FieldReferenceMutator,expectedOpts,selected,2,0.09952023,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2644,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,FieldReferenceMutator,expectedOpts,candidates,3,0.047008995,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2645,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18145,18156,FieldReferenceMutator,expectedOpts,groups,4,0.033281133,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {<mask>.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2646,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18172,18177,MethodCallMutator,getKey,name,0,0.29625696,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.<mask>());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2647,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18172,18177,MethodCallMutator,getKey,value,1,0.2545695,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.<mask>());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2648,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18172,18177,MethodCallMutator,getKey,get,2,0.08227245,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.<mask>());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2649,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18172,18177,MethodCallMutator,getKey,clone,3,0.03821867,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.<mask>());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2650,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18172,18177,MethodCallMutator,getKey,label,4,0.03406833,option.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.<mask>());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2651,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18165,18170,IdentifierMutator-Variable,option,group,1,0.07626856,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(<mask>.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2652,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18165,18170,IdentifierMutator-Variable,option,options,2,0.002784772,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(<mask>.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2653,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,639,18165,18170,IdentifierMutator-Variable,option,section,4,0.0010501059,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(<mask>.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2654,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18332,18335,BinaryOperatorMutator,!=,==,0,0.7487972,options.getOptionGroup(option) <mask> null,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option)<mask>null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2655,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18332,18335,BinaryOperatorMutator,!=,=,2,0.07578821,options.getOptionGroup(option) <mask> null,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option)<mask>null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2656,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18332,18335,BinaryOperatorMutator,!=,==,3,0.013350445,options.getOptionGroup(option) <mask> null,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option)<mask>null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2657,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18332,18335,BinaryOperatorMutator,!=,!,4,0.0017188565,options.getOptionGroup(option) <mask> null,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option)<mask>null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2658,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18310,18323,MethodCallMutator,getOptionGroup,get,0,0.9727817,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.<mask>(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2659,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18310,18323,MethodCallMutator,getOptionGroup,group,1,0.008063882,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.<mask>(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2660,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18310,18323,MethodCallMutator,getOptionGroup,find,2,0.0034216468,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.<mask>(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2661,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18310,18323,MethodCallMutator,getOptionGroup,add,3,0.0019183487,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.<mask>(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2662,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18310,18323,MethodCallMutator,getOptionGroup,remove,4,0.0017698259,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.<mask>(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2663,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,IdentifierMutator-Variable,options,groups,1,0.053048503,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2664,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,IdentifierMutator-Variable,options,group,2,3.4465207E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2665,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,IdentifierMutator-Variable,options,Options,3,7.969711E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2666,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,IdentifierMutator-Variable,options,option,4,7.793829E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2667,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,FieldReferenceMutator,options,groups,1,0.053048503,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2668,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,FieldReferenceMutator,options,group,2,3.4465207E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2669,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,FieldReferenceMutator,options,Options,3,7.969711E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2670,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18302,18308,FieldReferenceMutator,options,option,4,7.793829E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (<mask>.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2671,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18325,18330,IdentifierMutator-Variable,option,options,1,3.198972E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(<mask>) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2672,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18325,18330,IdentifierMutator-Variable,option,group,2,1.21130135E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(<mask>) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2673,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18325,18330,IdentifierMutator-Variable,option,opt,4,9.1699636E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(<mask>) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2674,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18336,18339,IdentifierMutator-Literal,null,group,1,0.026220942,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) !=<mask>)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2675,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18336,18339,IdentifierMutator-Literal,null,this,2,0.0017643681,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) !=<mask>)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2676,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,643,18336,18339,IdentifierMutator-Literal,null,option,4,3.5767525E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) !=<mask>)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2677,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18392,18405,MethodCallMutator,getOptionGroup,get,0,0.7388726,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.<mask>(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2678,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18392,18405,MethodCallMutator,getOptionGroup,group,1,0.24949475,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.<mask>(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2679,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18392,18405,MethodCallMutator,getOptionGroup,add,2,0.001876399,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.<mask>(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2680,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18392,18405,MethodCallMutator,getOptionGroup,remove,3,0.0016756115,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.<mask>(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2681,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18392,18405,MethodCallMutator,getOptionGroup,find,4,9.262488E-4,options.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.<mask>(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2682,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,IdentifierMutator-Variable,options,groups,1,0.0023799017,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2683,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,IdentifierMutator-Variable,options,group,3,5.3195618E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2684,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,IdentifierMutator-Variable,options,defaults,4,4.5646222E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2685,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,FieldReferenceMutator,options,groups,1,0.0023799017,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2686,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,FieldReferenceMutator,options,group,3,5.3195618E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2687,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18384,18390,FieldReferenceMutator,options,defaults,4,4.5646222E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group =<mask>.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2688,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18407,18412,IdentifierMutator-Variable,option,group,1,2.4132108E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(<mask>);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2689,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18407,18412,IdentifierMutator-Variable,option,options,2,2.2911753E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(<mask>);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2690,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,645,18407,18412,IdentifierMutator-Variable,option,section,3,1.626215E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(<mask>);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2691,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18439,18448,MethodCallMutator,isRequired,selected,0,0.59153426,group.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.<mask>())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2692,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18439,18448,MethodCallMutator,isRequired,required,1,0.078959964,group.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.<mask>())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2693,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18439,18448,MethodCallMutator,isRequired,empty,2,0.04638498,group.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.<mask>())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2694,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18439,18448,MethodCallMutator,isRequired,select,3,0.042139456,group.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.<mask>())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2695,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18439,18448,MethodCallMutator,isRequired,selection,4,0.029714765,group.<mask>(),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.<mask>())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2696,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18433,18437,IdentifierMutator-Variable,group,option,1,0.012212209,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (<mask>.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2697,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18433,18437,IdentifierMutator-Variable,group,parent,3,1.122404E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (<mask>.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2698,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,647,18433,18437,IdentifierMutator-Variable,group,default,4,9.3096714E-5,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (<mask>.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(option);
        }
    }"
2699,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18496,18501,MethodCallMutator,remove,add,0,0.9425376,expectedOpts.<mask>(group),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.<mask>(group);
            }

            group.setSelected(option);
        }
    }"
2700,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18496,18501,MethodCallMutator,remove,push,2,0.015714496,expectedOpts.<mask>(group),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.<mask>(group);
            }

            group.setSelected(option);
        }
    }"
2701,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18496,18501,MethodCallMutator,remove,append,3,0.0011939274,expectedOpts.<mask>(group),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.<mask>(group);
            }

            group.setSelected(option);
        }
    }"
2702,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18496,18501,MethodCallMutator,remove,added,4,4.6225233E-4,expectedOpts.<mask>(group),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.<mask>(group);
            }

            group.setSelected(option);
        }
    }"
2703,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,IdentifierMutator-Variable,expectedOpts,groups,0,0.5594244,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2704,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,IdentifierMutator-Variable,expectedOpts,required,1,0.049681246,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2705,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,IdentifierMutator-Variable,expectedOpts,selected,2,0.044324502,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2706,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,IdentifierMutator-Variable,expectedOpts,group,3,0.03370246,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2707,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,IdentifierMutator-Variable,expectedOpts,options,4,0.020107219,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2708,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,FieldReferenceMutator,expectedOpts,groups,0,0.5594244,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2709,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,FieldReferenceMutator,expectedOpts,required,1,0.049681246,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2710,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,FieldReferenceMutator,expectedOpts,selected,2,0.044324502,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2711,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,FieldReferenceMutator,expectedOpts,group,3,0.03370246,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2712,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18483,18494,FieldReferenceMutator,expectedOpts,options,4,0.020107219,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {<mask>.remove(group);
            }

            group.setSelected(option);
        }
    }"
2713,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18503,18507,IdentifierMutator-Variable,group,option,0,0.8263177,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(<mask>);
            }

            group.setSelected(option);
        }
    }"
2714,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18503,18507,IdentifierMutator-Variable,group,key,2,0.0020906914,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(<mask>);
            }

            group.setSelected(option);
        }
    }"
2715,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18503,18507,IdentifierMutator-Variable,group,section,3,7.53699E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(<mask>);
            }

            group.setSelected(option);
        }
    }"
2716,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,649,18503,18507,IdentifierMutator-Variable,group,options,4,5.976516E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(<mask>);
            }

            group.setSelected(option);
        }
    }"
2717,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18544,18554,MethodCallMutator,setSelected,add,0,0.30819118,group.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.<mask>(option);
        }
    }"
2718,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18544,18554,MethodCallMutator,setSelected,select,1,0.28496665,group.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.<mask>(option);
        }
    }"
2719,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18544,18554,MethodCallMutator,setSelected,selected,2,0.15685898,group.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.<mask>(option);
        }
    }"
2720,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18544,18554,MethodCallMutator,setSelected,update,3,0.090823196,group.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.<mask>(option);
        }
    }"
2721,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18544,18554,MethodCallMutator,setSelected,append,4,0.015826415,group.<mask>(option),"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.<mask>(option);
        }
    }"
2722,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18538,18542,IdentifierMutator-Variable,group,option,1,0.004654881,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }<mask>.setSelected(option);
        }
    }"
2723,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18538,18542,IdentifierMutator-Variable,group,this,3,8.388416E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }<mask>.setSelected(option);
        }
    }"
2724,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18538,18542,IdentifierMutator-Variable,group,element,4,6.9234904E-4,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }<mask>.setSelected(option);
        }
    }"
2725,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18556,18561,IdentifierMutator-Variable,option,true,0,0.74214405,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(<mask>);
        }
    }"
2726,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18556,18561,IdentifierMutator-Variable,option,selected,1,0.11321543,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(<mask>);
        }
    }"
2727,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18556,18561,IdentifierMutator-Variable,option,false,2,0.06503548,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(<mask>);
        }
    }"
2728,DefaultParser.java,updateRequiredOptions,void updateRequiredOptions(Option option) throws AlreadySelectedException,635,652,18556,18561,IdentifierMutator-Variable,option,current,4,0.003803827,<mask>,"void updateRequiredOptions(Option option) throws AlreadySelectedException
    {
        if (option.isRequired())
        {
            expectedOpts.remove(option.getKey());
        }

        // if the option is in an OptionGroup make that option the selected option of the group
        if (options.getOptionGroup(option) != null)
        {
            OptionGroup group = options.getOptionGroup(option);

            if (group.isRequired())
            {
                expectedOpts.remove(group);
            }

            group.setSelected(<mask>);
        }
    }"
2729,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20054,20054,IdentifierMutator-Literal,1,0,0,0.73975474,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i =<mask>; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2730,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20054,20054,IdentifierMutator-Literal,1,2,2,0.0064604995,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i =<mask>; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2731,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20054,20054,IdentifierMutator-Literal,1,0,4,9.714183E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i =<mask>; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2732,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20058,20060,BinaryOperatorMutator,<,<=,2,0.034491193,i <mask> token.length(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i<mask>token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2733,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20058,20060,BinaryOperatorMutator,<,>,3,0.0015800069,i <mask> token.length(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i<mask>token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2734,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20058,20060,BinaryOperatorMutator,<,==,4,8.709647E-4,i <mask> token.length(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i<mask>token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2735,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20057,20057,IdentifierMutator-Variable,i,I,2,1.7588642E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1;<mask> < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2736,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20057,20057,IdentifierMutator-Variable,i,I,3,1.3447023E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1;<mask> < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2737,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20057,20057,IdentifierMutator-Variable,i,0,4,1.0877152E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1;<mask> < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2738,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20067,20072,MethodCallMutator,length,len,2,5.081526E-6,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.<mask>(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2739,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20067,20072,MethodCallMutator,length,width,3,2.517256E-6,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.<mask>(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2740,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20067,20072,MethodCallMutator,length,Length,4,2.0985858E-6,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.<mask>(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2741,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20061,20065,IdentifierMutator-Variable,token,option,1,6.952708E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i <<mask>.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2742,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20061,20065,IdentifierMutator-Variable,token,tokens,3,4.7543662E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i <<mask>.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2743,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20061,20065,IdentifierMutator-Variable,token,line,4,2.3328912E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i <<mask>.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2744,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20078,20079,UnaryOperatorMutator,++,++),2,0.012362416,i<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i<mask>)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2745,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20078,20079,UnaryOperatorMutator,++,++;,3,8.962182E-4,i<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i<mask>)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2746,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20078,20079,UnaryOperatorMutator,++,--,4,8.5397036E-4,i<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i<mask>)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2747,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20077,20077,IdentifierMutator-Variable,i,,2,4.930367E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length();<mask>++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2748,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20077,20077,IdentifierMutator-Variable,i,I,3,4.6649693E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length();<mask>++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2749,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,685,20077,20077,IdentifierMutator-Variable,i,I,4,3.810368E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length();<mask>++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2750,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20123,20129,MethodCallMutator,valueOf,name,0,0.31797165,String.<mask>(token.charAt(i)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.<mask>(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2751,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20123,20129,MethodCallMutator,valueOf,value,1,0.06851914,String.<mask>(token.charAt(i)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.<mask>(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2752,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20123,20129,MethodCallMutator,valueOf,escape,2,0.05373935,String.<mask>(token.charAt(i)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.<mask>(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2753,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20123,20129,MethodCallMutator,valueOf,from,3,0.04842608,String.<mask>(token.charAt(i)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.<mask>(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2754,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20123,20129,MethodCallMutator,valueOf,trim,4,0.043863706,String.<mask>(token.charAt(i)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.<mask>(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2755,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20137,20142,MethodCallMutator,charAt,string,0,0.28189793,token.<mask>(i),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.<mask>(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2756,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20137,20142,MethodCallMutator,charAt,slice,1,0.16182603,token.<mask>(i),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.<mask>(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2757,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20137,20142,MethodCallMutator,charAt,get,2,0.115613036,token.<mask>(i),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.<mask>(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2758,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20137,20142,MethodCallMutator,charAt,group,3,0.074546784,token.<mask>(i),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.<mask>(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2759,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20137,20142,MethodCallMutator,charAt,tag,4,0.052140802,token.<mask>(i),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.<mask>(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2760,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20131,20135,IdentifierMutator-Variable,token,Token,2,7.776313E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(<mask>.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2761,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20131,20135,IdentifierMutator-Variable,token,word,3,7.391619E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(<mask>.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2762,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20131,20135,IdentifierMutator-Variable,token,tag,4,4.0292605E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(<mask>.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2763,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20144,20144,IdentifierMutator-Variable,i,0,1,0.0032462138,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(<mask>));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2764,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20144,20144,IdentifierMutator-Variable,i,1,2,3.1139897E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(<mask>));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2765,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,687,20144,20144,IdentifierMutator-Variable,i,I,4,7.046223E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(<mask>));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2766,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20174,20182,MethodCallMutator,hasOption,has,0,0.7221107,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.<mask>(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2767,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20174,20182,MethodCallMutator,hasOption,get,1,0.041999508,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.<mask>(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2768,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20174,20182,MethodCallMutator,hasOption,option,2,0.015869709,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.<mask>(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2769,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20174,20182,MethodCallMutator,hasOption,include,3,0.015390695,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.<mask>(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2770,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20174,20182,MethodCallMutator,hasOption,includes,4,0.011612985,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.<mask>(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2771,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,IdentifierMutator-Variable,options,this,1,1.1446386E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2772,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,IdentifierMutator-Variable,options,Options,2,9.2864844E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2773,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,IdentifierMutator-Variable,options,option,3,4.6685043E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2774,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,FieldReferenceMutator,options,this,1,1.1446386E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2775,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,FieldReferenceMutator,options,Options,2,9.2864844E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2776,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20166,20172,FieldReferenceMutator,options,option,3,4.6685043E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (<mask>.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2777,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20184,20185,IdentifierMutator-Variable,ch,Ch,1,4.0522285E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(<mask>))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2778,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20184,20185,IdentifierMutator-Variable,ch,sch,2,2.6171989E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(<mask>))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2779,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20184,20185,IdentifierMutator-Variable,ch,char,3,1.1971421E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(<mask>))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2780,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,689,20184,20185,IdentifierMutator-Variable,ch,chan,4,9.6022595E-6,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(<mask>))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2781,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20219,20230,MethodCallMutator,handleOption,add,0,0.13516589,<mask>(options.getOption(ch)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {<mask>(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2782,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20219,20230,MethodCallMutator,handleOption,parse,1,0.08265654,<mask>(options.getOption(ch)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {<mask>(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2783,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20219,20230,MethodCallMutator,handleOption,print,2,0.042011634,<mask>(options.getOption(ch)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {<mask>(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2784,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20219,20230,MethodCallMutator,handleOption,assert,3,0.03363714,<mask>(options.getOption(ch)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {<mask>(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2785,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20219,20230,MethodCallMutator,handleOption,accept,4,0.0307912,<mask>(options.getOption(ch)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {<mask>(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2786,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20240,20248,MethodCallMutator,getOption,get,0,0.71483785,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.<mask>(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2787,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20240,20248,MethodCallMutator,getOption,option,1,0.23470381,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.<mask>(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2788,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20240,20248,MethodCallMutator,getOption,options,2,0.01245518,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.<mask>(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2789,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20240,20248,MethodCallMutator,getOption,group,3,0.0061455313,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.<mask>(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2790,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20240,20248,MethodCallMutator,getOption,parse,4,0.0032492706,options.<mask>(ch),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.<mask>(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2791,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,IdentifierMutator-Variable,options,Options,1,3.009857E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2792,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,IdentifierMutator-Variable,options,this,3,5.3207248E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2793,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,IdentifierMutator-Variable,options,config,4,4.804344E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2794,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,FieldReferenceMutator,options,Options,1,3.009857E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2795,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,FieldReferenceMutator,options,this,3,5.3207248E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2796,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20232,20238,FieldReferenceMutator,options,config,4,4.804344E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(<mask>.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2797,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20250,20251,IdentifierMutator-Variable,ch,sch,1,3.1762964E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(<mask>));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2798,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20250,20251,IdentifierMutator-Variable,ch,char,2,2.8588915E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(<mask>));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2799,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20250,20251,IdentifierMutator-Variable,ch,Ch,3,2.5618776E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(<mask>));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2800,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,691,20250,20251,IdentifierMutator-Variable,ch,anch,4,6.363106E-6,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(<mask>));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2801,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20298,20301,BinaryOperatorMutator,&&,&,2,0.009536962,(currentOption != null) <mask> (token.length() != (i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null<mask>token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2802,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20298,20301,BinaryOperatorMutator,&&,||,3,0.0052739885,(currentOption != null) <mask> (token.length() != (i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null<mask>token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2803,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20298,20301,BinaryOperatorMutator,&&,||,4,0.0025683567,(currentOption != null) <mask> (token.length() != (i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null<mask>token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2804,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20290,20293,BinaryOperatorMutator,!=,==,0,0.64048076,currentOption <mask> null,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption<mask>null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2805,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20290,20293,BinaryOperatorMutator,!=,=,2,0.14271173,currentOption <mask> null,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption<mask>null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2806,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20290,20293,BinaryOperatorMutator,!=,==,3,0.026307635,currentOption <mask> null,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption<mask>null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2807,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20290,20293,BinaryOperatorMutator,!=,:,4,0.0010732914,currentOption <mask> null,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption<mask>null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2808,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,IdentifierMutator-Variable,currentOption,token,0,0.7703449,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2809,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,IdentifierMutator-Variable,currentOption,i,1,0.069953755,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2810,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,IdentifierMutator-Variable,currentOption,ch,2,0.04139669,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2811,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,IdentifierMutator-Variable,currentOption,cho,3,0.0065106233,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2812,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,IdentifierMutator-Variable,currentOption,option,4,0.003886351,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2813,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,FieldReferenceMutator,currentOption,token,0,0.7703449,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2814,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,FieldReferenceMutator,currentOption,i,1,0.069953755,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2815,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,FieldReferenceMutator,currentOption,ch,2,0.04139669,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2816,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,FieldReferenceMutator,currentOption,cho,3,0.0065106233,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2817,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20277,20289,FieldReferenceMutator,currentOption,option,4,0.003886351,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (<mask> != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2818,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20294,20297,IdentifierMutator-Literal,null,options,1,0.001775707,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption !=<mask> && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2819,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20294,20297,IdentifierMutator-Literal,null,nil,2,0.0013922128,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption !=<mask> && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2820,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20294,20297,IdentifierMutator-Literal,null,this,4,9.424397E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption !=<mask> && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2821,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20316,20319,BinaryOperatorMutator,!=,==,0,0.57983863,token.length() <mask> (i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length()<mask>i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2822,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20316,20319,BinaryOperatorMutator,!=,<,1,0.25389466,token.length() <mask> (i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length()<mask>i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2823,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20316,20319,BinaryOperatorMutator,!=,>,2,0.0836997,token.length() <mask> (i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length()<mask>i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2824,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20316,20319,BinaryOperatorMutator,!=,>(,3,0.014919966,token.length() <mask> (i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length()<mask>i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2825,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20316,20319,BinaryOperatorMutator,!=,>,4,0.011560679,token.length() <mask> (i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length()<mask>i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2826,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20308,20313,MethodCallMutator,length,position,1,0.003010514,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.<mask>() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2827,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20308,20313,MethodCallMutator,length,index,2,5.8868364E-4,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.<mask>() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2828,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20308,20313,MethodCallMutator,length,pos,3,1.9027594E-4,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.<mask>() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2829,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20308,20313,MethodCallMutator,length,len,4,1.890835E-4,token.<mask>(),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.<mask>() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2830,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20302,20306,IdentifierMutator-Variable,token,option,1,3.8772234E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null &&<mask>.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2831,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20302,20306,IdentifierMutator-Variable,token,line,2,1.941673E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null &&<mask>.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2832,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20302,20306,IdentifierMutator-Variable,token,tokens,3,1.5889136E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null &&<mask>.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2833,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20321,20323,BinaryOperatorMutator,+,-,1,0.30395928,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i<mask>1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2834,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20321,20323,BinaryOperatorMutator,+,-,3,0.0151965,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i<mask>1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2835,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20321,20323,BinaryOperatorMutator,+,)+,4,0.00222491,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i<mask>1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2836,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20320,20320,IdentifierMutator-Variable,i,ch,1,9.099228E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() !=<mask> + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2837,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20320,20320,IdentifierMutator-Variable,i,j,3,3.9612697E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() !=<mask> + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2838,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20320,20320,IdentifierMutator-Variable,i,c,4,3.42437E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() !=<mask> + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2839,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20324,20324,IdentifierMutator-Literal,1,2,1,0.016496656,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i +<mask>)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2840,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20324,20324,IdentifierMutator-Literal,1,3,2,6.377644E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i +<mask>)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2841,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,693,20324,20324,IdentifierMutator-Literal,1,4,3,4.5160914E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i +<mask>)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2842,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20445,20465,MethodCallMutator,addValueForProcessing,add,0,0.51976985,currentOption.<mask>(token.substring(i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.<mask>(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2843,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20445,20465,MethodCallMutator,addValueForProcessing,append,1,0.3460763,currentOption.<mask>(token.substring(i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.<mask>(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2844,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20445,20465,MethodCallMutator,addValueForProcessing,argument,2,0.021204576,currentOption.<mask>(token.substring(i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.<mask>(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2845,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20445,20465,MethodCallMutator,addValueForProcessing,push,3,0.016584467,currentOption.<mask>(token.substring(i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.<mask>(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2846,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20445,20465,MethodCallMutator,addValueForProcessing,set,4,0.009641269,currentOption.<mask>(token.substring(i + 1)),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.<mask>(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2847,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,IdentifierMutator-Variable,currentOption,Option,0,0.4494546,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2848,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,IdentifierMutator-Variable,currentOption,option,1,0.3254105,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2849,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,IdentifierMutator-Variable,currentOption,argument,2,0.12675841,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2850,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,IdentifierMutator-Variable,currentOption,options,3,0.0069538574,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2851,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,IdentifierMutator-Variable,currentOption,Options,4,0.0039207432,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2852,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,FieldReferenceMutator,currentOption,Option,0,0.4494546,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2853,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,FieldReferenceMutator,currentOption,option,1,0.3254105,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2854,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,FieldReferenceMutator,currentOption,argument,2,0.12675841,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2855,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,FieldReferenceMutator,currentOption,options,3,0.0069538574,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2856,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20431,20443,FieldReferenceMutator,currentOption,Options,4,0.0039207432,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option<mask>.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2857,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20473,20481,MethodCallMutator,substring,slice,0,0.3037879,token.<mask>(i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.<mask>(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2858,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20473,20481,MethodCallMutator,substring,length,1,0.14768407,token.<mask>(i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.<mask>(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2859,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20473,20481,MethodCallMutator,substring,ring,2,0.12525158,token.<mask>(i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.<mask>(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2860,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20473,20481,MethodCallMutator,substring,get,3,0.054400653,token.<mask>(i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.<mask>(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2861,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20473,20481,MethodCallMutator,substring,repeat,4,0.04304037,token.<mask>(i + 1),"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.<mask>(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2862,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20467,20471,IdentifierMutator-Variable,token,word,2,6.394051E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(<mask>.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2863,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20467,20471,IdentifierMutator-Variable,token,tag,3,1.2132567E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(<mask>.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2864,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20467,20471,IdentifierMutator-Variable,token,text,4,9.13311E-5,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(<mask>.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2865,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20484,20486,BinaryOperatorMutator,+,)+,1,0.024394251,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i<mask>1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2866,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20484,20486,BinaryOperatorMutator,+,-,3,0.003741886,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i<mask>1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2867,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20484,20486,BinaryOperatorMutator,+,",",4,8.3631586E-4,i <mask> 1,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i<mask>1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2868,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20483,20483,IdentifierMutator-Variable,i,j,1,3.1082105E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(<mask> + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2869,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20483,20483,IdentifierMutator-Variable,i,I,3,1.9223013E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(<mask> + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2870,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20483,20483,IdentifierMutator-Variable,i,c,4,1.16256604E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(<mask> + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2871,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20487,20487,IdentifierMutator-Literal,1,2,1,0.015111755,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i +<mask>));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2872,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20487,20487,IdentifierMutator-Literal,1,3,3,3.289081E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i +<mask>));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2873,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,696,20487,20487,IdentifierMutator-Literal,1,4,4,2.0915484E-4,<mask>,"void handleConcatenatedOptions(String token) throws ParseException
    {
        for (int i = 1; i < token.length(); i++)
        {
            String ch = String.valueOf(token.charAt(i));

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i +<mask>));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2874,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20598,20615,MethodCallMutator,handleUnknownToken,print,0,0.1277428,<mask>(stopAtNonOption && (i > 1) ? token.substring(i) : token),"

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {<mask>(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2875,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20598,20615,MethodCallMutator,handleUnknownToken,if,1,0.06879932,<mask>(stopAtNonOption && (i > 1) ? token.substring(i) : token),"

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {<mask>(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2876,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20598,20615,MethodCallMutator,handleUnknownToken,assert,2,0.033258677,<mask>(stopAtNonOption && (i > 1) ? token.substring(i) : token),"

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {<mask>(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2877,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20598,20615,MethodCallMutator,handleUnknownToken,stop,3,0.030241448,<mask>(stopAtNonOption && (i > 1) ? token.substring(i) : token),"

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {<mask>(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2878,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20598,20615,MethodCallMutator,handleUnknownToken,step,4,0.022118153,<mask>(stopAtNonOption && (i > 1) ? token.substring(i) : token),"

            if (options.hasOption(ch))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {<mask>(stopAtNonOption && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2879,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20669,IdentifierMutator-Conditional,stopAtNonOption&&(i>1)?token.substring(i):token,ch,0,0.5376676,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask>);
                break;
            }
        }
    }"
2880,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20669,IdentifierMutator-Conditional,stopAtNonOption&&(i>1)?token.substring(i):token,token,1,0.14918362,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask>);
                break;
            }
        }
    }"
2881,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20669,IdentifierMutator-Conditional,stopAtNonOption&&(i>1)?token.substring(i):token,options,2,0.0994862,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask>);
                break;
            }
        }
    }"
2882,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20669,IdentifierMutator-Conditional,stopAtNonOption&&(i>1)?token.substring(i):token,option,3,0.023086442,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask>);
                break;
            }
        }
    }"
2883,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20669,IdentifierMutator-Conditional,stopAtNonOption&&(i>1)?token.substring(i):token,cho,4,0.019424034,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask>);
                break;
            }
        }
    }"
2884,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20632,20635,BinaryOperatorMutator,&&,(,0,0.3789965,stopAtNonOption <mask> (i > 1),"          {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption<mask>i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2885,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20632,20635,BinaryOperatorMutator,&&,",",1,0.22258222,stopAtNonOption <mask> (i > 1),"          {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption<mask>i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2886,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20632,20635,BinaryOperatorMutator,&&,+,2,0.07365872,stopAtNonOption <mask> (i > 1),"          {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption<mask>i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2887,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20632,20635,BinaryOperatorMutator,&&,)(,3,0.07299913,stopAtNonOption <mask> (i > 1),"          {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption<mask>i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2888,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20632,20635,BinaryOperatorMutator,&&,"(),",4,0.035296097,stopAtNonOption <mask> (i > 1),"          {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption<mask>i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2889,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,IdentifierMutator-Variable,stopAtNonOption,i,0,0.7987892,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2890,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,IdentifierMutator-Variable,stopAtNonOption,token,1,0.12417581,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2891,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,IdentifierMutator-Variable,stopAtNonOption,cli,2,0.0043579643,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2892,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,IdentifierMutator-Variable,stopAtNonOption,ok,3,0.0041909856,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2893,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,IdentifierMutator-Variable,stopAtNonOption,current,4,0.0033431076,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2894,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,FieldReferenceMutator,stopAtNonOption,i,0,0.7987892,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2895,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,FieldReferenceMutator,stopAtNonOption,token,1,0.12417581,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2896,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,FieldReferenceMutator,stopAtNonOption,cli,2,0.0043579643,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2897,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,FieldReferenceMutator,stopAtNonOption,ok,3,0.0041909856,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2898,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20617,20631,FieldReferenceMutator,stopAtNonOption,current,4,0.0033431076,<mask>,"))
            {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(<mask> && i > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2899,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20637,20639,BinaryOperatorMutator,>,+,0,0.601771,i <mask> 1,"        {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i<mask>1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2900,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20637,20639,BinaryOperatorMutator,>,-,1,0.23883393,i <mask> 1,"        {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i<mask>1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2901,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20637,20639,BinaryOperatorMutator,>,+,2,0.050943192,i <mask> 1,"        {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i<mask>1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2902,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20637,20639,BinaryOperatorMutator,>,==,3,0.027552858,i <mask> 1,"        {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i<mask>1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2903,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20636,20636,IdentifierMutator-Variable,i,ch,1,0.0015967825,<mask>,"         {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption &&<mask> > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2904,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20636,20636,IdentifierMutator-Variable,i,index,3,8.9564204E-4,<mask>,"         {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption &&<mask> > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2905,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20636,20636,IdentifierMutator-Variable,i,j,4,4.7517044E-4,<mask>,"         {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption &&<mask> > 1 ? token.substring(i) : token);
                break;
            }
        }
    }"
2906,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20640,20640,IdentifierMutator-Literal,1,0,0,0.87084955,<mask>,"       {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i ><mask> ? token.substring(i) : token);
                break;
            }
        }
    }"
2907,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20640,20640,IdentifierMutator-Literal,1,i,2,0.024778992,<mask>,"       {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i ><mask> ? token.substring(i) : token);
                break;
            }
        }
    }"
2908,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20640,20640,IdentifierMutator-Literal,1,2,3,0.0042624343,<mask>,"       {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i ><mask> ? token.substring(i) : token);
                break;
            }
        }
    }"
2909,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20640,20640,IdentifierMutator-Literal,1,ch,4,0.0032018223,<mask>,"       {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i ><mask> ? token.substring(i) : token);
                break;
            }
        }
    }"
2910,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20650,20658,MethodCallMutator,substring,slice,0,0.41212398,token.<mask>(i),"   {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.<mask>(i) : token);
                break;
            }
        }
    }"
2911,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20650,20658,MethodCallMutator,substring,length,1,0.15871833,token.<mask>(i),"   {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.<mask>(i) : token);
                break;
            }
        }
    }"
2912,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20650,20658,MethodCallMutator,substring,ring,2,0.07643095,token.<mask>(i),"   {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.<mask>(i) : token);
                break;
            }
        }
    }"
2913,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20650,20658,MethodCallMutator,substring,group,3,0.059625726,token.<mask>(i),"   {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.<mask>(i) : token);
                break;
            }
        }
    }"
2914,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20650,20658,MethodCallMutator,substring,get,4,0.04133621,token.<mask>(i),"   {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.<mask>(i) : token);
                break;
            }
        }
    }"
2915,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20644,20648,IdentifierMutator-Variable,token,option,1,4.8281558E-4,<mask>,"     {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ?<mask>.substring(i) : token);
                break;
            }
        }
    }"
2916,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20644,20648,IdentifierMutator-Variable,token,text,3,2.3009746E-4,<mask>,"     {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ?<mask>.substring(i) : token);
                break;
            }
        }
    }"
2917,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20644,20648,IdentifierMutator-Variable,token,selector,4,2.1115938E-4,<mask>,"     {
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ?<mask>.substring(i) : token);
                break;
            }
        }
    }"
2918,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20660,20660,IdentifierMutator-Variable,i,1,1,0.016845884,<mask>,"
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(<mask>) : token);
                break;
            }
        }
    }"
2919,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20660,20660,IdentifierMutator-Variable,i,2,2,0.0017308632,<mask>,"
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(<mask>) : token);
                break;
            }
        }
    }"
2920,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20660,20660,IdentifierMutator-Variable,i,3,3,2.8496847E-4,<mask>,"
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(<mask>) : token);
                break;
            }
        }
    }"
2921,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20660,20660,IdentifierMutator-Variable,i,0,4,2.7444854E-4,<mask>,"
                handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(<mask>) : token);
                break;
            }
        }
    }"
2922,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20665,20669,IdentifierMutator-Variable,token,null,1,0.24164402,<mask>,"              handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) :<mask>);
                break;
            }
        }
    }"
2923,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20665,20669,IdentifierMutator-Variable,token,"""""",2,0.20138077,<mask>,"              handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) :<mask>);
                break;
            }
        }
    }"
2924,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20665,20669,IdentifierMutator-Variable,token,"''",3,0.086318575,<mask>,"              handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) :<mask>);
                break;
            }
        }
    }"
2925,DefaultParser.java,handleConcatenatedOptions,void handleConcatenatedOptions(String token) throws ParseException,683,702,20665,20669,IdentifierMutator-Variable,token,false,4,0.02854727,<mask>,"              handleOption(options.getOption(ch));

                if (currentOption != null && token.length() != i + 1)
                {
                    // add the trail as an argument of the option
                    currentOption.addValueForProcessing(token.substring(i + 1));
                    break;
                }
            }
            else
            {
                handleUnknownToken(stopAtNonOption && i > 1 ? token.substring(i) :<mask>);
                break;
            }
        }
    }"
