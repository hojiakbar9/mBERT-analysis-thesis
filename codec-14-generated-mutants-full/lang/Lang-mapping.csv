id,classname,method_name,method_sig,method_def_line,mut_location,mut_start,mut_end,mut_operator,orig_token,pred_token,pred_pos,pred_score,masked_expr,masked_seq
0,Lang.java,matches,boolean matches(final String txt),91,92,4058,4061,MethodCallMutator,find,matches,0,0.6655857,this.pattern.matcher(txt).<mask>(),"boolean matches(final String txt) {
            return this.pattern.matcher(txt).<mask>();
        }"
1,Lang.java,matches,boolean matches(final String txt),91,92,4058,4061,MethodCallMutator,find,match,1,0.17561813,this.pattern.matcher(txt).<mask>(),"boolean matches(final String txt) {
            return this.pattern.matcher(txt).<mask>();
        }"
2,Lang.java,matches,boolean matches(final String txt),91,92,4058,4061,MethodCallMutator,find,matched,3,0.01911858,this.pattern.matcher(txt).<mask>(),"boolean matches(final String txt) {
            return this.pattern.matcher(txt).<mask>();
        }"
3,Lang.java,matches,boolean matches(final String txt),91,92,4058,4061,MethodCallMutator,find,length,4,0.011218008,this.pattern.matcher(txt).<mask>(),"boolean matches(final String txt) {
            return this.pattern.matcher(txt).<mask>();
        }"
4,Lang.java,matches,boolean matches(final String txt),91,92,4045,4051,MethodCallMutator,matcher,match,0,0.7676217,this.pattern.<mask>(txt),"boolean matches(final String txt) {
            return this.pattern.<mask>(txt).find();
        }"
5,Lang.java,matches,boolean matches(final String txt),91,92,4045,4051,MethodCallMutator,matcher,split,1,0.059735447,this.pattern.<mask>(txt),"boolean matches(final String txt) {
            return this.pattern.<mask>(txt).find();
        }"
6,Lang.java,matches,boolean matches(final String txt),91,92,4045,4051,MethodCallMutator,matcher,pattern,2,0.050991334,this.pattern.<mask>(txt),"boolean matches(final String txt) {
            return this.pattern.<mask>(txt).find();
        }"
7,Lang.java,matches,boolean matches(final String txt),91,92,4045,4051,MethodCallMutator,matcher,cher,3,0.017814493,this.pattern.<mask>(txt),"boolean matches(final String txt) {
            return this.pattern.<mask>(txt).find();
        }"
8,Lang.java,matches,boolean matches(final String txt),91,92,4045,4051,MethodCallMutator,matcher,parse,4,0.016189774,this.pattern.<mask>(txt),"boolean matches(final String txt) {
            return this.pattern.<mask>(txt).find();
        }"
9,Lang.java,matches,boolean matches(final String txt),91,92,4032,4043,IdentifierMutator-Variable,this.pattern,pattern,0,0.5365879,<mask>,"boolean matches(final String txt) {
            return<mask>.matcher(txt).find();
        }"
10,Lang.java,matches,boolean matches(final String txt),91,92,4032,4043,IdentifierMutator-Variable,this.pattern,regex,1,0.22739117,<mask>,"boolean matches(final String txt) {
            return<mask>.matcher(txt).find();
        }"
11,Lang.java,matches,boolean matches(final String txt),91,92,4032,4043,IdentifierMutator-Variable,this.pattern,re,2,0.030332934,<mask>,"boolean matches(final String txt) {
            return<mask>.matcher(txt).find();
        }"
12,Lang.java,matches,boolean matches(final String txt),91,92,4032,4043,IdentifierMutator-Variable,this.pattern,Pattern,3,0.025831563,<mask>,"boolean matches(final String txt) {
            return<mask>.matcher(txt).find();
        }"
13,Lang.java,matches,boolean matches(final String txt),91,92,4032,4043,IdentifierMutator-Variable,this.pattern,match,4,0.011853392,<mask>,"boolean matches(final String txt) {
            return<mask>.matcher(txt).find();
        }"
14,Lang.java,matches,boolean matches(final String txt),91,92,4032,4035,IdentifierMutator-ThisAccess,this,regex,1,0.040595632,<mask>,"boolean matches(final String txt) {
            return<mask>.pattern.matcher(txt).find();
        }"
15,Lang.java,matches,boolean matches(final String txt),91,92,4032,4035,IdentifierMutator-ThisAccess,this,m,2,0.026357524,<mask>,"boolean matches(final String txt) {
            return<mask>.pattern.matcher(txt).find();
        }"
16,Lang.java,matches,boolean matches(final String txt),91,92,4032,4035,IdentifierMutator-ThisAccess,this,pattern,3,0.016617918,<mask>,"boolean matches(final String txt) {
            return<mask>.pattern.matcher(txt).find();
        }"
17,Lang.java,matches,boolean matches(final String txt),91,92,4032,4035,IdentifierMutator-ThisAccess,this,text,4,0.009688765,<mask>,"boolean matches(final String txt) {
            return<mask>.pattern.matcher(txt).find();
        }"
18,Lang.java,matches,boolean matches(final String txt),91,92,4037,4043,FieldReferenceMutator,pattern,re,1,0.047836542,this.<mask>,"boolean matches(final String txt) {
            return this.<mask>.matcher(txt).find();
        }"
19,Lang.java,matches,boolean matches(final String txt),91,92,4037,4043,FieldReferenceMutator,pattern,parser,2,0.019797662,this.<mask>,"boolean matches(final String txt) {
            return this.<mask>.matcher(txt).find();
        }"
20,Lang.java,matches,boolean matches(final String txt),91,92,4037,4043,FieldReferenceMutator,pattern,match,3,0.01300572,this.<mask>,"boolean matches(final String txt) {
            return this.<mask>.matcher(txt).find();
        }"
21,Lang.java,matches,boolean matches(final String txt),91,92,4037,4043,FieldReferenceMutator,pattern,search,4,0.012282031,this.<mask>,"boolean matches(final String txt) {
            return this.<mask>.matcher(txt).find();
        }"
22,Lang.java,matches,boolean matches(final String txt),91,92,4053,4055,IdentifierMutator-Variable,txt,text,1,0.013518451,<mask>,"boolean matches(final String txt) {
            return this.pattern.matcher(<mask>).find();
        }"
23,Lang.java,matches,boolean matches(final String txt),91,92,4053,4055,IdentifierMutator-Variable,txt,xt,2,0.005910642,<mask>,"boolean matches(final String txt) {
            return this.pattern.matcher(<mask>).find();
        }"
24,Lang.java,matches,boolean matches(final String txt),91,92,4053,4055,IdentifierMutator-Variable,txt,pattern,3,0.0023820468,<mask>,"boolean matches(final String txt) {
            return this.pattern.matcher(<mask>).find();
        }"
25,Lang.java,matches,boolean matches(final String txt),91,92,4053,4055,IdentifierMutator-Variable,txt,tty,4,3.5193138E-4,<mask>,"boolean matches(final String txt) {
            return this.pattern.matcher(<mask>).find();
        }"
26,Lang.java,instance,Lang instance(final NameType nameType),113,114,4802,4804,MethodCallMutator,get,instance,1,0.30694297,Langs.<mask>(nameType),"Lang instance(final NameType nameType) {
        return Langs.<mask>(nameType);
    }"
27,Lang.java,instance,Lang instance(final NameType nameType),113,114,4802,4804,MethodCallMutator,get,of,2,0.0507882,Langs.<mask>(nameType),"Lang instance(final NameType nameType) {
        return Langs.<mask>(nameType);
    }"
28,Lang.java,instance,Lang instance(final NameType nameType),113,114,4802,4804,MethodCallMutator,get,name,3,0.0370445,Langs.<mask>(nameType),"Lang instance(final NameType nameType) {
        return Langs.<mask>(nameType);
    }"
29,Lang.java,instance,Lang instance(final NameType nameType),113,114,4802,4804,MethodCallMutator,get,Instance,4,0.03333463,Langs.<mask>(nameType),"Lang instance(final NameType nameType) {
        return Langs.<mask>(nameType);
    }"
30,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.Langs,instances,0,0.15825568,<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
31,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.Langs,languages,1,0.12872294,<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
32,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.Langs,registry,2,0.05082269,<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
33,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.Langs,aliases,3,0.05070007,<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
34,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.Langs,lang,4,0.046283282,<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
35,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,FieldReferenceMutator,Langs,instances,0,0.15825568,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
36,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,FieldReferenceMutator,Langs,languages,1,0.12872294,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
37,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,FieldReferenceMutator,Langs,registry,2,0.05082269,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
38,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,FieldReferenceMutator,Langs,aliases,3,0.05070007,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
39,Lang.java,instance,Lang instance(final NameType nameType),113,114,4796,4800,FieldReferenceMutator,Langs,lang,4,0.046283282,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang instance(final NameType nameType) {
        return<mask>.get(nameType);
    }"
40,Lang.java,instance,Lang instance(final NameType nameType),113,114,4806,4813,IdentifierMutator-Variable,nameType,name,0,0.79939264,<mask>,"Lang instance(final NameType nameType) {
        return Langs.get(<mask>);
    }"
41,Lang.java,instance,Lang instance(final NameType nameType),113,114,4806,4813,IdentifierMutator-Variable,nameType,type,1,0.059695538,<mask>,"Lang instance(final NameType nameType) {
        return Langs.get(<mask>);
    }"
42,Lang.java,instance,Lang instance(final NameType nameType),113,114,4806,4813,IdentifierMutator-Variable,nameType,lang,2,0.025894763,<mask>,"Lang instance(final NameType nameType) {
        return Langs.get(<mask>);
    }"
43,Lang.java,instance,Lang instance(final NameType nameType),113,114,4806,4813,IdentifierMutator-Variable,nameType,language,3,0.02497753,<mask>,"Lang instance(final NameType nameType) {
        return Langs.get(<mask>);
    }"
44,Lang.java,instance,Lang instance(final NameType nameType),113,114,4806,4813,IdentifierMutator-Variable,nameType,Name,4,0.018400142,<mask>,"Lang instance(final NameType nameType) {
        return Langs.get(<mask>);
    }"
45,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5604,5622,MethodCallMutator,getResourceAsStream,load,0,0.64523655,Lang.class.getClassLoader().<mask>(languageRulesResourceName),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().<mask>(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
46,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5604,5622,MethodCallMutator,getResourceAsStream,resource,1,0.10045557,Lang.class.getClassLoader().<mask>(languageRulesResourceName),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().<mask>(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
47,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5604,5622,MethodCallMutator,getResourceAsStream,open,2,0.07339624,Lang.class.getClassLoader().<mask>(languageRulesResourceName),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().<mask>(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
48,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5604,5622,MethodCallMutator,getResourceAsStream,get,3,0.057330735,Lang.class.getClassLoader().<mask>(languageRulesResourceName),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().<mask>(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
49,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5604,5622,MethodCallMutator,getResourceAsStream,read,4,0.039759737,Lang.class.getClassLoader().<mask>(languageRulesResourceName),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().<mask>(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
50,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5587,5600,MethodCallMutator,getClassLoader,class,0,0.9735564,Lang.class.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.<mask>().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
51,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5587,5600,MethodCallMutator,getClassLoader,get,1,0.01202325,Lang.class.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.<mask>().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
52,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5587,5600,MethodCallMutator,getClassLoader,Class,2,0.0033948729,Lang.class.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.<mask>().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
53,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5587,5600,MethodCallMutator,getClassLoader,Loader,3,0.002225741,Lang.class.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.<mask>().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
54,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5587,5600,MethodCallMutator,getClassLoader,load,4,0.002148196,Lang.class.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.<mask>().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
55,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5576,5585,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.class,this,0,0.6986077,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS =<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
56,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5576,5585,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.class,languages,1,0.04767324,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS =<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
57,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5576,5585,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.class,classes,2,0.046727218,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS =<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
58,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5576,5585,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.class,resources,3,0.032705083,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS =<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
59,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5576,5585,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.class,language,4,0.029409844,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS =<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
60,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5581,5585,FieldReferenceMutator,class,Class,1,0.005076318,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
61,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5581,5585,FieldReferenceMutator,class,CLASS,3,5.5865996E-4,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
62,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5581,5585,FieldReferenceMutator,class,classes,4,1.9413266E-4,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.<mask>.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
63,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5624,5648,IdentifierMutator-Variable,languageRulesResourceName,name,0,0.17651603,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(<mask>);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
64,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5624,5648,IdentifierMutator-Variable,languageRulesResourceName,resource,1,0.14982949,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(<mask>);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
65,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5624,5648,IdentifierMutator-Variable,languageRulesResourceName,path,2,0.08112798,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(<mask>);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
66,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5624,5648,IdentifierMutator-Variable,languageRulesResourceName,filename,3,0.045664877,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(<mask>);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
67,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,131,5624,5648,IdentifierMutator-Variable,languageRulesResourceName,n,4,0.038713496,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(<mask>);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
    "
68,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5673,5676,BinaryOperatorMutator,==,=,2,0.013103981,lRulesIS <mask> null,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS<mask>null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
69,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5673,5676,BinaryOperatorMutator,==,!=,3,5.2501174E-4,lRulesIS <mask> null,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS<mask>null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
70,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5673,5676,BinaryOperatorMutator,==,is,4,2.3296899E-4,lRulesIS <mask> null,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS<mask>null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
71,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5665,5672,IdentifierMutator-Variable,lRulesIS,rules,0,0.37587768,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (<mask> == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
72,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5665,5672,IdentifierMutator-Variable,lRulesIS,is,1,0.20450816,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (<mask> == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
73,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5665,5672,IdentifierMutator-Variable,lRulesIS,lr,2,0.038213547,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (<mask> == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
74,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5665,5672,IdentifierMutator-Variable,lRulesIS,ins,3,0.037161462,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (<mask> == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
75,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5665,5672,IdentifierMutator-Variable,lRulesIS,ris,4,0.026858654,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (<mask> == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
76,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5677,5680,IdentifierMutator-Literal,null,NULL,1,6.162406E-5,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS ==<mask>) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
77,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5677,5680,IdentifierMutator-Literal,null,nil,2,1.3512193E-5,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS ==<mask>) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
78,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,133,5677,5680,IdentifierMutator-Literal,null,false,3,9.8227665E-6,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS ==<mask>) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
79,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5767,5769,BinaryOperatorMutator,+,//,2,0.0026709347,"""Unable to resolve required resource:"" <mask> org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:""<mask>LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
80,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5767,5769,BinaryOperatorMutator,+,"""+",3,0.0015299757,"""Unable to resolve required resource:"" <mask> org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:""<mask>LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
81,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5767,5769,BinaryOperatorMutator,+,.,4,2.0486685E-4,"""Unable to resolve required resource:"" <mask> org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN","Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:""<mask>LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
82,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5729,5766,IdentifierMutator-Literal,"""Unabletoresolverequiredresource:""",NAME,0,0.35844284,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(<mask> + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
83,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5729,5766,IdentifierMutator-Literal,"""Unabletoresolverequiredresource:""",name,1,0.033623636,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(<mask> + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
84,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5729,5766,IdentifierMutator-Literal,"""Unabletoresolverequiredresource:""",URL,2,0.02161221,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(<mask> + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
85,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5729,5766,IdentifierMutator-Literal,"""Unabletoresolverequiredresource:""",null,3,0.01877456,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(<mask> + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
86,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5729,5766,IdentifierMutator-Literal,"""Unabletoresolverequiredresource:""",1,4,0.018490504,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(<mask> + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
87,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN,resource,0,0.59194124,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
88,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN,url,1,0.0958868,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
89,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN,resources,2,0.074723594,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
90,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN,path,3,0.06880775,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
91,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,IdentifierMutator-Variable,org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN,filename,4,0.024099974,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
92,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,FieldReferenceMutator,LANGUAGE_RULES_RN,resource,0,0.59194124,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
93,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,FieldReferenceMutator,LANGUAGE_RULES_RN,url,1,0.0958868,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
94,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,FieldReferenceMutator,LANGUAGE_RULES_RN,resources,2,0.074723594,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
95,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,FieldReferenceMutator,LANGUAGE_RULES_RN,path,3,0.06880775,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
96,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,134,5770,5786,FieldReferenceMutator,LANGUAGE_RULES_RN,filename,4,0.024099974,org.apache.commons.codec.language.bm.Lang.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" +<mask>);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
          "
97,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5845,5852,IdentifierMutator-Variable,lRulesIS,is,0,0.8707869,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(<mask>, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
98,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5845,5852,IdentifierMutator-Variable,lRulesIS,IS,1,0.09994571,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(<mask>, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
99,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5845,5852,IdentifierMutator-Variable,lRulesIS,ris,2,0.006033358,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(<mask>, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
100,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5845,5852,IdentifierMutator-Variable,lRulesIS,in,3,0.003927082,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(<mask>, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
101,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5845,5852,IdentifierMutator-Variable,lRulesIS,ins,4,0.00278096,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(<mask>, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
102,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5855,5880,IdentifierMutator-Variable,ResourceConstants.ENCODING,languages,0,0.54328996,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS,<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
103,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5855,5880,IdentifierMutator-Variable,ResourceConstants.ENCODING,language,1,0.2833563,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS,<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
104,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5855,5880,IdentifierMutator-Variable,ResourceConstants.ENCODING,rules,2,0.06663155,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS,<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
105,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5855,5880,IdentifierMutator-Variable,ResourceConstants.ENCODING,true,3,0.018867545,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS,<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
106,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5855,5880,IdentifierMutator-Variable,ResourceConstants.ENCODING,null,4,0.015849687,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS,<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
       "
107,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5873,5880,FieldReferenceMutator,ENCODING,class,0,0.068874225,ResourceConstants.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
108,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5873,5880,FieldReferenceMutator,ENCODING,NAME,1,0.043984935,ResourceConstants.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
109,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5873,5880,FieldReferenceMutator,ENCODING,EXT,2,0.043931067,ResourceConstants.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
110,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5873,5880,FieldReferenceMutator,ENCODING,ALL,3,0.0403053,ResourceConstants.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
111,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,137,5873,5880,FieldReferenceMutator,ENCODING,URI,4,0.0343032,ResourceConstants.<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.<mask>);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
112,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,139,5938,5942,IdentifierMutator-Literal,false,true,1,0.20608963,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment =<mask>;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
113,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,139,5938,5942,IdentifierMutator-Literal,false,0,2,3.1038208E-4,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment =<mask>;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
114,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,139,5938,5942,IdentifierMutator-Literal,false,null,3,8.733464E-5,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment =<mask>;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
115,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5972,5982,MethodCallMutator,hasNextLine,next,0,0.94781935,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.<mask>()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
116,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5972,5982,MethodCallMutator,hasNextLine,more,1,0.017472295,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.<mask>()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
117,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5972,5982,MethodCallMutator,hasNextLine,scan,2,0.012696959,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.<mask>()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
118,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5972,5982,MethodCallMutator,hasNextLine,continue,3,0.0113306455,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.<mask>()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
119,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5972,5982,MethodCallMutator,hasNextLine,ready,4,0.0017721356,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.<mask>()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
   "
120,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5964,5970,IdentifierMutator-Variable,scanner,ner,0,0.34184954,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (<mask>.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
121,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5964,5970,IdentifierMutator-Variable,scanner,inner,2,0.16182391,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (<mask>.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
122,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5964,5970,IdentifierMutator-Variable,scanner,reader,3,0.13229215,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (<mask>.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
123,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,140,5964,5970,IdentifierMutator-Variable,scanner,parser,4,0.13009515,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (<mask>.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
124,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6036,6043,MethodCallMutator,nextLine,next,0,0.991264,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.<mask>();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
125,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6036,6043,MethodCallMutator,nextLine,line,1,0.0040950715,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.<mask>();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
126,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6036,6043,MethodCallMutator,nextLine,text,2,5.540829E-4,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.<mask>();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
127,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6036,6043,MethodCallMutator,nextLine,next,3,4.981919E-4,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.<mask>();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
128,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6036,6043,MethodCallMutator,nextLine,get,4,4.866448E-4,scanner.<mask>(),"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.<mask>();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
  "
129,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6028,6034,IdentifierMutator-Variable,scanner,reader,1,2.3205597E-4,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine =<mask>.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
130,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6028,6034,IdentifierMutator-Variable,scanner,ner,2,1.6307755E-4,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine =<mask>.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
131,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6028,6034,IdentifierMutator-Variable,scanner,parser,3,7.99473E-5,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine =<mask>.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
132,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,141,6028,6034,IdentifierMutator-Variable,scanner,scan,4,1.8865503E-5,<mask>,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine =<mask>.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
 "
133,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,142,6078,6084,IdentifierMutator-Variable,rawLine,null,0,0.3664708,<mask>,"Name, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line =<mask>;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
             "
134,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,142,6078,6084,IdentifierMutator-Variable,rawLine,"""""",1,0.35570824,<mask>,"Name, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line =<mask>;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
             "
135,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,142,6078,6084,IdentifierMutator-Variable,rawLine,line,2,0.12266166,<mask>,"Name, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line =<mask>;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
             "
136,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,142,6078,6084,IdentifierMutator-Variable,rawLine,"''",3,0.056201193,<mask>,"Name, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line =<mask>;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
             "
137,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,142,6078,6084,IdentifierMutator-Variable,rawLine,input,4,0.013231209,<mask>,"Name, final Languages languages) {
        final List<LangRule> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line =<mask>;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
             "
138,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,143,6107,6123,IdentifierMutator-Variable,inExtendedComment,debug,0,0.12939727,<mask>,"> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (<mask>) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
             "
139,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,143,6107,6123,IdentifierMutator-Variable,inExtendedComment,continue,1,0.07252399,<mask>,"> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (<mask>) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
             "
140,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,143,6107,6123,IdentifierMutator-Variable,inExtendedComment,line,2,0.070365496,<mask>,"> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (<mask>) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
             "
141,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,143,6107,6123,IdentifierMutator-Variable,inExtendedComment,true,3,0.06662236,<mask>,"> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (<mask>) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
             "
142,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,143,6107,6123,IdentifierMutator-Variable,inExtendedComment,inline,4,0.052994248,<mask>,"> rules = new ArrayList<LangRule>();
        final InputStream lRulesIS = Lang.class.getClassLoader().getResourceAsStream(languageRulesResourceName);

        if (lRulesIS == null) {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (<mask>) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
             "
143,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6249,6256,MethodCallMutator,endsWith,ends,0,0.2445271,line.<mask>(EXT_CMT_END),"
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.<mask>(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
    "
144,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6249,6256,MethodCallMutator,endsWith,has,1,0.1841666,line.<mask>(EXT_CMT_END),"
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.<mask>(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
    "
145,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6249,6256,MethodCallMutator,endsWith,includes,2,0.1668004,line.<mask>(EXT_CMT_END),"
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.<mask>(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
    "
146,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6249,6256,MethodCallMutator,endsWith,is,3,0.10816111,line.<mask>(EXT_CMT_END),"
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.<mask>(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
    "
147,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6249,6256,MethodCallMutator,endsWith,remove,4,0.05516116,line.<mask>(EXT_CMT_END),"
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.<mask>(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
    "
148,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6244,6247,IdentifierMutator-Variable,line,Line,1,1.7159006E-4,<mask>,") {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (<mask>.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
 "
149,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6244,6247,IdentifierMutator-Variable,line,block,3,1.0835723E-4,<mask>,") {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (<mask>.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
 "
150,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,145,6244,6247,IdentifierMutator-Variable,line,name,4,9.57799E-5,<mask>,") {
            throw new IllegalStateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (<mask>.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
 "
151,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6333,6333,AssignmentMutator,inExtendedComment=false,|,0,0.75500053,inExtendedComment <mask>= false,"   }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment<mask>= false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
152,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6333,6333,AssignmentMutator,inExtendedComment=false,&,1,0.17874952,inExtendedComment <mask>= false,"   }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment<mask>= false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
153,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6333,6333,AssignmentMutator,inExtendedComment=false,*,2,0.03285179,inExtendedComment <mask>= false,"   }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment<mask>= false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
154,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6333,6333,AssignmentMutator,inExtendedComment=false,||,3,0.016842635,inExtendedComment <mask>= false,"   }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment<mask>= false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
155,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6333,6333,AssignmentMutator,inExtendedComment=false,^,4,0.006490839,inExtendedComment <mask>= false,"   }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment<mask>= false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
156,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6316,6332,IdentifierMutator-Variable,inExtendedComment,found,0,0.16996776,<mask>,"StateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {<mask> = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
157,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6316,6332,IdentifierMutator-Variable,inExtendedComment,comment,1,0.15309438,<mask>,"StateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {<mask> = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
158,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6316,6332,IdentifierMutator-Variable,inExtendedComment,done,2,0.03369175,<mask>,"StateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {<mask> = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
159,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6316,6332,IdentifierMutator-Variable,inExtendedComment,modified,3,0.030616334,<mask>,"StateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {<mask> = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
160,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6316,6332,IdentifierMutator-Variable,inExtendedComment,continue,4,0.028284714,<mask>,"StateException(""Unable to resolve required resource:"" + LANGUAGE_RULES_RN);
        }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {<mask> = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
            "
161,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6336,6340,IdentifierMutator-Literal,false,true,0,0.879035,<mask>,"  }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment =<mask>;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
              "
162,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6336,6340,IdentifierMutator-Literal,false,null,2,1.5314449E-4,<mask>,"  }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment =<mask>;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
              "
163,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6336,6340,IdentifierMutator-Literal,false,continue,3,9.266325E-5,<mask>,"  }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment =<mask>;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
              "
164,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,146,6336,6340,IdentifierMutator-Literal,false,True,4,6.108858E-5,<mask>,"  }

        final Scanner scanner = new Scanner(lRulesIS, ResourceConstants.ENCODING);
        try {
            boolean inExtendedComment = false;
            while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment =<mask>;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
              "
165,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6419,6428,MethodCallMutator,startsWith,ends,0,0.25180367,line.<mask>(EXT_CMT_START),"        while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.<mask>(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                "
166,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6419,6428,MethodCallMutator,startsWith,with,1,0.1936905,line.<mask>(EXT_CMT_START),"        while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.<mask>(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                "
167,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6419,6428,MethodCallMutator,startsWith,includes,2,0.15277763,line.<mask>(EXT_CMT_START),"        while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.<mask>(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                "
168,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6419,6428,MethodCallMutator,startsWith,is,3,0.09092907,line.<mask>(EXT_CMT_START),"        while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.<mask>(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                "
169,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6419,6428,MethodCallMutator,startsWith,has,4,0.0713026,line.<mask>(EXT_CMT_START),"        while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.<mask>(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                "
170,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6414,6417,IdentifierMutator-Variable,line,name,2,1.385394E-4,<mask>,"          while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (<mask>.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

            "
171,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6414,6417,IdentifierMutator-Variable,line,Line,3,1.3312306E-4,<mask>,"          while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (<mask>.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

            "
172,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,149,6414,6417,IdentifierMutator-Variable,line,definition,4,9.416444E-5,<mask>,"          while (scanner.hasNextLine()) {
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (<mask>.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

            "
173,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6507,6507,AssignmentMutator,inExtendedComment=true,|,0,0.86651754,inExtendedComment <mask>= true,"               String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment<mask>= true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
174,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6507,6507,AssignmentMutator,inExtendedComment=true,&,1,0.06190451,inExtendedComment <mask>= true,"               String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment<mask>= true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
175,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6507,6507,AssignmentMutator,inExtendedComment=true,*,2,0.029740883,inExtendedComment <mask>= true,"               String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment<mask>= true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
176,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6507,6507,AssignmentMutator,inExtendedComment=true,||,3,0.02105946,inExtendedComment <mask>= true,"               String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment<mask>= true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
177,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6507,6507,AssignmentMutator,inExtendedComment=true,^,4,0.0060091387,inExtendedComment <mask>= true,"               String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment<mask>= true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
178,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6490,6506,IdentifierMutator-Variable,inExtendedComment,found,0,0.1657142,<mask>,"
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {<mask> = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
179,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6490,6506,IdentifierMutator-Variable,inExtendedComment,comment,1,0.09475848,<mask>,"
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {<mask> = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
180,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6490,6506,IdentifierMutator-Variable,inExtendedComment,done,2,0.054377817,<mask>,"
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {<mask> = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
181,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6490,6506,IdentifierMutator-Variable,inExtendedComment,ok,3,0.021677023,<mask>,"
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {<mask> = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
182,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6490,6506,IdentifierMutator-Variable,inExtendedComment,modified,4,0.020609811,<mask>,"
                final String rawLine = scanner.nextLine();
                String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {<mask> = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line"
183,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6510,6513,IdentifierMutator-Literal,true,false,0,0.6100244,<mask>,"              String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment =<mask>;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.tr"
184,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6510,6513,IdentifierMutator-Literal,true,0,2,1.4605183E-4,<mask>,"              String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment =<mask>;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.tr"
185,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6510,6513,IdentifierMutator-Literal,true,null,3,1.1459028E-4,<mask>,"              String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment =<mask>;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.tr"
186,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,150,6510,6513,IdentifierMutator-Literal,true,False,4,8.342363E-5,<mask>,"              String line = rawLine;
                if (inExtendedComment) {
                    // check for closing comment marker, otherwise discard doc comment line
                    if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment =<mask>;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.tr"
187,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6635,6641,MethodCallMutator,indexOf,index,0,0.6482368,line.<mask>(CMT),"            if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.<mask>(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
           "
188,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6635,6641,MethodCallMutator,indexOf,find,1,0.0806471,line.<mask>(CMT),"            if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.<mask>(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
           "
189,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6635,6641,MethodCallMutator,indexOf,position,2,0.05438008,line.<mask>(CMT),"            if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.<mask>(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
           "
190,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6635,6641,MethodCallMutator,indexOf,pos,3,0.033783592,line.<mask>(CMT),"            if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.<mask>(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
           "
191,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6635,6641,MethodCallMutator,indexOf,search,4,0.02567254,line.<mask>(CMT),"            if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.<mask>(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
           "
192,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6630,6633,IdentifierMutator-Variable,line,comment,2,1.3141759E-4,<mask>,"              if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI =<mask>.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
        "
193,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6630,6633,IdentifierMutator-Variable,line,name,3,9.429255E-5,<mask>,"              if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI =<mask>.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
        "
194,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,153,6630,6633,IdentifierMutator-Variable,line,rule,4,8.102196E-5,<mask>,"              if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
                        inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI =<mask>.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
        "
195,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6699,6702,BinaryOperatorMutator,>=,>,0,0.4349716,cmtI <mask> 0,"                inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI<mask>0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        //"
196,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6699,6702,BinaryOperatorMutator,>=,>,1,0.37951562,cmtI <mask> 0,"                inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI<mask>0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        //"
197,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6699,6702,BinaryOperatorMutator,>=,==,3,0.042830538,cmtI <mask> 0,"                inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI<mask>0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        //"
198,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6699,6702,BinaryOperatorMutator,>=,!=,4,0.013688027,cmtI <mask> 0,"                inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI<mask>0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        //"
199,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6695,6698,IdentifierMutator-Variable,cmtI,i,0,0.68595445,<mask>,"                   inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (<mask> >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                       "
200,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6695,6698,IdentifierMutator-Variable,cmtI,I,1,0.16497986,<mask>,"                   inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (<mask> >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                       "
201,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6695,6698,IdentifierMutator-Variable,cmtI,ci,2,0.039778426,<mask>,"                   inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (<mask> >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                       "
202,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6695,6698,IdentifierMutator-Variable,cmtI,cm,3,0.014401792,<mask>,"                   inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (<mask> >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                       "
203,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6695,6698,IdentifierMutator-Variable,cmtI,line,4,0.012483077,<mask>,"                   inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (<mask> >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                       "
204,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6703,6703,IdentifierMutator-Literal,0,1,1,0.0029300982,<mask>,"               inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >=<mask>) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split"
205,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6703,6703,IdentifierMutator-Literal,0,2,2,2.1851371E-4,<mask>,"               inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >=<mask>) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split"
206,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,154,6703,6703,IdentifierMutator-Literal,0,4,3,7.6773365E-5,<mask>,"               inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >=<mask>) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split"
207,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6740,6740,AssignmentMutator,"line=line.substring(0,cmtI)",.,0,0.25704595,"line <mask>= line.substring(0, cmtI)","          }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line<mask>= line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
208,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6740,6740,AssignmentMutator,"line=line.substring(0,cmtI)",.,1,0.13906506,"line <mask>= line.substring(0, cmtI)","          }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line<mask>= line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
209,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6740,6740,AssignmentMutator,"line=line.substring(0,cmtI)",[],2,0.055354986,"line <mask>= line.substring(0, cmtI)","          }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line<mask>= line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
210,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6740,6740,AssignmentMutator,"line=line.substring(0,cmtI)",|,3,0.043440755,"line <mask>= line.substring(0, cmtI)","          }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line<mask>= line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
211,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6740,6740,AssignmentMutator,"line=line.substring(0,cmtI)",String,4,0.033823952,"line <mask>= line.substring(0, cmtI)","          }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line<mask>= line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
212,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6736,6739,IdentifierMutator-Variable,line,comment,2,4.908214E-4,<mask>,"            inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {<mask> = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
213,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6736,6739,IdentifierMutator-Variable,line,Line,3,3.736092E-4,<mask>,"            inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {<mask> = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
214,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6736,6739,IdentifierMutator-Variable,line,part,4,2.0396404E-4,<mask>,"            inExtendedComment = false;
                    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {<mask> = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts ="
215,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6748,6756,MethodCallMutator,substring,slice,0,0.32345027,"line.<mask>(0, cmtI)","       }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.<mask>(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\"
216,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6748,6756,MethodCallMutator,substring,replace,1,0.24774924,"line.<mask>(0, cmtI)","       }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.<mask>(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\"
217,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6748,6756,MethodCallMutator,substring,fill,2,0.21799086,"line.<mask>(0, cmtI)","       }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.<mask>(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\"
218,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6748,6756,MethodCallMutator,substring,ring,3,0.07268749,"line.<mask>(0, cmtI)","       }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.<mask>(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\"
219,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6748,6756,MethodCallMutator,substring,copy,4,0.05320183,"line.<mask>(0, cmtI)","       }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.<mask>(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\"
220,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6743,6746,IdentifierMutator-Variable,line,lines,2,4.886752E-5,<mask>,"         }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line =<mask>.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line."
221,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6743,6746,IdentifierMutator-Variable,line,block,3,3.638303E-5,<mask>,"         }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line =<mask>.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line."
222,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6743,6746,IdentifierMutator-Variable,line,text,4,3.5796973E-5,<mask>,"         }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line =<mask>.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line."
223,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6758,6758,IdentifierMutator-Literal,0,1,1,0.04220241,<mask>,"    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(<mask>, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"
224,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6758,6758,IdentifierMutator-Literal,0,2,3,0.0043328125,<mask>,"    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(<mask>, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"
225,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6758,6758,IdentifierMutator-Literal,0,6,4,0.0015011661,<mask>,"    }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(<mask>, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"
226,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6761,6764,IdentifierMutator-Variable,cmtI,I,0,0.49074078,<mask>,"  }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0,<mask>);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

  "
227,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6761,6764,IdentifierMutator-Variable,cmtI,i,1,0.3225362,<mask>,"  }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0,<mask>);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

  "
228,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6761,6764,IdentifierMutator-Variable,cmtI,i,2,0.09184141,<mask>,"  }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0,<mask>);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

  "
229,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6761,6764,IdentifierMutator-Variable,cmtI,I,3,0.015145647,<mask>,"  }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0,<mask>);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

  "
230,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,155,6761,6764,IdentifierMutator-Variable,cmtI,PI,4,0.013206641,<mask>,"  }
                } else {
                    if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0,<mask>);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

  "
231,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6883,6883,AssignmentMutator,line=line.trim(),,0,0.2632555,line <mask>= line.trim()," inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line<mask>= line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
232,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6883,6883,AssignmentMutator,line=line.trim(),.,1,0.22079256,line <mask>= line.trim()," inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line<mask>= line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
233,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6883,6883,AssignmentMutator,line=line.trim(),[],2,0.060601275,line <mask>= line.trim()," inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line<mask>= line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
234,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6883,6883,AssignmentMutator,line=line.trim(),/,3,0.04856209,line <mask>= line.trim()," inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line<mask>= line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
235,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6883,6883,AssignmentMutator,line=line.trim(),.,4,0.032789227,line <mask>= line.trim()," inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line<mask>= line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
236,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6879,6882,IdentifierMutator-Variable,line,lines,2,7.934096E-5,<mask>," {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace<mask> = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
237,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6879,6882,IdentifierMutator-Variable,line,inline,3,7.6835095E-5,<mask>," {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace<mask> = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
238,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6879,6882,IdentifierMutator-Variable,line,block,4,7.03333E-5,<mask>," {
                        inExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace<mask> = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
        "
239,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6891,6894,MethodCallMutator,trim,strip,0,0.82700646,line.<mask>(),"Comment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.<mask>();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
             "
240,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6891,6894,MethodCallMutator,trim,clone,2,0.022774072,line.<mask>(),"Comment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.<mask>();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
             "
241,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6891,6894,MethodCallMutator,trim,string,3,0.018380532,line.<mask>(),"Comment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.<mask>();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
             "
242,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6891,6894,MethodCallMutator,trim,remove,4,0.013719304,line.<mask>(),"Comment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.<mask>();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
             "
243,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6886,6889,IdentifierMutator-Variable,line,lines,2,4.2356347E-5,<mask>,"ExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line =<mask>.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
          "
244,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6886,6889,IdentifierMutator-Variable,line,block,3,3.4557517E-5,<mask>,"ExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line =<mask>.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
          "
245,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,159,6886,6889,IdentifierMutator-Variable,line,inline,4,3.2395434E-5,<mask>,"ExtendedComment = true;
                    } else {
                        // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line =<mask>.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
          "
246,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6941,6944,BinaryOperatorMutator,==,>,2,0.07785669,line.length() <mask> 0,"                   // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length()<mask>0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResource"
247,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6941,6944,BinaryOperatorMutator,==,<=,3,0.015048307,line.length() <mask> 0,"                   // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length()<mask>0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResource"
248,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6941,6944,BinaryOperatorMutator,==,=,4,0.008310512,line.length() <mask> 0,"                   // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length()<mask>0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResource"
249,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6933,6938,MethodCallMutator,length,width,1,6.000554E-4,line.<mask>(),"                     // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.<mask>() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + language"
250,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6933,6938,MethodCallMutator,length,len,2,3.0169456E-4,line.<mask>(),"                     // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.<mask>() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + language"
251,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6933,6938,MethodCallMutator,length,size,3,1.871725E-4,line.<mask>(),"                     // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.<mask>() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + language"
252,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6933,6938,MethodCallMutator,length,count,4,5.944175E-5,line.<mask>(),"                     // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.<mask>() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + language"
253,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6928,6931,IdentifierMutator-Variable,line,Line,2,1.7028292E-4,<mask>,"                       // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (<mask>.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"""
254,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6928,6931,IdentifierMutator-Variable,line,definition,3,8.1905004E-5,<mask>,"                       // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (<mask>.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"""
255,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6928,6931,IdentifierMutator-Variable,line,block,4,6.570503E-5,<mask>,"                       // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (<mask>.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"""
256,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6945,6945,IdentifierMutator-Literal,0,1,1,0.005244069,<mask>,"                  // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() ==<mask>) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName"
257,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6945,6945,IdentifierMutator-Literal,0,2,2,3.6244479E-4,<mask>,"                  // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() ==<mask>) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName"
258,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6945,6945,IdentifierMutator-Literal,0,3,3,2.631556E-4,<mask>,"                  // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() ==<mask>) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName"
259,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,161,6945,6945,IdentifierMutator-Literal,0,"""""",4,1.3325538E-4,<mask>,"                  // discard comments
                        final int cmtI = line.indexOf(ResourceConstants.CMT);
                        if (cmtI >= 0) {
                            line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() ==<mask>) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName"
260,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7143,7147,MethodCallMutator,split,Split,2,7.433177E-6,"line.<mask>(""\\s+"")"," = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.<mask>(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                   "
261,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7143,7147,MethodCallMutator,split,slice,3,4.7065378E-6,"line.<mask>(""\\s+"")"," = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.<mask>(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                   "
262,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7143,7147,MethodCallMutator,split,parse,4,4.274038E-6,"line.<mask>(""\\s+"")"," = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.<mask>(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                   "
263,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7138,7141,IdentifierMutator-Variable,line,text,2,1.6139951E-4,<mask>,"  line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts =<mask>.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                 "
264,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7138,7141,IdentifierMutator-Variable,line,lines,3,1.5617767E-4,<mask>,"  line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts =<mask>.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                 "
265,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7138,7141,IdentifierMutator-Variable,line,input,4,1.146317E-4,<mask>,"  line = line.substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts =<mask>.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                 "
266,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7149,7154,IdentifierMutator-Literal,"""\\s+""",split,0,0.09795298,<mask>,".substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(<mask>);

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                       "
267,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7149,7154,IdentifierMutator-Literal,"""\\s+""",""",""",1,0.095838696,<mask>,".substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(<mask>);

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                       "
268,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7149,7154,IdentifierMutator-Literal,"""\\s+""",pattern,2,0.04613136,<mask>,".substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(<mask>);

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                       "
269,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7149,7154,IdentifierMutator-Literal,"""\\s+""",""":""",3,0.043539677,<mask>,".substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(<mask>);

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                       "
270,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,166,7149,7154,IdentifierMutator-Literal,"""\\s+""","""",4,0.026860291,<mask>,".substring(0, cmtI);
                        }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(<mask>);

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                       "
271,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7199,7202,BinaryOperatorMutator,!=,>,0,0.26572883,parts.length <mask> 3,"  }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length<mask>3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                 "
272,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7199,7202,BinaryOperatorMutator,!=,<,1,0.22729123,parts.length <mask> 3,"  }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length<mask>3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                 "
273,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7199,7202,BinaryOperatorMutator,!=,==,2,0.2068267,parts.length <mask> 3,"  }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length<mask>3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                 "
274,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7199,7202,BinaryOperatorMutator,!=,<,3,0.19251986,parts.length <mask> 3,"  }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length<mask>3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                 "
275,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7198,IdentifierMutator-Variable,parts.length,i,0,0.15003997,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
276,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7198,IdentifierMutator-Variable,parts.length,count,1,0.12813517,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
277,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7198,IdentifierMutator-Variable,parts.length,parts,2,0.09565887,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
278,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7198,IdentifierMutator-Variable,parts.length,split,3,0.03934843,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
279,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7198,IdentifierMutator-Variable,parts.length,n,4,0.03711827,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
280,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7191,IdentifierMutator-Variable,parts,part,1,0.004920176,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask>.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

              "
281,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7191,IdentifierMutator-Variable,parts,Parts,2,4.3754673E-4,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask>.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

              "
282,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7187,7191,IdentifierMutator-Variable,parts,split,4,1.0838059E-4,<mask>,"     }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (<mask>.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

              "
283,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7193,7198,FieldReferenceMutator,length,size,1,0.0085785305,parts.<mask>,"   }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
284,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7193,7198,FieldReferenceMutator,length,count,2,6.005397E-4,parts.<mask>,"   }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
285,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7193,7198,FieldReferenceMutator,length,dim,4,3.867277E-5,parts.<mask>,"   }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.<mask> != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                "
286,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7203,7203,IdentifierMutator-Literal,3,2,0,0.44399646,<mask>," }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length !=<mask>) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                  "
287,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7203,7203,IdentifierMutator-Literal,3,4,2,0.11041116,<mask>," }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length !=<mask>) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                  "
288,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7203,7203,IdentifierMutator-Literal,3,1,3,0.08992524,<mask>," }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length !=<mask>) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                  "
289,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,168,7203,7203,IdentifierMutator-Literal,3,6,4,0.02217919,<mask>," }

                        // trim leading-trailing whitespace
                        line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length !=<mask>) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                  "
290,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7392,7394,BinaryOperatorMutator,+,)+,2,3.1293326E-5,"(((""Malformed line '"" + rawLine) + ""' in language resource '"") + languageRulesResourceName) <mask> ""'"""," == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName<mask>""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {"
291,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7392,7394,BinaryOperatorMutator,+,"""+",3,1.4005202E-5,"(((""Malformed line '"" + rawLine) + ""' in language resource '"") + languageRulesResourceName) <mask> ""'"""," == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName<mask>""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {"
292,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7392,7394,BinaryOperatorMutator,+,(),4,5.5674323E-6,"(((""Malformed line '"" + rawLine) + ""' in language resource '"") + languageRulesResourceName) <mask> ""'"""," == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName<mask>""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {"
293,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7364,7366,BinaryOperatorMutator,+,"""+",2,9.302264E-4,"((""Malformed line '"" + rawLine) + ""' in language resource '"") <mask> languageRulesResourceName"," (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '""<mask>languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
     "
294,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7364,7366,BinaryOperatorMutator,+,+(,3,8.035696E-4,"((""Malformed line '"" + rawLine) + ""' in language resource '"") <mask> languageRulesResourceName"," (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '""<mask>languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
     "
295,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7364,7366,BinaryOperatorMutator,+,+.,4,4.145195E-5,"((""Malformed line '"" + rawLine) + ""' in language resource '"") <mask> languageRulesResourceName"," (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '""<mask>languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
     "
296,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7299,7337,BinaryOperatorMutator,+,"""+",2,1.7165647E-5,"(""Malformed line '"" + rawLine) <mask> ""' in language resource '""","            line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine<mask>""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
           "
297,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7299,7337,BinaryOperatorMutator,+,)+,3,9.0076965E-6,"(""Malformed line '"" + rawLine) <mask> ""' in language resource '""","            line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine<mask>""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
           "
298,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7299,7337,BinaryOperatorMutator,+,(),4,1.9350932E-6,"(""Malformed line '"" + rawLine) <mask> ""' in language resource '""","            line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine<mask>""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
           "
299,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7289,7291,BinaryOperatorMutator,+,+(,2,0.004678252,"""Malformed line '"" <mask> rawLine","               line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '""<mask>rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
          "
300,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7289,7291,BinaryOperatorMutator,+,"""+",3,6.9961185E-4,"""Malformed line '"" <mask> rawLine","               line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '""<mask>rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
          "
301,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7289,7291,BinaryOperatorMutator,+,(,4,1.8702338E-4,"""Malformed line '"" <mask> rawLine","               line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '""<mask>rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
          "
302,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7271,7288,IdentifierMutator-Literal,"""Malformedline'""","''",0,0.42517775,<mask>,"                    line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(<mask> + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
         "
303,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7271,7288,IdentifierMutator-Literal,"""Malformedline'""","""""",1,0.36477977,<mask>,"                    line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(<mask> + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
         "
304,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7271,7288,IdentifierMutator-Literal,"""Malformedline'""","'""",2,0.12957053,<mask>,"                    line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(<mask> + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
         "
305,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7271,7288,IdentifierMutator-Literal,"""Malformedline'""","""",3,0.02922328,<mask>,"                    line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(<mask> + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
         "
306,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7271,7288,IdentifierMutator-Literal,"""Malformedline'""","\""",4,0.025754798,<mask>,"                    line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(<mask> + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
         "
307,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7292,7298,IdentifierMutator-Variable,rawLine,line,0,0.99170893,<mask>,"              line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" +<mask> +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
            "
308,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7292,7298,IdentifierMutator-Variable,rawLine,part,1,0.001530312,<mask>,"              line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" +<mask> +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
            "
309,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7292,7298,IdentifierMutator-Variable,rawLine,lines,2,5.811939E-4,<mask>,"              line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" +<mask> +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
            "
310,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7292,7298,IdentifierMutator-Variable,rawLine,l,3,4.2320637E-4,<mask>,"              line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" +<mask> +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
            "
311,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,169,7292,7298,IdentifierMutator-Variable,rawLine,name,4,2.7490227E-4,<mask>,"              line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" +<mask> +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
            "
312,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7338,7363,IdentifierMutator-Literal,"""'inlanguageresource'""","""""",0,0.89167804,<mask>,"           line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +<mask> + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
    "
313,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7338,7363,IdentifierMutator-Literal,"""'inlanguageresource'""","""",1,0.01722323,<mask>,"           line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +<mask> + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
    "
314,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7338,7363,IdentifierMutator-Literal,"""'inlanguageresource'""","""'",2,0.009030625,<mask>,"           line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +<mask> + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
    "
315,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7338,7363,IdentifierMutator-Literal,"""'inlanguageresource'""",prefix,3,0.008947258,<mask>,"           line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +<mask> + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
    "
316,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7338,7363,IdentifierMutator-Literal,"""'inlanguageresource'""",null,4,0.008002674,<mask>,"           line = line.trim();

                        if (line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +<mask> + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
    "
317,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7367,7391,IdentifierMutator-Variable,languageRulesResourceName,resource,0,0.6976076,<mask>,"line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" +<mask> + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally"
318,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7367,7391,IdentifierMutator-Variable,languageRulesResourceName,lang,1,0.07810334,<mask>,"line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" +<mask> + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally"
319,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7367,7391,IdentifierMutator-Variable,languageRulesResourceName,language,2,0.04136897,<mask>,"line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" +<mask> + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally"
320,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7367,7391,IdentifierMutator-Variable,languageRulesResourceName,name,3,0.026495762,<mask>,"line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" +<mask> + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally"
321,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7367,7391,IdentifierMutator-Variable,languageRulesResourceName,locale,4,0.021002214,<mask>,"line.length() == 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" +<mask> + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally"
322,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7395,7397,IdentifierMutator-Literal,"""'""","""'",0,0.9976935,<mask>," 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName +<mask>);
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
"
323,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7395,7397,IdentifierMutator-Literal,"""'""","""",1,0.0011519978,<mask>," 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName +<mask>);
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
"
324,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7395,7397,IdentifierMutator-Literal,"""'""","'.""",2,4.0078338E-4,<mask>," 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName +<mask>);
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
"
325,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7395,7397,IdentifierMutator-Literal,"""'""","'""",3,3.8167156E-4,<mask>," 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName +<mask>);
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
"
326,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,170,7395,7397,IdentifierMutator-Literal,"""'""","'",4,1.9286877E-4,<mask>," 0) {
                            continue; // empty lines can be safely skipped
                        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName +<mask>);
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
"
327,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7484,7490,MethodCallMutator,compile,quote,1,0.27597195,Pattern.<mask>(parts[0]),"        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.<mask>(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
328,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7484,7490,MethodCallMutator,compile,create,2,0.22266388,Pattern.<mask>(parts[0]),"        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.<mask>(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
329,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7484,7490,MethodCallMutator,compile,parse,3,0.08776407,Pattern.<mask>(parts[0]),"        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.<mask>(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
330,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7484,7490,MethodCallMutator,compile,name,4,0.014489533,Pattern.<mask>(parts[0]),"        }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.<mask>(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
331,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,ArrayAccessMutator,0,1,1,0.018576916,parts[<mask>],"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
332,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,ArrayAccessMutator,0,2,2,0.011121935,parts[<mask>],"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
333,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,ArrayAccessMutator,0,3,3,0.0020898054,parts[<mask>],"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
334,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7492,7496,IdentifierMutator-Variable,parts,part,1,0.011694,<mask>,"     }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(<mask>[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
335,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7492,7496,IdentifierMutator-Variable,parts,Parts,3,3.2341512E-4,<mask>,"     }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(<mask>[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
336,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7492,7496,IdentifierMutator-Variable,parts,args,4,1.941581E-5,<mask>,"     }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(<mask>[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
337,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,IdentifierMutator-Literal,0,1,1,0.018576916,<mask>,"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
338,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,IdentifierMutator-Literal,0,2,2,0.011121935,<mask>,"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
339,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,173,7498,7498,IdentifierMutator-Literal,0,3,3,0.0020898054,<mask>,"   }

                        // split it up
                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[<mask>]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
340,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7559,7563,MethodCallMutator,split,Split,2,1.318959E-5,"parts[1].<mask>(""\\+"")","                    final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].<mask>(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
341,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7559,7563,MethodCallMutator,split,join,3,1.0028735E-5,"parts[1].<mask>(""\\+"")","                    final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].<mask>(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
342,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7559,7563,MethodCallMutator,split,slice,4,8.785274E-6,"parts[1].<mask>(""\\+"")","                    final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].<mask>(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
343,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,ArrayAccessMutator,1,2,1,0.041256513,parts[<mask>],"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
344,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,ArrayAccessMutator,1,3,2,0.008437282,parts[<mask>],"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
345,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,ArrayAccessMutator,1,0,3,0.0024527307,parts[<mask>],"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
346,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7550,7554,IdentifierMutator-Variable,parts,part,1,0.0034204295,<mask>,"                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs =<mask>[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
347,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7550,7554,IdentifierMutator-Variable,parts,matches,2,6.931137E-5,<mask>,"                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs =<mask>[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
348,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7550,7554,IdentifierMutator-Variable,parts,lines,3,2.2318352E-5,<mask>,"                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs =<mask>[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
349,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7550,7554,IdentifierMutator-Variable,parts,params,4,2.0659101E-5,<mask>,"                        final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs =<mask>[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
350,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,IdentifierMutator-Literal,1,2,1,0.041256513,<mask>,"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
351,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,IdentifierMutator-Literal,1,3,2,0.008437282,<mask>,"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
352,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7556,7556,IdentifierMutator-Literal,1,0,3,0.0024527307,<mask>,"                      final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[<mask>].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
353,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7565,7569,IdentifierMutator-Literal,"""\\+""",""",""",0,0.3605202,<mask>,"                  final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(<mask>);
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
354,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7565,7569,IdentifierMutator-Literal,"""\\+""",",""",1,0.11957294,<mask>,"                  final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(<mask>);
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
355,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7565,7569,IdentifierMutator-Literal,"""\\+""",/,2,0.06468285,<mask>,"                  final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(<mask>);
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
356,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7565,7569,IdentifierMutator-Literal,"""\\+""","\""",3,0.05125225,<mask>,"                  final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(<mask>);
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
357,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,174,7565,7569,IdentifierMutator-Literal,"""\\+""",|,4,0.038203377,<mask>,"                  final String[] parts = line.split(""\\s+"");

                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(<mask>);
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
358,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7629,7634,MethodCallMutator,equals,split,0,0.8328771,"parts[2].<mask>(""true"")","                    if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].<mask>(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
359,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7629,7634,MethodCallMutator,equals,get,1,0.04477292,"parts[2].<mask>(""true"")","                    if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].<mask>(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
360,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7629,7634,MethodCallMutator,equals,join,2,0.024826044,"parts[2].<mask>(""true"")","                    if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].<mask>(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
361,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7629,7634,MethodCallMutator,equals,filter,3,0.019349668,"parts[2].<mask>(""true"")","                    if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].<mask>(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
362,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7629,7634,MethodCallMutator,equals,format,4,0.016261857,"parts[2].<mask>(""true"")","                    if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].<mask>(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
363,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,ArrayAccessMutator,2,3,1,0.12466742,parts[<mask>],"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
364,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,ArrayAccessMutator,2,1,2,0.01026985,parts[<mask>],"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
365,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,ArrayAccessMutator,2,4,3,0.009169122,parts[<mask>],"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
366,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,ArrayAccessMutator,2,0,4,0.0055556283,parts[<mask>],"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
367,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7620,7624,IdentifierMutator-Variable,parts,part,1,0.0061360337,<mask>,"                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept =<mask>[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
368,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7620,7624,IdentifierMutator-Variable,parts,matches,2,0.0010213759,<mask>,"                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept =<mask>[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
369,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7620,7624,IdentifierMutator-Variable,parts,args,3,3.616176E-4,<mask>,"                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept =<mask>[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
370,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7620,7624,IdentifierMutator-Variable,parts,params,4,3.4957848E-4,<mask>,"                        if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept =<mask>[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
371,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,IdentifierMutator-Literal,2,3,1,0.12466742,<mask>,"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
372,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,IdentifierMutator-Literal,2,1,2,0.01026985,<mask>,"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
373,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,IdentifierMutator-Literal,2,4,3,0.009169122,<mask>,"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
374,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7626,7626,IdentifierMutator-Literal,2,0,4,0.0055556283,<mask>,"                      if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[<mask>].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
375,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7636,7641,IdentifierMutator-Literal,"""true""",accept,0,0.91962904,<mask>,"                 if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(<mask>);

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
376,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7636,7641,IdentifierMutator-Literal,"""true""",Accept,1,0.04536629,<mask>,"                 if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(<mask>);

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
377,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7636,7641,IdentifierMutator-Literal,"""true""",true,2,0.025847897,<mask>,"                 if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(<mask>);

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
378,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7636,7641,IdentifierMutator-Literal,"""true""",false,3,0.0015003928,<mask>,"                 if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(<mask>);

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
379,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,175,7636,7641,IdentifierMutator-Literal,"""true""",null,4,7.602838E-4,<mask>,"                 if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(<mask>);

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
380,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7676,7678,MethodCallMutator,add,push,1,0.07182625,"rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept))","                          throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
381,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7676,7678,MethodCallMutator,add,append,2,0.03740217,"rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept))","                          throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
382,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7676,7678,MethodCallMutator,add,remove,4,0.0013465944,"rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept))","                          throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.<mask>(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
383,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7670,7674,IdentifierMutator-Variable,rules,languages,1,0.0013558234,<mask>,"               if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");<mask>.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
384,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7670,7674,IdentifierMutator-Variable,rules,patterns,3,3.1693594E-4,<mask>,"               if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");<mask>.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
385,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7670,7674,IdentifierMutator-Variable,rules,Rules,4,2.7473285E-4,<mask>,"               if (parts.length != 3) {
                            throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");<mask>.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
386,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7693,7699,IdentifierMutator-Variable,pattern,Pattern,2,5.9390394E-4,<mask>,"                    throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(<mask>, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
387,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7693,7699,IdentifierMutator-Variable,pattern,rule,3,3.6136052E-4,<mask>,"                    throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(<mask>, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
388,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7693,7699,IdentifierMutator-Variable,pattern,language,4,1.5039631E-4,<mask>,"                    throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(<mask>, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
389,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7729,7734,MethodCallMutator,asList,copy,0,0.20388879,Arrays.<mask>(langs),"         throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.<mask>(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
390,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7729,7734,MethodCallMutator,asList,from,1,0.17928478,Arrays.<mask>(langs),"         throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.<mask>(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
391,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7729,7734,MethodCallMutator,asList,Stream,2,0.09416036,Arrays.<mask>(langs),"         throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.<mask>(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
392,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7729,7734,MethodCallMutator,asList,List,3,0.091068774,Arrays.<mask>(langs),"         throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.<mask>(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
393,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7729,7734,MethodCallMutator,asList,stream,4,0.051768523,Arrays.<mask>(langs),"         throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.<mask>(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
394,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7736,7740,IdentifierMutator-Variable,langs,language,0,0.4711889,<mask>,"      throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(<mask>)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
395,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7736,7740,IdentifierMutator-Variable,langs,lang,1,0.24266896,<mask>,"      throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(<mask>)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
396,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7736,7740,IdentifierMutator-Variable,langs,rules,2,0.07471519,<mask>,"      throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(<mask>)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
397,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7736,7740,IdentifierMutator-Variable,langs,strings,3,0.033633832,<mask>,"      throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(<mask>)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
398,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7736,7740,IdentifierMutator-Variable,langs,l,4,0.026846394,<mask>,"      throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(<mask>)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
399,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7745,7750,IdentifierMutator-Variable,accept,Accept,2,3.7342194E-4,<mask>,"   throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)),<mask>));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
400,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7745,7750,IdentifierMutator-Variable,accept,accepted,3,1.2695424E-4,<mask>,"   throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)),<mask>));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
401,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,177,7745,7750,IdentifierMutator-Variable,accept,accepts,4,1.2378095E-4,<mask>,"   throw new IllegalArgumentException(""Malformed line '"" + rawLine +
                                    ""' in language resource '"" + languageRulesResourceName + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)),<mask>));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules, languages);
   "
402,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7849,7853,MethodCallMutator,close,exit,1,0.06614423,scanner.<mask>(),"               }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.<mask>();
        }
        return new Lang(rules, languages);
   "
403,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7849,7853,MethodCallMutator,close,reset,2,0.025453543,scanner.<mask>(),"               }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.<mask>();
        }
        return new Lang(rules, languages);
   "
404,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7849,7853,MethodCallMutator,close,end,3,0.022577401,scanner.<mask>(),"               }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.<mask>();
        }
        return new Lang(rules, languages);
   "
405,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7849,7853,MethodCallMutator,close,stop,4,0.0118696205,scanner.<mask>(),"               }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.<mask>();
        }
        return new Lang(rules, languages);
   "
406,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7841,7847,IdentifierMutator-Variable,scanner,parser,0,0.12057016,<mask>,"Name + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {<mask>.close();
        }
        return new Lang(rules, languages);
   "
407,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7841,7847,IdentifierMutator-Variable,scanner,stream,1,0.11424295,<mask>,"Name + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {<mask>.close();
        }
        return new Lang(rules, languages);
   "
408,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7841,7847,IdentifierMutator-Variable,scanner,reader,2,0.094176896,<mask>,"Name + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {<mask>.close();
        }
        return new Lang(rules, languages);
   "
409,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7841,7847,IdentifierMutator-Variable,scanner,file,3,0.05427919,<mask>,"Name + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {<mask>.close();
        }
        return new Lang(rules, languages);
   "
410,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,182,7841,7847,IdentifierMutator-Variable,scanner,input,4,0.026317457,<mask>,"Name + ""'"");
                        }

                        final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {<mask>.close();
        }
        return new Lang(rules, languages);
   "
411,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7892,7896,IdentifierMutator-Variable,rules,pattern,1,0.10398794,<mask>,"                 final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(<mask>, languages);
   "
412,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7892,7896,IdentifierMutator-Variable,rules,rule,2,0.034068428,<mask>,"                 final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(<mask>, languages);
   "
413,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7892,7896,IdentifierMutator-Variable,rules,name,3,0.027204234,<mask>,"                 final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(<mask>, languages);
   "
414,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7892,7896,IdentifierMutator-Variable,rules,names,4,0.010191164,<mask>,"                 final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(<mask>, languages);
   "
415,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7899,7907,IdentifierMutator-Variable,languages,false,0,0.03377581,<mask>,"               final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules,<mask>);
   "
416,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7899,7907,IdentifierMutator-Variable,languages,parser,1,0.033613726,<mask>,"               final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules,<mask>);
   "
417,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7899,7907,IdentifierMutator-Variable,languages,locale,2,0.033358123,<mask>,"               final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules,<mask>);
   "
418,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7899,7907,IdentifierMutator-Variable,languages,source,3,0.032874357,<mask>,"               final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules,<mask>);
   "
419,Lang.java,loadFromResource,"Lang loadFromResource(final String languageRulesResourceName, final Languages languages)",129,184,7899,7907,IdentifierMutator-Variable,languages,context,4,0.029694125,<mask>,"               final Pattern pattern = Pattern.compile(parts[0]);
                        final String[] langs = parts[1].split(""\\+"");
                        final boolean accept = parts[2].equals(""true"");

                        rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));
                    }
                }
            }
        } finally {
            scanner.close();
        }
        return new Lang(rules,<mask>);
   "
420,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8487,8500,MethodCallMutator,guessLanguages,guess,0,0.35506037,<mask>(text),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls =<mask>(text);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
421,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8487,8500,MethodCallMutator,guessLanguages,parse,1,0.21112038,<mask>(text),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls =<mask>(text);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
422,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8487,8500,MethodCallMutator,guessLanguages,find,2,0.07212553,<mask>(text),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls =<mask>(text);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
423,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8487,8500,MethodCallMutator,guessLanguages,get,3,0.045456823,<mask>(text),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls =<mask>(text);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
424,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8487,8500,MethodCallMutator,guessLanguages,guesses,4,0.040443443,<mask>(text),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls =<mask>(text);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
425,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8502,8505,IdentifierMutator-Variable,text,Text,2,9.628872E-5,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(<mask>);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
426,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8502,8505,IdentifierMutator-Variable,text,txt,3,3.1269617E-5,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(<mask>);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
427,Lang.java,guessLanguage,String guessLanguage(final String text),202,203,8502,8505,IdentifierMutator-Variable,text,this,4,1.6154256E-5,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(<mask>);
        return ls.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
428,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8569,IdentifierMutator-Conditional,ls.isSingleton()?ls.getAny():Languages.ANY,ls,0,0.99496436,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>;
    }"
429,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8569,IdentifierMutator-Conditional,ls.isSingleton()?ls.getAny():Languages.ANY,text,1,0.0013844143,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>;
    }"
430,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8569,IdentifierMutator-Conditional,ls.isSingleton()?ls.getAny():Languages.ANY,l,2,4.9463985E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>;
    }"
431,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8569,IdentifierMutator-Conditional,ls.isSingleton()?ls.getAny():Languages.ANY,list,3,2.6072375E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>;
    }"
432,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8569,IdentifierMutator-Conditional,ls.isSingleton()?ls.getAny():Languages.ANY,language,4,2.0385126E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>;
    }"
433,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8527,8537,MethodCallMutator,isSingleton,has,0,0.30271426,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.<mask>() ? ls.getAny() : Languages.ANY;
    }"
434,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8527,8537,MethodCallMutator,isSingleton,any,1,0.22431886,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.<mask>() ? ls.getAny() : Languages.ANY;
    }"
435,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8527,8537,MethodCallMutator,isSingleton,get,2,0.08098578,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.<mask>() ? ls.getAny() : Languages.ANY;
    }"
436,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8527,8537,MethodCallMutator,isSingleton,empty,3,0.04052323,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.<mask>() ? ls.getAny() : Languages.ANY;
    }"
437,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8527,8537,MethodCallMutator,isSingleton,available,4,0.031556003,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.<mask>() ? ls.getAny() : Languages.ANY;
    }"
438,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8525,IdentifierMutator-Variable,ls,LS,1,0.0018025541,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
439,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8525,IdentifierMutator-Variable,ls,l,3,0.0013519833,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
440,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8524,8525,IdentifierMutator-Variable,ls,this,4,0.001312253,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return<mask>.isSingleton() ? ls.getAny() : Languages.ANY;
    }"
441,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8546,8551,MethodCallMutator,getAny,language,0,0.7036078,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.<mask>() : Languages.ANY;
    }"
442,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8546,8551,MethodCallMutator,getAny,name,1,0.07977343,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.<mask>() : Languages.ANY;
    }"
443,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8546,8551,MethodCallMutator,getAny,get,2,0.043620788,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.<mask>() : Languages.ANY;
    }"
444,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8546,8551,MethodCallMutator,getAny,default,3,0.026455931,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.<mask>() : Languages.ANY;
    }"
445,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8546,8551,MethodCallMutator,getAny,lang,4,0.011843316,ls.<mask>(),"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.<mask>() : Languages.ANY;
    }"
446,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8543,8544,IdentifierMutator-Variable,ls,LS,1,4.965923E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ?<mask>.getAny() : Languages.ANY;
    }"
447,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8543,8544,IdentifierMutator-Variable,ls,l,2,3.7743675E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ?<mask>.getAny() : Languages.ANY;
    }"
448,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8543,8544,IdentifierMutator-Variable,ls,LCS,3,2.0518924E-4,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ?<mask>.getAny() : Languages.ANY;
    }"
449,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8557,8569,IdentifierMutator-Variable,Languages.ANY,null,0,0.46025258,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() :<mask>;
    }"
450,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8557,8569,IdentifierMutator-Variable,Languages.ANY,"""""",1,0.15420471,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() :<mask>;
    }"
451,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8557,8569,IdentifierMutator-Variable,Languages.ANY,ls,2,0.13297361,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() :<mask>;
    }"
452,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8557,8569,IdentifierMutator-Variable,Languages.ANY,text,3,0.11787472,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() :<mask>;
    }"
453,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8557,8569,IdentifierMutator-Variable,Languages.ANY,"''",4,0.036717687,<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() :<mask>;
    }"
454,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8567,8569,FieldReferenceMutator,ANY,Any,0,0.3401536,Languages.<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() : Languages.<mask>;
    }"
455,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8567,8569,FieldReferenceMutator,ANY,Unknown,1,0.10923158,Languages.<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() : Languages.<mask>;
    }"
456,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8567,8569,FieldReferenceMutator,ANY,any,3,0.07424265,Languages.<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() : Languages.<mask>;
    }"
457,Lang.java,guessLanguage,String guessLanguage(final String text),202,204,8567,8569,FieldReferenceMutator,ANY,ALL,4,0.07405342,Languages.<mask>,"String guessLanguage(final String text) {
        final Languages.LanguageSet ls = guessLanguages(text);
        return ls.isSingleton() ? ls.getAny() : Languages.<mask>;
    }"
458,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8889,8899,MethodCallMutator,toLowerCase,replace,0,0.1351873,input.<mask>(Locale.ENGLISH),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.<mask>(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
459,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8889,8899,MethodCallMutator,toLowerCase,language,1,0.124014385,input.<mask>(Locale.ENGLISH),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.<mask>(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
460,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8889,8899,MethodCallMutator,toLowerCase,region,2,0.08404752,input.<mask>(Locale.ENGLISH),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.<mask>(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
461,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8889,8899,MethodCallMutator,toLowerCase,get,3,0.06779491,input.<mask>(Locale.ENGLISH),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.<mask>(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
462,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8889,8899,MethodCallMutator,toLowerCase,split,4,0.041746207,input.<mask>(Locale.ENGLISH),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.<mask>(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
463,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8883,8887,IdentifierMutator-Variable,input,text,1,9.844231E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text =<mask>.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
464,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8883,8887,IdentifierMutator-Variable,input,language,3,1.6411715E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text =<mask>.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
465,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8883,8887,IdentifierMutator-Variable,input,output,4,1.580845E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text =<mask>.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
466,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8901,8914,IdentifierMutator-Variable,java.util.Locale.ENGLISH,true,0,0.15770906,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
467,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8901,8914,IdentifierMutator-Variable,java.util.Locale.ENGLISH,false,1,0.14396884,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
468,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8901,8914,IdentifierMutator-Variable,java.util.Locale.ENGLISH,language,2,0.048622373,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
469,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8901,8914,IdentifierMutator-Variable,java.util.Locale.ENGLISH,null,3,0.029713077,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
470,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8901,8914,IdentifierMutator-Variable,java.util.Locale.ENGLISH,8,4,0.022580516,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
471,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8908,8914,FieldReferenceMutator,ENGLISH,US,0,0.57742625,java.util.Locale.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
472,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8908,8914,FieldReferenceMutator,ENGLISH,ALL,1,0.09432213,java.util.Locale.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
473,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8908,8914,FieldReferenceMutator,ENGLISH,UG,2,0.061278444,java.util.Locale.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
474,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8908,8914,FieldReferenceMutator,ENGLISH,GB,3,0.020885518,java.util.Locale.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
475,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,215,8908,8914,FieldReferenceMutator,ENGLISH,US,4,0.015923997,java.util.Locale.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.<mask>);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
476,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8988,8999,MethodCallMutator,getLanguages,size,0,0.98651624,this.languages.<mask>(),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.<mask>());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
477,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8988,8999,MethodCallMutator,getLanguages,values,1,0.006497438,this.languages.<mask>(),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.<mask>());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
478,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8988,8999,MethodCallMutator,getLanguages,length,2,0.0014987967,this.languages.<mask>(),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.<mask>());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
479,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8988,8999,MethodCallMutator,getLanguages,keys,3,0.0014428942,this.languages.<mask>(),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.<mask>());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
480,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8988,8999,MethodCallMutator,getLanguages,get,4,0.0011284869,this.languages.<mask>(),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.<mask>());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
481,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8986,IdentifierMutator-Variable,this.languages,this,0,0.66569585,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
482,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8986,IdentifierMutator-Variable,this.languages,rules,1,0.05731216,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
483,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8986,IdentifierMutator-Variable,this.languages,rule,2,0.043931734,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
484,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8986,IdentifierMutator-Variable,this.languages,language,3,0.033022903,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
485,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8986,IdentifierMutator-Variable,this.languages,translation,4,0.02644393,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
486,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8976,IdentifierMutator-ThisAccess,this,rule,1,0.040800102,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
487,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8976,IdentifierMutator-ThisAccess,this,rules,2,0.0071495143,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
488,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8973,8976,IdentifierMutator-ThisAccess,this,Rule,4,0.0016502041,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(<mask>.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
489,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8978,8986,FieldReferenceMutator,languages,language,0,0.2179482,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
490,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8978,8986,FieldReferenceMutator,languages,rules,1,0.13592027,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
491,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8978,8986,FieldReferenceMutator,languages,parser,2,0.06699613,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
492,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8978,8986,FieldReferenceMutator,languages,context,3,0.04505201,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
493,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,217,8978,8986,FieldReferenceMutator,languages,config,4,0.027923213,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.<mask>.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
494,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9049,IdentifierMutator-Variable,this.rules,rules,0,0.96220464,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
495,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9049,IdentifierMutator-Variable,this.rules,this,1,0.015286577,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
496,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9049,IdentifierMutator-Variable,this.rules,rules,2,0.003534858,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
497,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9049,IdentifierMutator-Variable,this.rules,rule,3,0.002858643,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
498,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9049,IdentifierMutator-Variable,this.rules,list,4,0.0012906054,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
499,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9043,IdentifierMutator-ThisAccess,this,rule,2,3.2696838E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
500,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9043,IdentifierMutator-ThisAccess,this,self,3,2.1568956E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
501,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9040,9043,IdentifierMutator-ThisAccess,this,super,4,1.4402621E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule :<mask>.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
502,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9045,9049,FieldReferenceMutator,rules,rule,1,0.0039705355,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
503,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9045,9049,FieldReferenceMutator,rules,Rules,2,0.0015485119,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
504,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9045,9049,FieldReferenceMutator,rules,groups,3,0.0012494178,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
505,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,218,9045,9049,FieldReferenceMutator,rules,list,4,9.096272E-4,this.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.<mask>) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
506,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9075,9081,MethodCallMutator,matches,accept,0,0.6742461,rule.<mask>(text),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.<mask>(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
507,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9075,9081,MethodCallMutator,matches,match,1,0.12673663,rule.<mask>(text),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.<mask>(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
508,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9075,9081,MethodCallMutator,matches,check,2,0.014203097,rule.<mask>(text),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.<mask>(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
509,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9075,9081,MethodCallMutator,matches,adapt,3,0.013574914,rule.<mask>(text),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.<mask>(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
510,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9075,9081,MethodCallMutator,matches,allows,4,0.012610925,rule.<mask>(text),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.<mask>(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
511,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9070,9073,IdentifierMutator-Variable,rule,Rule,2,7.0078374E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (<mask>.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
512,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9070,9073,IdentifierMutator-Variable,rule,rules,3,1.2317936E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (<mask>.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
513,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9070,9073,IdentifierMutator-Variable,rule,feature,4,3.1012492E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (<mask>.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
514,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9083,9086,IdentifierMutator-Variable,text,input,1,0.00191927,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(<mask>)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
515,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9083,9086,IdentifierMutator-Variable,text,word,3,1.99297E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(<mask>)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
516,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,219,9083,9086,IdentifierMutator-Variable,text,Text,4,1.7395001E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(<mask>)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
517,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9129,IdentifierMutator-Variable,rule.acceptOnMatch,continue,0,0.21400677,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
518,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9129,IdentifierMutator-Variable,rule.acceptOnMatch,force,1,0.072313406,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
519,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9129,IdentifierMutator-Variable,rule.acceptOnMatch,reverse,2,0.057924476,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
520,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9129,IdentifierMutator-Variable,rule.acceptOnMatch,match,3,0.03786215,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
521,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9129,IdentifierMutator-Variable,rule.acceptOnMatch,true,4,0.032726552,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
522,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9115,IdentifierMutator-Variable,rule,this,1,0.15211155,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
523,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9115,IdentifierMutator-Variable,rule,rules,2,0.0020286152,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
524,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9115,IdentifierMutator-Variable,rule,config,3,0.0016000782,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
525,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9112,9115,IdentifierMutator-Variable,rule,Rule,4,0.0015324185,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (<mask>.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
526,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9117,9129,FieldReferenceMutator,acceptOnMatch,reverse,0,0.098419175,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
527,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9117,9129,FieldReferenceMutator,acceptOnMatch,replace,1,0.07008692,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
528,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9117,9129,FieldReferenceMutator,acceptOnMatch,multiple,2,0.044543754,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
529,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9117,9129,FieldReferenceMutator,acceptOnMatch,translation,3,0.029944275,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
530,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,220,9117,9129,FieldReferenceMutator,acceptOnMatch,exclusive,4,0.02876504,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.<mask>) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
531,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9160,9168,MethodCallMutator,retainAll,add,0,0.9811679,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.<mask>(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
532,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9160,9168,MethodCallMutator,retainAll,update,1,0.011627735,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.<mask>(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
533,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9160,9168,MethodCallMutator,retainAll,remove,2,0.0017111177,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.<mask>(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
534,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9160,9168,MethodCallMutator,retainAll,Add,3,8.014877E-4,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.<mask>(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
535,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9160,9168,MethodCallMutator,retainAll,all,4,5.126763E-4,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.<mask>(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
536,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9154,9158,IdentifierMutator-Variable,langs,languages,0,0.88114434,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {<mask>.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
537,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9154,9158,IdentifierMutator-Variable,langs,language,1,0.019707985,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {<mask>.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
538,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9154,9158,IdentifierMutator-Variable,langs,lang,2,0.018430876,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {<mask>.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
539,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9154,9158,IdentifierMutator-Variable,langs,translations,3,0.01090787,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {<mask>.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
540,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9154,9158,IdentifierMutator-Variable,langs,texts,4,0.006505248,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {<mask>.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
541,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9183,IdentifierMutator-Variable,rule.languages,rule,0,0.42425856,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
542,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9183,IdentifierMutator-Variable,rule.languages,rules,1,0.198019,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
543,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9183,IdentifierMutator-Variable,rule.languages,language,2,0.14401917,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
544,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9183,IdentifierMutator-Variable,rule.languages,translation,3,0.047431197,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
545,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9183,IdentifierMutator-Variable,rule.languages,text,4,0.04654308,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
546,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9173,IdentifierMutator-Variable,rule,this,2,6.3263615E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
547,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9173,IdentifierMutator-Variable,rule,match,3,2.9813304E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
548,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9170,9173,IdentifierMutator-Variable,rule,Rule,4,2.8714134E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(<mask>.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
549,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9175,9183,FieldReferenceMutator,languages,language,0,0.8793672,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
550,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9175,9183,FieldReferenceMutator,languages,lang,1,0.0626325,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
551,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9175,9183,FieldReferenceMutator,languages,anguages,2,0.017544381,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
552,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,221,9175,9183,FieldReferenceMutator,languages,rules,3,0.016895067,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.<mask>);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
553,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9238,9246,MethodCallMutator,removeAll,add,0,0.9272594,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.<mask>(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
554,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9238,9246,MethodCallMutator,removeAll,remove,1,0.03333878,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.<mask>(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
555,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9238,9246,MethodCallMutator,removeAll,update,2,0.017286468,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.<mask>(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
556,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9238,9246,MethodCallMutator,removeAll,append,3,0.0033816916,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.<mask>(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
557,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9238,9246,MethodCallMutator,removeAll,clear,4,0.0014879025,langs.<mask>(rule.languages),"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.<mask>(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
558,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9232,9236,IdentifierMutator-Variable,langs,languages,0,0.71226305,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {<mask>.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
559,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9232,9236,IdentifierMutator-Variable,langs,lang,1,0.04864979,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {<mask>.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
560,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9232,9236,IdentifierMutator-Variable,langs,language,2,0.03892158,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {<mask>.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
561,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9232,9236,IdentifierMutator-Variable,langs,ls,3,0.03518774,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {<mask>.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
562,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9232,9236,IdentifierMutator-Variable,langs,lang,4,0.018515633,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {<mask>.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
563,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9261,IdentifierMutator-Variable,rule.languages,text,0,0.4255151,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
564,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9261,IdentifierMutator-Variable,rule.languages,language,1,0.15210947,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
565,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9261,IdentifierMutator-Variable,rule.languages,rules,2,0.089836136,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
566,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9261,IdentifierMutator-Variable,rule.languages,translation,3,0.06943733,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
567,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9261,IdentifierMutator-Variable,rule.languages,rule,4,0.038079303,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
568,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9251,IdentifierMutator-Variable,rule,this,1,2.49916E-4,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
569,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9251,IdentifierMutator-Variable,rule,Rule,3,6.750418E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
570,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9248,9251,IdentifierMutator-Variable,rule,rules,4,5.2299474E-5,<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(<mask>.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
571,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9253,9261,FieldReferenceMutator,languages,language,0,0.7779572,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
572,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9253,9261,FieldReferenceMutator,languages,lang,1,0.13258427,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
573,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9253,9261,FieldReferenceMutator,languages,rules,2,0.028828936,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
574,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9253,9261,FieldReferenceMutator,languages,anguages,3,0.0131092295,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
575,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,223,9253,9261,FieldReferenceMutator,languages,strings,4,0.0064857528,rule.<mask>,"Languages.LanguageSet guessLanguages(final String input) {
        final String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.<mask>);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
576,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9371,9374,MethodCallMutator,from,create,0,0.4844539,LanguageSet.<mask>(langs)," String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.<mask>(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
577,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9371,9374,MethodCallMutator,from,of,1,0.11279912,LanguageSet.<mask>(langs)," String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.<mask>(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
578,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9371,9374,MethodCallMutator,from,parse,3,0.028410196,LanguageSet.<mask>(langs)," String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.<mask>(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
579,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9371,9374,MethodCallMutator,from,union,4,0.023137141,LanguageSet.<mask>(langs)," String text = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.<mask>(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
580,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9376,9380,IdentifierMutator-Variable,langs,text,0,0.4005085,<mask>," = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(<mask>);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
581,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9376,9380,IdentifierMutator-Variable,langs,language,1,0.11288374,<mask>," = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(<mask>);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
582,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9376,9380,IdentifierMutator-Variable,langs,input,2,0.08617294,<mask>," = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(<mask>);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
583,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9376,9380,IdentifierMutator-Variable,langs,translation,3,0.022980269,<mask>," = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(<mask>);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
584,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,228,9376,9380,IdentifierMutator-Variable,langs,lang,4,0.022808418,<mask>," = input.toLowerCase(Locale.ENGLISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(<mask>);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
585,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9461,IdentifierMutator-Conditional,ls.equals(Languages.NO_LANGUAGES)?Languages.ANY_LANGUAGE:ls,ls,0,0.99974793,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>;
    }"
586,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9461,IdentifierMutator-Conditional,ls.equals(Languages.NO_LANGUAGES)?Languages.ANY_LANGUAGE:ls,l,1,3.7134207E-5,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>;
    }"
587,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9461,IdentifierMutator-Conditional,ls.equals(Languages.NO_LANGUAGES)?Languages.ANY_LANGUAGE:ls,list,2,2.1856948E-5,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>;
    }"
588,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9461,IdentifierMutator-Conditional,ls.equals(Languages.NO_LANGUAGES)?Languages.ANY_LANGUAGE:ls,LS,3,1.4045941E-5,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>;
    }"
589,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9461,IdentifierMutator-Conditional,ls.equals(Languages.NO_LANGUAGES)?Languages.ANY_LANGUAGE:ls,ps,4,1.35100145E-5,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>;
    }"
590,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9402,9407,MethodCallMutator,equals,has,0,0.38747796,ls.<mask>(NO_LANGUAGES),"

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.<mask>(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
591,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9402,9407,MethodCallMutator,equals,is,1,0.12013997,ls.<mask>(NO_LANGUAGES),"

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.<mask>(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
592,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9402,9407,MethodCallMutator,equals,includes,2,0.09899802,ls.<mask>(NO_LANGUAGES),"

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.<mask>(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
593,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9402,9407,MethodCallMutator,equals,match,3,0.042310145,ls.<mask>(NO_LANGUAGES),"

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.<mask>(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
594,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9402,9407,MethodCallMutator,equals,empty,4,0.035360083,ls.<mask>(NO_LANGUAGES),"

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.<mask>(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
595,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9400,IdentifierMutator-Variable,ls,text,1,0.082671925,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
596,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9400,IdentifierMutator-Variable,ls,language,2,0.027569676,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
597,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9400,IdentifierMutator-Variable,ls,"""""",3,0.022483308,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
598,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9399,9400,IdentifierMutator-Variable,ls,lang,4,0.009415017,<mask>,"ISH);

        final Set<String> langs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return<mask>.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;
    }"
599,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9435,9456,IdentifierMutator-Variable,Languages.ANY_LANGUAGE,null,0,0.7055539,<mask>,"angs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ?<mask> : ls;
    }"
600,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9435,9456,IdentifierMutator-Variable,Languages.ANY_LANGUAGE,undefined,1,0.115064554,<mask>,"angs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ?<mask> : ls;
    }"
601,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9435,9456,IdentifierMutator-Variable,Languages.ANY_LANGUAGE,"""""",2,0.034941193,<mask>,"angs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ?<mask> : ls;
    }"
602,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9435,9456,IdentifierMutator-Variable,Languages.ANY_LANGUAGE,false,3,0.015414064,<mask>,"angs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ?<mask> : ls;
    }"
603,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9435,9456,IdentifierMutator-Variable,Languages.ANY_LANGUAGE,this,4,0.013514071,<mask>,"angs = new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ?<mask> : ls;
    }"
604,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9445,9456,FieldReferenceMutator,ANY_LANGUAGE,ALL,0,0.15099409,Languages.<mask>," new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.<mask> : ls;
    }"
605,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9445,9456,FieldReferenceMutator,ANY_LANGUAGE,default,1,0.13725296,Languages.<mask>," new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.<mask> : ls;
    }"
606,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9445,9456,FieldReferenceMutator,ANY_LANGUAGE,Unknown,2,0.09111872,Languages.<mask>," new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.<mask> : ls;
    }"
607,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9445,9456,FieldReferenceMutator,ANY_LANGUAGE,none,3,0.07131531,Languages.<mask>," new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.<mask> : ls;
    }"
608,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9445,9456,FieldReferenceMutator,ANY_LANGUAGE,all,4,0.05844225,Languages.<mask>," new HashSet<String>(this.languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.<mask> : ls;
    }"
609,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9460,9461,IdentifierMutator-Variable,ls,null,1,0.004418364,<mask>,".languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE :<mask>;
    }"
610,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9460,9461,IdentifierMutator-Variable,ls,"""""",2,0.0010035809,<mask>,".languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE :<mask>;
    }"
611,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9460,9461,IdentifierMutator-Variable,ls,"''",3,9.354822E-4,<mask>,".languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE :<mask>;
    }"
612,Lang.java,guessLanguages,Languages.LanguageSet guessLanguages(final String input),214,229,9460,9461,IdentifierMutator-Variable,ls,0,4,8.398902E-4,<mask>,".languages.getLanguages());
        for (final LangRule rule : this.rules) {
            if (rule.matches(text)) {
                if (rule.acceptOnMatch) {
                    langs.retainAll(rule.languages);
                } else {
                    langs.removeAll(rule.languages);
                }
            }
        }

        final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);
        return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE :<mask>;
    }"
