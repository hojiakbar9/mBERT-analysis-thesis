id,classname,method_name,method_sig,method_def_line,mut_location,mut_start,mut_end,mut_operator,orig_token,pred_token,pred_pos,pred_score,masked_expr,masked_seq
0,Node.java,attr,String attr(String attributeKey),70,71,2162,2168,MethodCallMutator,notNull,name,0,0.109533966,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
1,Node.java,attr,String attr(String attributeKey),70,71,2162,2168,MethodCallMutator,notNull,validate,1,0.07184036,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
2,Node.java,attr,String attr(String attributeKey),70,71,2162,2168,MethodCallMutator,notNull,valid,2,0.048511304,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
3,Node.java,attr,String attr(String attributeKey),70,71,2162,2168,MethodCallMutator,notNull,ok,3,0.043763243,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
4,Node.java,attr,String attr(String attributeKey),70,71,2162,2168,MethodCallMutator,notNull,str,4,0.03419038,Validate.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
5,Node.java,attr,String attr(String attributeKey),70,71,2170,2181,IdentifierMutator-Variable,attributeKey,attribute,0,0.50077075,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
6,Node.java,attr,String attr(String attributeKey),70,71,2170,2181,IdentifierMutator-Variable,attributeKey,attr,1,0.14899689,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
7,Node.java,attr,String attr(String attributeKey),70,71,2170,2181,IdentifierMutator-Variable,attributeKey,params,2,0.039276846,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
8,Node.java,attr,String attr(String attributeKey),70,71,2170,2181,IdentifierMutator-Variable,attributeKey,this,3,0.036104456,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
9,Node.java,attr,String attr(String attributeKey),70,71,2170,2181,IdentifierMutator-Variable,attributeKey,properties,4,0.026789797,<mask>,"String attr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
10,Node.java,attr,String attr(String attributeKey),70,73,2209,2214,MethodCallMutator,hasKey,has,0,0.77245176,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
11,Node.java,attr,String attr(String attributeKey),70,73,2209,2214,MethodCallMutator,hasKey,key,1,0.10355841,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
12,Node.java,attr,String attr(String attributeKey),70,73,2209,2214,MethodCallMutator,hasKey,get,2,0.07401071,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
13,Node.java,attr,String attr(String attributeKey),70,73,2209,2214,MethodCallMutator,hasKey,contains,3,0.019030085,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
14,Node.java,attr,String attr(String attributeKey),70,73,2209,2214,MethodCallMutator,hasKey,Key,4,0.007519854,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.<mask>(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
15,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,IdentifierMutator-Variable,attributes,ributes,0,0.47679174,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
16,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,IdentifierMutator-Variable,attributes,Attributes,1,0.14697954,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
17,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,IdentifierMutator-Variable,attributes,atts,2,0.12806854,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
18,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,IdentifierMutator-Variable,attributes,attr,3,0.08661255,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
19,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,IdentifierMutator-Variable,attributes,attribute,4,0.043446574,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
20,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,FieldReferenceMutator,attributes,ributes,0,0.47679174,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
21,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,FieldReferenceMutator,attributes,Attributes,1,0.14697954,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
22,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,FieldReferenceMutator,attributes,atts,2,0.12806854,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
23,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,FieldReferenceMutator,attributes,attr,3,0.08661255,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
24,Node.java,attr,String attr(String attributeKey),70,73,2198,2207,FieldReferenceMutator,attributes,attribute,4,0.043446574,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
25,Node.java,attr,String attr(String attributeKey),70,73,2216,2227,IdentifierMutator-Variable,attributeKey,attribute,0,0.64782816,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
26,Node.java,attr,String attr(String attributeKey),70,73,2216,2227,IdentifierMutator-Variable,attributeKey,key,1,0.28368858,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
27,Node.java,attr,String attr(String attributeKey),70,73,2216,2227,IdentifierMutator-Variable,attributeKey,attr,2,0.038323347,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
28,Node.java,attr,String attr(String attributeKey),70,73,2216,2227,IdentifierMutator-Variable,attributeKey,Attribute,3,0.0072946483,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
29,Node.java,attr,String attr(String attributeKey),70,73,2216,2227,IdentifierMutator-Variable,attributeKey,name,4,0.0053622033,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(<mask>))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
30,Node.java,attr,String attr(String attributeKey),70,74,2261,2263,MethodCallMutator,get,key,1,3.4244478E-4,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
31,Node.java,attr,String attr(String attributeKey),70,74,2261,2263,MethodCallMutator,get,value,3,8.540025E-5,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
32,Node.java,attr,String attr(String attributeKey),70,74,2261,2263,MethodCallMutator,get,attr,4,6.2119514E-5,attributes.<mask>(attributeKey),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.<mask>(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
33,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,IdentifierMutator-Variable,attributes,ributes,1,0.0029019509,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
34,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,IdentifierMutator-Variable,attributes,Attributes,2,9.050086E-5,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
35,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,IdentifierMutator-Variable,attributes,Attributes,3,8.153615E-5,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
36,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,IdentifierMutator-Variable,attributes,attribute,4,9.502548E-6,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
37,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,FieldReferenceMutator,attributes,ributes,1,0.0029019509,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
38,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,FieldReferenceMutator,attributes,Attributes,2,9.050086E-5,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
39,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,FieldReferenceMutator,attributes,Attributes,3,8.153615E-5,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
40,Node.java,attr,String attr(String attributeKey),70,74,2250,2259,FieldReferenceMutator,attributes,attribute,4,9.502548E-6,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return<mask>.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
41,Node.java,attr,String attr(String attributeKey),70,74,2265,2276,IdentifierMutator-Variable,attributeKey,attribute,0,0.44765186,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
42,Node.java,attr,String attr(String attributeKey),70,74,2265,2276,IdentifierMutator-Variable,attributeKey,key,1,0.31832093,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
43,Node.java,attr,String attr(String attributeKey),70,74,2265,2276,IdentifierMutator-Variable,attributeKey,attr,2,0.21458097,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
44,Node.java,attr,String attr(String attributeKey),70,74,2265,2276,IdentifierMutator-Variable,attributeKey,Attribute,3,0.003155875,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
45,Node.java,attr,String attr(String attributeKey),70,74,2265,2276,IdentifierMutator-Variable,attributeKey,name,4,0.0023406353,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(<mask>);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
46,Node.java,attr,String attr(String attributeKey),70,75,2324,2333,MethodCallMutator,startsWith,has,0,0.40886843,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
47,Node.java,attr,String attr(String attributeKey),70,75,2324,2333,MethodCallMutator,startsWith,match,1,0.14566256,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
48,Node.java,attr,String attr(String attributeKey),70,75,2324,2333,MethodCallMutator,startsWith,is,2,0.12671396,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
49,Node.java,attr,String attr(String attributeKey),70,75,2324,2333,MethodCallMutator,startsWith,contains,3,0.04744384,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
50,Node.java,attr,String attr(String attributeKey),70,75,2324,2333,MethodCallMutator,startsWith,split,4,0.041585784,"attributeKey.toLowerCase().<mask>(""abs:"")","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().<mask>(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
51,Node.java,attr,String attr(String attributeKey),70,75,2310,2320,MethodCallMutator,toLowerCase,length,0,0.9017417,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
52,Node.java,attr,String attr(String attributeKey),70,75,2310,2320,MethodCallMutator,toLowerCase,string,1,0.023538226,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
53,Node.java,attr,String attr(String attributeKey),70,75,2310,2320,MethodCallMutator,toLowerCase,name,2,0.023005467,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
54,Node.java,attr,String attr(String attributeKey),70,75,2310,2320,MethodCallMutator,toLowerCase,strip,3,0.010511477,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
55,Node.java,attr,String attr(String attributeKey),70,75,2310,2320,MethodCallMutator,toLowerCase,value,4,0.007848039,attributeKey.<mask>(),"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.<mask>().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
56,Node.java,attr,String attr(String attributeKey),70,75,2297,2308,IdentifierMutator-Variable,attributeKey,key,0,0.8080727,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
57,Node.java,attr,String attr(String attributeKey),70,75,2297,2308,IdentifierMutator-Variable,attributeKey,attribute,1,0.10023665,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
58,Node.java,attr,String attr(String attributeKey),70,75,2297,2308,IdentifierMutator-Variable,attributeKey,attr,2,0.023973336,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
59,Node.java,attr,String attr(String attributeKey),70,75,2297,2308,IdentifierMutator-Variable,attributeKey,name,3,0.017012713,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
60,Node.java,attr,String attr(String attributeKey),70,75,2297,2308,IdentifierMutator-Variable,attributeKey,Key,4,0.0075841574,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (<mask>.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
61,Node.java,attr,String attr(String attributeKey),70,75,2335,2340,IdentifierMutator-Literal,"""abs:""",abs,0,0.6306569,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
62,Node.java,attr,String attr(String attributeKey),70,75,2335,2340,IdentifierMutator-Literal,"""abs:""",url,1,0.064166285,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
63,Node.java,attr,String attr(String attributeKey),70,75,2335,2340,IdentifierMutator-Literal,"""abs:""",http,2,0.041158404,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
64,Node.java,attr,String attr(String attributeKey),70,75,2335,2340,IdentifierMutator-Literal,"""abs:""",Abs,3,0.040019743,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
65,Node.java,attr,String attr(String attributeKey),70,75,2335,2340,IdentifierMutator-Literal,"""abs:""",absolute,4,0.026357861,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(<mask>))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
66,Node.java,attr,String attr(String attributeKey),70,76,2363,2368,MethodCallMutator,absUrl,escape,0,0.19327588,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
67,Node.java,attr,String attr(String attributeKey),70,76,2363,2368,MethodCallMutator,absUrl,abs,1,0.19120514,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
68,Node.java,attr,String attr(String attributeKey),70,76,2363,2368,MethodCallMutator,absUrl,encode,2,0.09609668,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
69,Node.java,attr,String attr(String attributeKey),70,76,2363,2368,MethodCallMutator,absUrl,capitalize,3,0.053886745,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
70,Node.java,attr,String attr(String attributeKey),70,76,2363,2368,MethodCallMutator,absUrl,trim,4,0.04721155,"<mask>(attributeKey.substring(""abs:"".length()))","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return<mask>(attributeKey.substring(""abs:"".length()));
        else return """";
    }"
71,Node.java,attr,String attr(String attributeKey),70,76,2383,2391,MethodCallMutator,substring,replace,0,0.49155405,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
72,Node.java,attr,String attr(String attributeKey),70,76,2383,2391,MethodCallMutator,substring,split,1,0.3066986,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
73,Node.java,attr,String attr(String attributeKey),70,76,2383,2391,MethodCallMutator,substring,slice,2,0.052060924,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
74,Node.java,attr,String attr(String attributeKey),70,76,2383,2391,MethodCallMutator,substring,repeat,3,0.03901876,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
75,Node.java,attr,String attr(String attributeKey),70,76,2383,2391,MethodCallMutator,substring,remove,4,0.025734253,"attributeKey.<mask>(""abs:"".length())","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.<mask>(""abs:"".length()));
        else return """";
    }"
76,Node.java,attr,String attr(String attributeKey),70,76,2370,2381,IdentifierMutator-Variable,attributeKey,url,0,0.38625428,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
77,Node.java,attr,String attr(String attributeKey),70,76,2370,2381,IdentifierMutator-Variable,attributeKey,attribute,1,0.1568298,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
78,Node.java,attr,String attr(String attributeKey),70,76,2370,2381,IdentifierMutator-Variable,attributeKey,attr,2,0.0843108,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
79,Node.java,attr,String attr(String attributeKey),70,76,2370,2381,IdentifierMutator-Variable,attributeKey,key,3,0.07180425,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
80,Node.java,attr,String attr(String attributeKey),70,76,2370,2381,IdentifierMutator-Variable,attributeKey,uri,4,0.05023905,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(<mask>.substring(""abs:"".length()));
        else return """";
    }"
81,Node.java,attr,String attr(String attributeKey),70,76,2400,2405,MethodCallMutator,length,value,1,0.007828989,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
82,Node.java,attr,String attr(String attributeKey),70,76,2400,2405,MethodCallMutator,length,split,2,0.0041416395,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
83,Node.java,attr,String attr(String attributeKey),70,76,2400,2405,MethodCallMutator,length,get,3,0.0028880842,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
84,Node.java,attr,String attr(String attributeKey),70,76,2400,2405,MethodCallMutator,length,pop,4,0.002736324,"""abs:"".<mask>()","String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".<mask>()));
        else return """";
    }"
85,Node.java,attr,String attr(String attributeKey),70,76,2393,2398,IdentifierMutator-Literal,"""abs:""",abs,0,0.9743003,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
86,Node.java,attr,String attr(String attributeKey),70,76,2393,2398,IdentifierMutator-Literal,"""abs:""",Abs,1,0.015447863,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
87,Node.java,attr,String attr(String attributeKey),70,76,2393,2398,IdentifierMutator-Literal,"""abs:""",prefix,2,0.0013023814,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
88,Node.java,attr,String attr(String attributeKey),70,76,2393,2398,IdentifierMutator-Literal,"""abs:""",url,3,0.0010264223,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
89,Node.java,attr,String attr(String attributeKey),70,76,2393,2398,IdentifierMutator-Literal,"""abs:""",absolute,4,5.2792125E-4,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(<mask>.length()));
        else return """";
    }"
90,Node.java,attr,String attr(String attributeKey),70,77,2432,2433,IdentifierMutator-Literal,"""""",null,0,0.5953706,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
91,Node.java,attr,String attr(String attributeKey),70,77,2432,2433,IdentifierMutator-Literal,"""""",undefined,2,0.040908862,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
92,Node.java,attr,String attr(String attributeKey),70,77,2432,2433,IdentifierMutator-Literal,"""""",url,3,0.028195165,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
93,Node.java,attr,String attr(String attributeKey),70,77,2432,2433,IdentifierMutator-Literal,"""""",attribute,4,0.02390126,<mask>,"String attr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributes.hasKey(attributeKey))
            return attributes.get(attributeKey);
        else if (attributeKey.toLowerCase().startsWith(""abs:""))
            return absUrl(attributeKey.substring(""abs:"".length()));
        else return<mask>;
    }"
94,Node.java,attributes,Attributes attributes(),84,85,2655,2664,IdentifierMutator-Variable,attributes,attribute,1,0.05009775,<mask>,"Attributes attributes() {
        return<mask>;
    }"
95,Node.java,attributes,Attributes attributes(),84,85,2655,2664,IdentifierMutator-Variable,attributes,this,2,0.012205256,<mask>,"Attributes attributes() {
        return<mask>;
    }"
96,Node.java,attributes,Attributes attributes(),84,85,2655,2664,IdentifierMutator-Variable,attributes,null,3,0.00793501,<mask>,"Attributes attributes() {
        return<mask>;
    }"
97,Node.java,attributes,Attributes attributes(),84,85,2655,2664,IdentifierMutator-Variable,attributes,true,4,0.005861705,<mask>,"Attributes attributes() {
        return<mask>;
    }"
98,Node.java,attributes,Attributes attributes(),84,85,2655,2664,FieldReferenceMutator,attributes,attribute,1,0.05009775,<mask>,"Attributes attributes() {
        return<mask>;
    }"
99,Node.java,attributes,Attributes attributes(),84,85,2655,2664,FieldReferenceMutator,attributes,this,2,0.012205256,<mask>,"Attributes attributes() {
        return<mask>;
    }"
100,Node.java,attributes,Attributes attributes(),84,85,2655,2664,FieldReferenceMutator,attributes,null,3,0.00793501,<mask>,"Attributes attributes() {
        return<mask>;
    }"
101,Node.java,attributes,Attributes attributes(),84,85,2655,2664,FieldReferenceMutator,attributes,true,4,0.005861705,<mask>,"Attributes attributes() {
        return<mask>;
    }"
102,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2993,2995,MethodCallMutator,put,add,2,0.030581623,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
103,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2993,2995,MethodCallMutator,put,set,3,0.021039039,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
104,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2993,2995,MethodCallMutator,put,attr,4,0.0043093185,"attributes.<mask>(attributeKey, attributeValue)","Node attr(String attributeKey, String attributeValue) {
        attributes.<mask>(attributeKey, attributeValue);
        return this;
    }"
105,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,IdentifierMutator-Variable,attributes,attribute,1,0.01289071,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
106,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,IdentifierMutator-Variable,attributes,Attributes,2,0.0023537038,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
107,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,IdentifierMutator-Variable,attributes,ributes,3,0.0020368248,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
108,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,IdentifierMutator-Variable,attributes,rs,4,0.0016856604,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
109,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,FieldReferenceMutator,attributes,attribute,1,0.01289071,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
110,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,FieldReferenceMutator,attributes,Attributes,2,0.0023537038,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
111,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,FieldReferenceMutator,attributes,ributes,3,0.0020368248,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
112,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2982,2991,FieldReferenceMutator,attributes,rs,4,0.0016856604,<mask>,"Node attr(String attributeKey, String attributeValue) {<mask>.put(attributeKey, attributeValue);
        return this;
    }"
113,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2997,3008,IdentifierMutator-Variable,attributeKey,key,0,0.8288261,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
114,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2997,3008,IdentifierMutator-Variable,attributeKey,attribute,1,0.07130725,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
115,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2997,3008,IdentifierMutator-Variable,attributeKey,attr,2,0.04530645,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
116,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2997,3008,IdentifierMutator-Variable,attributeKey,Key,3,0.01781133,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
117,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,2997,3008,IdentifierMutator-Variable,attributeKey,name,4,0.010350233,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(<mask>, attributeValue);
        return this;
    }"
118,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,3011,3024,IdentifierMutator-Variable,attributeValue,value,0,0.7670979,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
119,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,3011,3024,IdentifierMutator-Variable,attributeValue,attribute,1,0.17351753,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
120,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,3011,3024,IdentifierMutator-Variable,attributeValue,Value,2,0.02680577,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
121,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,3011,3024,IdentifierMutator-Variable,attributeValue,Attribute,3,0.006514622,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
122,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,95,3011,3024,IdentifierMutator-Variable,attributeValue,value,4,0.0034012697,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey,<mask>);
        return this;
    }"
123,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,96,3043,3046,IdentifierMutator-ThisAccess,this,node,0,0.37677994,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
124,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,96,3043,3046,IdentifierMutator-ThisAccess,this,null,2,0.036439702,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
125,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,96,3043,3046,IdentifierMutator-ThisAccess,this,true,3,0.026914654,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
126,Node.java,attr,"Node attr(String attributeKey, String attributeValue)",94,96,3043,3046,IdentifierMutator-ThisAccess,this,attribute,4,0.023713397,<mask>,"Node attr(String attributeKey, String attributeValue) {
        attributes.put(attributeKey, attributeValue);
        return<mask>;
    }"
127,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3299,3305,MethodCallMutator,notNull,validate,0,0.14767465,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
128,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3299,3305,MethodCallMutator,notNull,name,1,0.10395066,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
129,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3299,3305,MethodCallMutator,notNull,ok,2,0.08332597,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
130,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3299,3305,MethodCallMutator,notNull,string,3,0.06830175,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
131,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3299,3305,MethodCallMutator,notNull,string,4,0.038018983,Validate.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.<mask>(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
132,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3307,3318,IdentifierMutator-Variable,attributeKey,attribute,0,0.5243343,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
133,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3307,3318,IdentifierMutator-Variable,attributeKey,attr,1,0.09213308,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
134,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3307,3318,IdentifierMutator-Variable,attributeKey,this,2,0.041156314,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
135,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3307,3318,IdentifierMutator-Variable,attributeKey,name,3,0.028475432,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
136,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,105,3307,3318,IdentifierMutator-Variable,attributeKey,params,4,0.02022508,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(<mask>);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
137,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3362,3371,MethodCallMutator,startsWith,has,0,0.23891445,"attributeKey.toLowerCase().<mask>(""abs:"")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().<mask>(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
138,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3362,3371,MethodCallMutator,startsWith,match,1,0.19055407,"attributeKey.toLowerCase().<mask>(""abs:"")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().<mask>(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
139,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3362,3371,MethodCallMutator,startsWith,split,2,0.17975691,"attributeKey.toLowerCase().<mask>(""abs:"")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().<mask>(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
140,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3362,3371,MethodCallMutator,startsWith,length,3,0.062002763,"attributeKey.toLowerCase().<mask>(""abs:"")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().<mask>(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
141,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3362,3371,MethodCallMutator,startsWith,is,4,0.046418887,"attributeKey.toLowerCase().<mask>(""abs:"")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().<mask>(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
142,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3348,3358,MethodCallMutator,toLowerCase,length,0,0.998221,attributeKey.<mask>(),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.<mask>().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
143,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3348,3358,MethodCallMutator,toLowerCase,string,1,4.801931E-4,attributeKey.<mask>(),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.<mask>().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
144,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3348,3358,MethodCallMutator,toLowerCase,strip,2,2.1771606E-4,attributeKey.<mask>(),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.<mask>().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
145,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3348,3358,MethodCallMutator,toLowerCase,width,3,1.336236E-4,attributeKey.<mask>(),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.<mask>().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
146,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3348,3358,MethodCallMutator,toLowerCase,path,4,1.3066347E-4,attributeKey.<mask>(),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.<mask>().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
147,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3335,3346,IdentifierMutator-Variable,attributeKey,key,0,0.6019392,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
148,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3335,3346,IdentifierMutator-Variable,attributeKey,attribute,1,0.11375547,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
149,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3335,3346,IdentifierMutator-Variable,attributeKey,name,2,0.07130104,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
150,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3335,3346,IdentifierMutator-Variable,attributeKey,url,3,0.036741573,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
151,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3335,3346,IdentifierMutator-Variable,attributeKey,attr,4,0.018243415,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (<mask>.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
152,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3373,3378,IdentifierMutator-Literal,"""abs:""",abs,0,0.53586537,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(<mask>)) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
153,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3373,3378,IdentifierMutator-Literal,"""abs:""",url,1,0.055190068,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(<mask>)) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
154,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3373,3378,IdentifierMutator-Literal,"""abs:""",http,2,0.047080725,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(<mask>)) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
155,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3373,3378,IdentifierMutator-Literal,"""abs:""",://,3,0.037100736,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(<mask>)) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
156,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,107,3373,3378,IdentifierMutator-Literal,"""abs:""",:,4,0.02439492,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(<mask>)) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
157,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3422,3430,MethodCallMutator,substring,replace,0,0.47013187,"attributeKey.<mask>(""abs:"".length())","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.<mask>(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
158,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3422,3430,MethodCallMutator,substring,split,1,0.38103968,"attributeKey.<mask>(""abs:"".length())","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.<mask>(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
159,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3422,3430,MethodCallMutator,substring,remove,2,0.02882289,"attributeKey.<mask>(""abs:"".length())","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.<mask>(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
160,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3422,3430,MethodCallMutator,substring,strip,3,0.028198631,"attributeKey.<mask>(""abs:"".length())","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.<mask>(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
161,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3422,3430,MethodCallMutator,substring,repeat,4,0.014805401,"attributeKey.<mask>(""abs:"".length())","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.<mask>(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
162,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3409,3420,IdentifierMutator-Variable,attributeKey,key,0,0.49851176,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key =<mask>.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
163,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3409,3420,IdentifierMutator-Variable,attributeKey,attribute,1,0.36706948,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key =<mask>.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
164,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3409,3420,IdentifierMutator-Variable,attributeKey,url,2,0.013564517,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key =<mask>.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
165,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3409,3420,IdentifierMutator-Variable,attributeKey,name,3,0.010972756,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key =<mask>.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
166,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3409,3420,IdentifierMutator-Variable,attributeKey,value,4,0.009581412,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key =<mask>.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
167,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3439,3444,MethodCallMutator,length,value,1,0.026921446,"""abs:"".<mask>()","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".<mask>());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
168,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3439,3444,MethodCallMutator,length,join,2,0.019224925,"""abs:"".<mask>()","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".<mask>());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
169,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3439,3444,MethodCallMutator,length,split,3,0.012130652,"""abs:"".<mask>()","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".<mask>());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
170,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3439,3444,MethodCallMutator,length,pop,4,0.010269282,"""abs:"".<mask>()","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".<mask>());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
171,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3432,3437,IdentifierMutator-Literal,"""abs:""",abs,0,0.8450985,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(<mask>.length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
172,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3432,3437,IdentifierMutator-Literal,"""abs:""",Abs,1,0.10283053,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(<mask>.length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
173,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3432,3437,IdentifierMutator-Literal,"""abs:""",URL,2,0.0047558104,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(<mask>.length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
174,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3432,3437,IdentifierMutator-Literal,"""abs:""",url,3,0.002806102,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(<mask>.length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
175,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,108,3432,3437,IdentifierMutator-Literal,"""abs:""",prefix,4,0.0025388424,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(<mask>.length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
176,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3488,3491,BinaryOperatorMutator,&&,&,2,0.011579224,"attributes.hasKey(key) <mask> (!absUrl(key).equals(""""))","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key)<mask>!absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
177,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3488,3491,BinaryOperatorMutator,&&,||,3,0.0035928623,"attributes.hasKey(key) <mask> (!absUrl(key).equals(""""))","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key)<mask>!absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
178,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3488,3491,BinaryOperatorMutator,&&,?,4,0.0011579064,"attributes.hasKey(key) <mask> (!absUrl(key).equals(""""))","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key)<mask>!absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
179,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3477,3482,MethodCallMutator,hasKey,has,0,0.8057263,attributes.<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.<mask>(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
180,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3477,3482,MethodCallMutator,hasKey,get,1,0.14824516,attributes.<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.<mask>(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
181,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3477,3482,MethodCallMutator,hasKey,key,2,0.032804403,attributes.<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.<mask>(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
182,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3477,3482,MethodCallMutator,hasKey,remove,3,0.0019058138,attributes.<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.<mask>(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
183,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3477,3482,MethodCallMutator,hasKey,contains,4,0.0012197278,attributes.<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.<mask>(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
184,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,IdentifierMutator-Variable,attributes,tags,0,0.120644525,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
185,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,IdentifierMutator-Variable,attributes,Attributes,1,0.076398864,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
186,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,IdentifierMutator-Variable,attributes,attr,2,0.055023,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
187,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,IdentifierMutator-Variable,attributes,properties,3,0.041446175,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
188,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,IdentifierMutator-Variable,attributes,attribute,4,0.040925123,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
189,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,FieldReferenceMutator,attributes,tags,0,0.120644525,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
190,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,FieldReferenceMutator,attributes,Attributes,1,0.076398864,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
191,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,FieldReferenceMutator,attributes,attr,2,0.055023,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
192,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,FieldReferenceMutator,attributes,properties,3,0.041446175,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
193,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3466,3475,FieldReferenceMutator,attributes,attribute,4,0.040925123,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (<mask>.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
194,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3484,3486,IdentifierMutator-Variable,key,attribute,2,2.6380032E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(<mask>) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
195,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3484,3486,IdentifierMutator-Variable,key,Key,3,2.4559692E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(<mask>) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
196,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3484,3486,IdentifierMutator-Variable,key,name,4,5.0676666E-5,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(<mask>) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
197,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3492,3492,UnaryOperatorMutator,!,(,1,0.052563135,"<mask>absUrl(key).equals("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) &&<mask>absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
198,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3492,3492,UnaryOperatorMutator,!,(!,2,0.040647518,"<mask>absUrl(key).equals("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) &&<mask>absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
199,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3492,3492,UnaryOperatorMutator,!,_,3,0.012855267,"<mask>absUrl(key).equals("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) &&<mask>absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
200,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3492,3492,UnaryOperatorMutator,!,is,4,0.011433069,"<mask>absUrl(key).equals("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) &&<mask>absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
201,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3505,3510,MethodCallMutator,equals,length,0,0.4686131,"absUrl(key).<mask>("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).<mask>(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
202,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3505,3510,MethodCallMutator,equals,split,1,0.17275585,"absUrl(key).<mask>("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).<mask>(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
203,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3505,3510,MethodCallMutator,equals,is,2,0.06271055,"absUrl(key).<mask>("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).<mask>(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
204,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3505,3510,MethodCallMutator,equals,has,3,0.054685127,"absUrl(key).<mask>("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).<mask>(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
205,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3505,3510,MethodCallMutator,equals,empty,4,0.03677553,"absUrl(key).<mask>("""")","boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).<mask>(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
206,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3493,3498,MethodCallMutator,absUrl,escape,0,0.2009987,<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !<mask>(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
207,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3493,3498,MethodCallMutator,absUrl,trim,1,0.15609415,<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !<mask>(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
208,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3493,3498,MethodCallMutator,absUrl,name,2,0.072081074,<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !<mask>(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
209,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3493,3498,MethodCallMutator,absUrl,empty,3,0.05977845,<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !<mask>(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
210,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3493,3498,MethodCallMutator,absUrl,quote,4,0.044465832,<mask>(key),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !<mask>(key).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
211,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3500,3502,IdentifierMutator-Variable,key,url,1,2.9417014E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(<mask>).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
212,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3500,3502,IdentifierMutator-Variable,key,Key,2,2.7449869E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(<mask>).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
213,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3500,3502,IdentifierMutator-Variable,key,attribute,3,1.1114318E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(<mask>).equals(""""))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
214,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3512,3513,IdentifierMutator-Literal,"""""",url,0,0.7264518,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(<mask>))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
215,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3512,3513,IdentifierMutator-Literal,"""""",uri,1,0.05026428,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(<mask>))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
216,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3512,3513,IdentifierMutator-Literal,"""""",URL,2,0.049587518,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(<mask>))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
217,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3512,3513,IdentifierMutator-Literal,"""""",key,3,0.033756465,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(<mask>))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
218,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,109,3512,3513,IdentifierMutator-Literal,"""""",href,4,0.02521837,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(<mask>))
                return true;
        }
        return attributes.hasKey(attributeKey);
    }"
219,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,110,3540,3543,IdentifierMutator-Literal,true,false,0,0.70269805,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return<mask>;
        }
        return attributes.hasKey(attributeKey);
    }"
220,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,110,3540,3543,IdentifierMutator-Literal,true,FALSE,2,3.2189244E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return<mask>;
        }
        return attributes.hasKey(attributeKey);
    }"
221,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,110,3540,3543,IdentifierMutator-Literal,true,TRUE,3,2.9758376E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return<mask>;
        }
        return attributes.hasKey(attributeKey);
    }"
222,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,110,3540,3543,IdentifierMutator-Literal,true,False,4,2.2504698E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return<mask>;
        }
        return attributes.hasKey(attributeKey);
    }"
223,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3582,3587,MethodCallMutator,hasKey,has,0,0.52900475,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.<mask>(attributeKey);
    }"
224,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3582,3587,MethodCallMutator,hasKey,get,1,0.44779316,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.<mask>(attributeKey);
    }"
225,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3582,3587,MethodCallMutator,hasKey,key,2,0.013057416,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.<mask>(attributeKey);
    }"
226,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3582,3587,MethodCallMutator,hasKey,contains,3,0.0051690065,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.<mask>(attributeKey);
    }"
227,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3582,3587,MethodCallMutator,hasKey,has,4,7.5282046E-4,attributes.<mask>(attributeKey),"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.<mask>(attributeKey);
    }"
228,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,IdentifierMutator-Variable,attributes,attribute,1,0.005740224,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
229,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,IdentifierMutator-Variable,attributes,tags,2,0.0017132969,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
230,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,IdentifierMutator-Variable,attributes,values,3,8.6939917E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
231,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,IdentifierMutator-Variable,attributes,properties,4,8.132197E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
232,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,FieldReferenceMutator,attributes,attribute,1,0.005740224,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
233,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,FieldReferenceMutator,attributes,tags,2,0.0017132969,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
234,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,FieldReferenceMutator,attributes,values,3,8.6939917E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
235,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3571,3580,FieldReferenceMutator,attributes,properties,4,8.132197E-4,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return<mask>.hasKey(attributeKey);
    }"
236,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3589,3600,IdentifierMutator-Variable,attributeKey,key,0,0.9686141,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(<mask>);
    }"
237,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3589,3600,IdentifierMutator-Variable,attributeKey,attribute,1,0.01025122,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(<mask>);
    }"
238,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3589,3600,IdentifierMutator-Variable,attributeKey,name,2,0.005074025,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(<mask>);
    }"
239,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3589,3600,IdentifierMutator-Variable,attributeKey,attr,3,0.003289185,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(<mask>);
    }"
240,Node.java,hasAttr,boolean hasAttr(String attributeKey),104,112,3589,3600,IdentifierMutator-Variable,attributeKey,value,4,0.0011806055,<mask>,"boolean hasAttr(String attributeKey) {
        Validate.notNull(attributeKey);

        if (attributeKey.toLowerCase().startsWith(""abs:"")) {
            String key = attributeKey.substring(""abs:"".length());
            if (attributes.hasKey(key) && !absUrl(key).equals(""""))
                return true;
        }
        return attributes.hasKey(<mask>);
    }"
241,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3827,3833,MethodCallMutator,notNull,name,0,0.20177382,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
242,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3827,3833,MethodCallMutator,notNull,valid,1,0.054696407,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
243,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3827,3833,MethodCallMutator,notNull,required,2,0.049006265,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
244,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3827,3833,MethodCallMutator,notNull,ok,3,0.044882797,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
245,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3827,3833,MethodCallMutator,notNull,string,4,0.041588537,Validate.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.<mask>(attributeKey);
        attributes.remove(attributeKey);
        return this;
    }"
246,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3835,3846,IdentifierMutator-Variable,attributeKey,attribute,0,0.6743974,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
247,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3835,3846,IdentifierMutator-Variable,attributeKey,attr,1,0.13766599,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
248,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3835,3846,IdentifierMutator-Variable,attributeKey,this,2,0.024283087,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
249,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3835,3846,IdentifierMutator-Variable,attributeKey,name,3,0.019086098,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
250,Node.java,removeAttr,Node removeAttr(String attributeKey),120,121,3835,3846,IdentifierMutator-Variable,attributeKey,Attributes,4,0.013696793,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(<mask>);
        attributes.remove(attributeKey);
        return this;
    }"
251,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3869,3874,MethodCallMutator,remove,delete,1,0.00938854,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
252,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3869,3874,MethodCallMutator,remove,add,2,0.002851549,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
253,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3869,3874,MethodCallMutator,remove,clear,3,0.0010401283,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
254,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3869,3874,MethodCallMutator,remove,Remove,4,7.3663634E-4,attributes.<mask>(attributeKey),"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.<mask>(attributeKey);
        return this;
    }"
255,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,IdentifierMutator-Variable,attributes,attribute,1,0.012441661,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
256,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,IdentifierMutator-Variable,attributes,nodes,2,0.0032105495,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
257,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,IdentifierMutator-Variable,attributes,names,3,0.0022383237,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
258,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,IdentifierMutator-Variable,attributes,Attributes,4,0.0017424868,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
259,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,FieldReferenceMutator,attributes,attribute,1,0.012441661,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
260,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,FieldReferenceMutator,attributes,nodes,2,0.0032105495,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
261,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,FieldReferenceMutator,attributes,names,3,0.0022383237,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
262,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3858,3867,FieldReferenceMutator,attributes,Attributes,4,0.0017424868,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);<mask>.remove(attributeKey);
        return this;
    }"
263,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3876,3887,IdentifierMutator-Variable,attributeKey,key,0,0.417647,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
264,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3876,3887,IdentifierMutator-Variable,attributeKey,attribute,1,0.38262483,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
265,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3876,3887,IdentifierMutator-Variable,attributeKey,attr,2,0.08098928,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
266,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3876,3887,IdentifierMutator-Variable,attributeKey,this,3,0.030833017,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
267,Node.java,removeAttr,Node removeAttr(String attributeKey),120,122,3876,3887,IdentifierMutator-Variable,attributeKey,Attribute,4,0.019794991,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(<mask>);
        return this;
    }"
268,Node.java,removeAttr,Node removeAttr(String attributeKey),120,123,3906,3909,IdentifierMutator-ThisAccess,this,node,1,0.15996777,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
269,Node.java,removeAttr,Node removeAttr(String attributeKey),120,123,3906,3909,IdentifierMutator-ThisAccess,this,myself,2,0.027519919,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
270,Node.java,removeAttr,Node removeAttr(String attributeKey),120,123,3906,3909,IdentifierMutator-ThisAccess,this,null,3,0.02230349,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
271,Node.java,removeAttr,Node removeAttr(String attributeKey),120,123,3906,3909,IdentifierMutator-ThisAccess,this,self,4,0.015511654,<mask>,"Node removeAttr(String attributeKey) {
        Validate.notNull(attributeKey);
        attributes.remove(attributeKey);
        return<mask>;
    }"
272,Node.java,baseUri,String baseUri(),130,131,4038,4044,IdentifierMutator-Variable,baseUri,"""""",0,0.23708415,<mask>,"String baseUri() {
        return<mask>;
    }"
273,Node.java,baseUri,String baseUri(),130,131,4038,4044,IdentifierMutator-Variable,baseUri,base,1,0.17537747,<mask>,"String baseUri() {
        return<mask>;
    }"
274,Node.java,baseUri,String baseUri(),130,131,4038,4044,IdentifierMutator-Variable,baseUri,url,2,0.091050595,<mask>,"String baseUri() {
        return<mask>;
    }"
275,Node.java,baseUri,String baseUri(),130,131,4038,4044,IdentifierMutator-Variable,baseUri,path,3,0.06443002,<mask>,"String baseUri() {
        return<mask>;
    }"
276,Node.java,baseUri,String baseUri(),130,131,4038,4044,IdentifierMutator-Variable,baseUri,null,4,0.061412632,<mask>,"String baseUri() {
        return<mask>;
    }"
277,Node.java,baseUri,String baseUri(),130,131,4038,4044,FieldReferenceMutator,baseUri,"""""",0,0.23708415,<mask>,"String baseUri() {
        return<mask>;
    }"
278,Node.java,baseUri,String baseUri(),130,131,4038,4044,FieldReferenceMutator,baseUri,base,1,0.17537747,<mask>,"String baseUri() {
        return<mask>;
    }"
279,Node.java,baseUri,String baseUri(),130,131,4038,4044,FieldReferenceMutator,baseUri,url,2,0.091050595,<mask>,"String baseUri() {
        return<mask>;
    }"
280,Node.java,baseUri,String baseUri(),130,131,4038,4044,FieldReferenceMutator,baseUri,path,3,0.06443002,<mask>,"String baseUri() {
        return<mask>;
    }"
281,Node.java,baseUri,String baseUri(),130,131,4038,4044,FieldReferenceMutator,baseUri,null,4,0.061412632,<mask>,"String baseUri() {
        return<mask>;
    }"
282,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4240,4246,MethodCallMutator,notNull,string,0,0.28118643,Validate.<mask>(baseUri),"void setBaseUri(final String baseUri) {
        Validate.<mask>(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
283,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4240,4246,MethodCallMutator,notNull,string,1,0.10280493,Validate.<mask>(baseUri),"void setBaseUri(final String baseUri) {
        Validate.<mask>(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
284,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4240,4246,MethodCallMutator,notNull,Null,2,0.09827431,Validate.<mask>(baseUri),"void setBaseUri(final String baseUri) {
        Validate.<mask>(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
285,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4240,4246,MethodCallMutator,notNull,validate,3,0.09374146,Validate.<mask>(baseUri),"void setBaseUri(final String baseUri) {
        Validate.<mask>(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
286,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4240,4246,MethodCallMutator,notNull,String,4,0.051275045,Validate.<mask>(baseUri),"void setBaseUri(final String baseUri) {
        Validate.<mask>(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
287,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4248,4254,IdentifierMutator-Variable,baseUri,node,0,0.4533227,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(<mask>);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
288,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4248,4254,IdentifierMutator-Variable,baseUri,this,1,0.07834668,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(<mask>);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
289,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4248,4254,IdentifierMutator-Variable,baseUri,root,2,0.048908733,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(<mask>);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
290,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4248,4254,IdentifierMutator-Variable,baseUri,tree,3,0.04494328,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(<mask>);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
291,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,139,4248,4254,IdentifierMutator-Variable,baseUri,parent,4,0.044775233,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(<mask>);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
292,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,141,4267,4274,MethodCallMutator,traverse,accept,0,0.35187882,"<mask>(new NodeVisitor() {
    public void head(Node node, int depth) {
        node.baseUri = baseUri;
    }

    public void tail(Node node, int depth) {
    }
})","void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);<mask>(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
293,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,141,4267,4274,MethodCallMutator,traverse,visit,1,0.3500373,"<mask>(new NodeVisitor() {
    public void head(Node node, int depth) {
        node.baseUri = baseUri;
    }

    public void tail(Node node, int depth) {
    }
})","void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);<mask>(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
294,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,141,4267,4274,MethodCallMutator,traverse,walk,2,0.16977236,"<mask>(new NodeVisitor() {
    public void head(Node node, int depth) {
        node.baseUri = baseUri;
    }

    public void tail(Node node, int depth) {
    }
})","void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);<mask>(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
295,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,141,4267,4274,MethodCallMutator,traverse,walk,4,0.010075004,"<mask>(new NodeVisitor() {
    public void head(Node node, int depth) {
        node.baseUri = baseUri;
    }

    public void tail(Node node, int depth) {
    }
})","void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);<mask>(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
296,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,|,0,0.23836891,node.baseUri <mask>= baseUri,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
297,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,*,1,0.20298636,node.baseUri <mask>= baseUri,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
298,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,||,2,0.16336471,node.baseUri <mask>= baseUri,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
299,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,||,3,0.08987146,node.baseUri <mask>= baseUri,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
300,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,+,4,0.07444526,node.baseUri <mask>= baseUri,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
301,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4376,IdentifierMutator-Variable,node.baseUri,URI,0,0.104132205,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
302,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4376,IdentifierMutator-Variable,node.baseUri,root,1,0.10288085,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
303,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4376,IdentifierMutator-Variable,node.baseUri,path,2,0.09412299,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
304,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4376,IdentifierMutator-Variable,node.baseUri,base,3,0.09162743,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
305,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4376,IdentifierMutator-Variable,node.baseUri,prefix,4,0.08779086,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
306,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4368,IdentifierMutator-Variable,node,this,0,0.5832022,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
307,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4368,IdentifierMutator-Variable,node,root,2,0.006267398,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
308,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4368,IdentifierMutator-Variable,node,this,3,0.0026085223,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
309,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4365,4368,IdentifierMutator-Variable,node,m,4,0.002121094,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
310,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4370,4376,FieldReferenceMutator,baseUri,uri,0,0.48816195,node.<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
311,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4370,4376,FieldReferenceMutator,baseUri,base,1,0.15968242,node.<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
312,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4370,4376,FieldReferenceMutator,baseUri,iri,2,0.10231591,node.<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
313,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4370,4376,FieldReferenceMutator,baseUri,url,3,0.038653247,node.<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
314,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4370,4376,FieldReferenceMutator,baseUri,path,4,0.0348942,node.<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.<mask> = baseUri;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
315,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4380,4386,IdentifierMutator-Variable,baseUri,"""""",0,0.45026878,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri =<mask>;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
316,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4380,4386,IdentifierMutator-Variable,baseUri,null,1,0.1700643,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri =<mask>;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
317,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4380,4386,IdentifierMutator-Variable,baseUri,true,2,0.05299867,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri =<mask>;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
318,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4380,4386,IdentifierMutator-Variable,baseUri,base,3,0.03316126,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri =<mask>;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
319,Node.java,setBaseUri,void setBaseUri(final String baseUri),138,143,4380,4386,IdentifierMutator-Variable,baseUri,path,4,0.031309173,<mask>,"void setBaseUri(final String baseUri) {
        Validate.notNull(baseUri);

        traverse(new NodeVisitor() {
            public void head(Node node, int depth) {
                node.baseUri =<mask>;
            }

            public void tail(Node node, int depth) {
            }
        });
    }"
320,Node.java,head,"void head(Node node, int depth)",142,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,||,0,0.31794536,node.baseUri <mask>= baseUri,"void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }"
321,Node.java,head,"void head(Node node, int depth)",142,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,++,1,0.11353266,node.baseUri <mask>= baseUri,"void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }"
322,Node.java,head,"void head(Node node, int depth)",142,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,|,2,0.050779596,node.baseUri <mask>= baseUri,"void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }"
323,Node.java,head,"void head(Node node, int depth)",142,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,|,3,0.033761885,node.baseUri <mask>= baseUri,"void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }"
324,Node.java,head,"void head(Node node, int depth)",142,143,4377,4377,AssignmentMutator,node.baseUri=baseUri,[],4,0.027174631,node.baseUri <mask>= baseUri,"void head(Node node, int depth) {
                node.baseUri<mask>= baseUri;
            }"
325,Node.java,head,"void head(Node node, int depth)",142,143,4365,4376,IdentifierMutator-Variable,node.baseUri,node,0,0.20374814,<mask>,"void head(Node node, int depth) {<mask> = baseUri;
            }"
326,Node.java,head,"void head(Node node, int depth)",142,143,4365,4376,IdentifierMutator-Variable,node.baseUri,root,1,0.1692474,<mask>,"void head(Node node, int depth) {<mask> = baseUri;
            }"
327,Node.java,head,"void head(Node node, int depth)",142,143,4365,4376,IdentifierMutator-Variable,node.baseUri,path,2,0.09886453,<mask>,"void head(Node node, int depth) {<mask> = baseUri;
            }"
328,Node.java,head,"void head(Node node, int depth)",142,143,4365,4376,IdentifierMutator-Variable,node.baseUri,head,3,0.08360252,<mask>,"void head(Node node, int depth) {<mask> = baseUri;
            }"
329,Node.java,head,"void head(Node node, int depth)",142,143,4365,4376,IdentifierMutator-Variable,node.baseUri,URI,4,0.0437301,<mask>,"void head(Node node, int depth) {<mask> = baseUri;
            }"
330,Node.java,head,"void head(Node node, int depth)",142,143,4365,4368,IdentifierMutator-Variable,node,this,1,0.12542167,<mask>,"void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }"
331,Node.java,head,"void head(Node node, int depth)",142,143,4365,4368,IdentifierMutator-Variable,node,root,2,0.029964466,<mask>,"void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }"
332,Node.java,head,"void head(Node node, int depth)",142,143,4365,4368,IdentifierMutator-Variable,node,depth,3,0.0034308608,<mask>,"void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }"
333,Node.java,head,"void head(Node node, int depth)",142,143,4365,4368,IdentifierMutator-Variable,node,child,4,0.0028449942,<mask>,"void head(Node node, int depth) {<mask>.baseUri = baseUri;
            }"
334,Node.java,head,"void head(Node node, int depth)",142,143,4370,4376,FieldReferenceMutator,baseUri,uri,0,0.32999542,node.<mask>,"void head(Node node, int depth) {
                node.<mask> = baseUri;
            }"
335,Node.java,head,"void head(Node node, int depth)",142,143,4370,4376,FieldReferenceMutator,baseUri,base,1,0.12423736,node.<mask>,"void head(Node node, int depth) {
                node.<mask> = baseUri;
            }"
336,Node.java,head,"void head(Node node, int depth)",142,143,4370,4376,FieldReferenceMutator,baseUri,url,2,0.12366005,node.<mask>,"void head(Node node, int depth) {
                node.<mask> = baseUri;
            }"
337,Node.java,head,"void head(Node node, int depth)",142,143,4370,4376,FieldReferenceMutator,baseUri,href,3,0.09269396,node.<mask>,"void head(Node node, int depth) {
                node.<mask> = baseUri;
            }"
338,Node.java,head,"void head(Node node, int depth)",142,143,4370,4376,FieldReferenceMutator,baseUri,path,4,0.043531716,node.<mask>,"void head(Node node, int depth) {
                node.<mask> = baseUri;
            }"
339,Node.java,head,"void head(Node node, int depth)",142,143,4380,4386,IdentifierMutator-Variable,baseUri,"""""",0,0.27858827,<mask>,"void head(Node node, int depth) {
                node.baseUri =<mask>;
            }"
340,Node.java,head,"void head(Node node, int depth)",142,143,4380,4386,IdentifierMutator-Variable,baseUri,null,1,0.19042946,<mask>,"void head(Node node, int depth) {
                node.baseUri =<mask>;
            }"
341,Node.java,head,"void head(Node node, int depth)",142,143,4380,4386,IdentifierMutator-Variable,baseUri,root,2,0.10656768,<mask>,"void head(Node node, int depth) {
                node.baseUri =<mask>;
            }"
342,Node.java,head,"void head(Node node, int depth)",142,143,4380,4386,IdentifierMutator-Variable,baseUri,depth,3,0.05627726,<mask>,"void head(Node node, int depth) {
                node.baseUri =<mask>;
            }"
343,Node.java,head,"void head(Node node, int depth)",142,143,4380,4386,IdentifierMutator-Variable,baseUri,"''",4,0.04186816,<mask>,"void head(Node node, int depth) {
                node.baseUri =<mask>;
            }"
344,Node.java,absUrl,String absUrl(String attributeKey),171,172,5604,5611,MethodCallMutator,notEmpty,name,0,0.13371056,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
345,Node.java,absUrl,String absUrl(String attributeKey),171,172,5604,5611,MethodCallMutator,notEmpty,abs,1,0.070792705,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
346,Node.java,absUrl,String absUrl(String attributeKey),171,172,5604,5611,MethodCallMutator,notEmpty,string,2,0.061769113,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
347,Node.java,absUrl,String absUrl(String attributeKey),171,172,5604,5611,MethodCallMutator,notEmpty,url,3,0.05600111,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
348,Node.java,absUrl,String absUrl(String attributeKey),171,172,5604,5611,MethodCallMutator,notEmpty,required,4,0.03954113,Validate.<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.<mask>(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
349,Node.java,absUrl,String absUrl(String attributeKey),171,172,5613,5624,IdentifierMutator-Variable,attributeKey,attr,0,0.4056734,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
350,Node.java,absUrl,String absUrl(String attributeKey),171,172,5613,5624,IdentifierMutator-Variable,attributeKey,attribute,1,0.24600503,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
351,Node.java,absUrl,String absUrl(String attributeKey),171,172,5613,5624,IdentifierMutator-Variable,attributeKey,base,2,0.11022988,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
352,Node.java,absUrl,String absUrl(String attributeKey),171,172,5613,5624,IdentifierMutator-Variable,attributeKey,url,3,0.05764426,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
353,Node.java,absUrl,String absUrl(String attributeKey),171,172,5613,5624,IdentifierMutator-Variable,attributeKey,key,4,0.018816467,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(<mask>);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
354,Node.java,absUrl,String absUrl(String attributeKey),171,174,5653,5656,MethodCallMutator,attr,url,0,0.21937834,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
355,Node.java,absUrl,String absUrl(String attributeKey),171,174,5653,5656,MethodCallMutator,attr,get,1,0.10572861,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
356,Node.java,absUrl,String absUrl(String attributeKey),171,174,5653,5656,MethodCallMutator,attr,attribute,2,0.053984463,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
357,Node.java,absUrl,String absUrl(String attributeKey),171,174,5653,5656,MethodCallMutator,attr,rel,3,0.04413683,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
358,Node.java,absUrl,String absUrl(String attributeKey),171,174,5653,5656,MethodCallMutator,attr,encode,4,0.031503487,<mask>(<mask>ibuteKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl =<mask>(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
359,Node.java,absUrl,String absUrl(String attributeKey),171,174,5658,5669,IdentifierMutator-Variable,attributeKey,key,0,0.35364926,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
360,Node.java,absUrl,String absUrl(String attributeKey),171,174,5658,5669,IdentifierMutator-Variable,attributeKey,attribute,1,0.3018116,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
361,Node.java,absUrl,String absUrl(String attributeKey),171,174,5658,5669,IdentifierMutator-Variable,attributeKey,attr,2,0.12431341,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
362,Node.java,absUrl,String absUrl(String attributeKey),171,174,5658,5669,IdentifierMutator-Variable,attributeKey,name,3,0.02800002,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
363,Node.java,absUrl,String absUrl(String attributeKey),171,174,5658,5669,IdentifierMutator-Variable,attributeKey,true,4,0.024382537,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(<mask>);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
364,Node.java,absUrl,String absUrl(String attributeKey),171,175,5685,5685,UnaryOperatorMutator,!,.,1,0.038505845,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
365,Node.java,absUrl,String absUrl(String attributeKey),171,175,5685,5685,UnaryOperatorMutator,!,...,3,0.018997965,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
366,Node.java,absUrl,String absUrl(String attributeKey),171,175,5685,5685,UnaryOperatorMutator,!,un,4,0.013050674,<mask>hasAttr(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (<mask>hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
367,Node.java,absUrl,String absUrl(String attributeKey),171,175,5686,5692,MethodCallMutator,hasAttr,has,0,0.5263056,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
368,Node.java,absUrl,String absUrl(String attributeKey),171,175,5686,5692,MethodCallMutator,hasAttr,empty,1,0.124661386,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
369,Node.java,absUrl,String absUrl(String attributeKey),171,175,5686,5692,MethodCallMutator,hasAttr,abs,2,0.05103355,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
370,Node.java,absUrl,String absUrl(String attributeKey),171,175,5686,5692,MethodCallMutator,hasAttr,filter,3,0.018993724,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
371,Node.java,absUrl,String absUrl(String attributeKey),171,175,5686,5692,MethodCallMutator,hasAttr,optional,4,0.013076946,<mask>(attributeKey),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!<mask>(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
372,Node.java,absUrl,String absUrl(String attributeKey),171,175,5694,5705,IdentifierMutator-Variable,attributeKey,attribute,0,0.67719376,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
373,Node.java,absUrl,String absUrl(String attributeKey),171,175,5694,5705,IdentifierMutator-Variable,attributeKey,attr,1,0.16750152,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
374,Node.java,absUrl,String absUrl(String attributeKey),171,175,5694,5705,IdentifierMutator-Variable,attributeKey,key,2,0.019352429,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
375,Node.java,absUrl,String absUrl(String attributeKey),171,175,5694,5705,IdentifierMutator-Variable,attributeKey,url,3,0.01739777,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
376,Node.java,absUrl,String absUrl(String attributeKey),171,175,5694,5705,IdentifierMutator-Variable,attributeKey,Attribute,4,0.016066663,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(<mask>)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """
377,Node.java,absUrl,String absUrl(String attributeKey),171,176,5730,5731,IdentifierMutator-Literal,"""""",null,0,0.57152146,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return"
378,Node.java,absUrl,String absUrl(String attributeKey),171,176,5730,5731,IdentifierMutator-Literal,"""""",url,2,0.118093744,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return"
379,Node.java,absUrl,String absUrl(String attributeKey),171,176,5730,5731,IdentifierMutator-Literal,"""""","''",3,0.0353292,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return"
380,Node.java,absUrl,String absUrl(String attributeKey),171,176,5730,5731,IdentifierMutator-Literal,"""""",href,4,0.0075138547,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return<mask>; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return"
381,Node.java,absUrl,String absUrl(String attributeKey),171,181,5870,5870,AssignmentMutator,base=newjava.net.URL(baseUri),||,0,0.33771098,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
382,Node.java,absUrl,String absUrl(String attributeKey),171,181,5870,5870,AssignmentMutator,base=newjava.net.URL(baseUri),|,1,0.07405526,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
383,Node.java,absUrl,String absUrl(String attributeKey),171,181,5870,5870,AssignmentMutator,base=newjava.net.URL(baseUri),!,2,0.06908321,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
384,Node.java,absUrl,String absUrl(String attributeKey),171,181,5870,5870,AssignmentMutator,base=newjava.net.URL(baseUri),//,3,0.062207475,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
385,Node.java,absUrl,String absUrl(String attributeKey),171,181,5870,5870,AssignmentMutator,base=newjava.net.URL(baseUri),,4,0.056848895,base <mask>= new java.net.URL(baseUri),"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base<mask>= new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
               "
386,Node.java,absUrl,String absUrl(String attributeKey),171,181,5866,5869,IdentifierMutator-Variable,base,url,2,0.004586274,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
    "
387,Node.java,absUrl,String absUrl(String attributeKey),171,181,5866,5869,IdentifierMutator-Variable,base,abs,3,0.0031904937,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
    "
388,Node.java,absUrl,String absUrl(String attributeKey),171,181,5866,5869,IdentifierMutator-Variable,base,absolute,4,3.721163E-4,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {<mask> = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
    "
389,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,IdentifierMutator-Variable,baseUri,base,0,0.8619475,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
390,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,IdentifierMutator-Variable,baseUri,url,1,0.086906865,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
391,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,IdentifierMutator-Variable,baseUri,attribute,2,0.0069786985,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
392,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,IdentifierMutator-Variable,baseUri,absolute,3,0.00604741,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
393,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,IdentifierMutator-Variable,baseUri,href,4,0.0031870166,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
394,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,FieldReferenceMutator,baseUri,base,0,0.8619475,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
395,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,FieldReferenceMutator,baseUri,url,1,0.086906865,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
396,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,FieldReferenceMutator,baseUri,attribute,2,0.0069786985,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
397,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,FieldReferenceMutator,baseUri,absolute,3,0.00604741,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
398,Node.java,absUrl,String absUrl(String attributeKey),171,181,5881,5887,FieldReferenceMutator,baseUri,href,4,0.0031870166,<mask>,"String absUrl(String attributeKey) {
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(<mask>);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";"
399,Node.java,absUrl,String absUrl(String attributeKey),171,184,6081,6086,IdentifierMutator-Variable,relUrl,base,0,0.99698347,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
       "
400,Node.java,absUrl,String absUrl(String attributeKey),171,184,6081,6086,IdentifierMutator-Variable,relUrl,url,1,8.529461E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
       "
401,Node.java,absUrl,String absUrl(String attributeKey),171,184,6081,6086,IdentifierMutator-Variable,relUrl,absolute,2,3.4112454E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
       "
402,Node.java,absUrl,String absUrl(String attributeKey),171,184,6081,6086,IdentifierMutator-Variable,relUrl,relative,3,1.3710915E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
       "
403,Node.java,absUrl,String absUrl(String attributeKey),171,184,6081,6086,IdentifierMutator-Variable,relUrl,Base,4,1.0962007E-4,<mask>,"
        Validate.notEmpty(attributeKey);

        String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(<mask>);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
       "
404,Node.java,absUrl,String absUrl(String attributeKey),171,185,6121,6134,MethodCallMutator,toExternalForm,url,0,0.34146032,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
405,Node.java,absUrl,String absUrl(String attributeKey),171,185,6121,6134,MethodCallMutator,toExternalForm,build,1,0.124692895,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
406,Node.java,absUrl,String absUrl(String attributeKey),171,185,6121,6134,MethodCallMutator,toExternalForm,external,2,0.06582871,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
407,Node.java,absUrl,String absUrl(String attributeKey),171,185,6121,6134,MethodCallMutator,toExternalForm,path,3,0.056271497,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
408,Node.java,absUrl,String absUrl(String attributeKey),171,185,6121,6134,MethodCallMutator,toExternalForm,format,4,0.042831965,abs.<mask>()," relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.<mask>();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
409,Node.java,absUrl,String absUrl(String attributeKey),171,185,6117,6119,IdentifierMutator-Variable,abs,base,1,0.0051941574,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
410,Node.java,absUrl,String absUrl(String attributeKey),171,185,6117,6119,IdentifierMutator-Variable,abs,res,2,3.215861E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
411,Node.java,absUrl,String absUrl(String attributeKey),171,185,6117,6119,IdentifierMutator-Variable,abs,absolute,3,3.212538E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
412,Node.java,absUrl,String absUrl(String attributeKey),171,185,6117,6119,IdentifierMutator-Variable,abs,url,4,3.1491375E-4,<mask>,"  String relUrl = attr(attributeKey);
        if (!hasAttr(attributeKey)) {
            return """"; // nothing to make absolute with
        } else {
            URL base;
            try {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return<mask>.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
413,Node.java,absUrl,String absUrl(String attributeKey),171,188,6301,6310,MethodCallMutator,startsWith,has,0,0.19367525,"relUrl.<mask>(""?"")","               try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.<mask>(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
414,Node.java,absUrl,String absUrl(String attributeKey),171,188,6301,6310,MethodCallMutator,startsWith,include,1,0.18050314,"relUrl.<mask>(""?"")","               try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.<mask>(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
415,Node.java,absUrl,String absUrl(String attributeKey),171,188,6301,6310,MethodCallMutator,startsWith,split,2,0.14536543,"relUrl.<mask>(""?"")","               try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.<mask>(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
416,Node.java,absUrl,String absUrl(String attributeKey),171,188,6301,6310,MethodCallMutator,startsWith,includes,3,0.09751986,"relUrl.<mask>(""?"")","               try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.<mask>(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
417,Node.java,absUrl,String absUrl(String attributeKey),171,188,6301,6310,MethodCallMutator,startsWith,append,4,0.09070696,"relUrl.<mask>(""?"")","               try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.<mask>(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
418,Node.java,absUrl,String absUrl(String attributeKey),171,188,6294,6299,IdentifierMutator-Variable,relUrl,base,0,0.44043678,<mask>," {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (<mask>.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
419,Node.java,absUrl,String absUrl(String attributeKey),171,188,6294,6299,IdentifierMutator-Variable,relUrl,url,1,0.44027972,<mask>," {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (<mask>.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
420,Node.java,absUrl,String absUrl(String attributeKey),171,188,6294,6299,IdentifierMutator-Variable,relUrl,path,2,0.0266432,<mask>," {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (<mask>.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
421,Node.java,absUrl,String absUrl(String attributeKey),171,188,6294,6299,IdentifierMutator-Variable,relUrl,href,3,0.01810429,<mask>," {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (<mask>.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
422,Node.java,absUrl,String absUrl(String attributeKey),171,188,6294,6299,IdentifierMutator-Variable,relUrl,uri,4,0.01448317,<mask>," {
                try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (<mask>.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
423,Node.java,absUrl,String absUrl(String attributeKey),171,188,6312,6314,IdentifierMutator-Literal,"""?""",/,0,0.29232246,<mask>,"           try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(<mask>))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
424,Node.java,absUrl,String absUrl(String attributeKey),171,188,6312,6314,IdentifierMutator-Literal,"""?""",base,1,0.11024388,<mask>,"           try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(<mask>))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
425,Node.java,absUrl,String absUrl(String attributeKey),171,188,6312,6314,IdentifierMutator-Literal,"""?""",../,2,0.04896075,<mask>,"           try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(<mask>))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
426,Node.java,absUrl,String absUrl(String attributeKey),171,188,6312,6314,IdentifierMutator-Literal,"""?""",?,3,0.04790089,<mask>,"           try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(<mask>))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
427,Node.java,absUrl,String absUrl(String attributeKey),171,188,6312,6314,IdentifierMutator-Literal,"""?""",/$,4,0.047761854,<mask>,"           try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(<mask>))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
428,Node.java,absUrl,String absUrl(String attributeKey),171,189,6344,6344,AssignmentMutator,relUrl=base.getPath()+relUrl,.,0,0.1410454,relUrl <mask>= base.getPath() + relUrl,"         base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl<mask>= base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
429,Node.java,absUrl,String absUrl(String attributeKey),171,189,6344,6344,AssignmentMutator,relUrl=base.getPath()+relUrl,.,1,0.13185324,relUrl <mask>= base.getPath() + relUrl,"         base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl<mask>= base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
430,Node.java,absUrl,String absUrl(String attributeKey),171,189,6344,6344,AssignmentMutator,relUrl=base.getPath()+relUrl,||,2,0.09621663,relUrl <mask>= base.getPath() + relUrl,"         base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl<mask>= base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
431,Node.java,absUrl,String absUrl(String attributeKey),171,189,6344,6344,AssignmentMutator,relUrl=base.getPath()+relUrl,*,3,0.086211845,relUrl <mask>= base.getPath() + relUrl,"         base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl<mask>= base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
432,Node.java,absUrl,String absUrl(String attributeKey),171,189,6344,6344,AssignmentMutator,relUrl=base.getPath()+relUrl,+,4,0.081756875,relUrl <mask>= base.getPath() + relUrl,"         base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl<mask>= base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
433,Node.java,absUrl,String absUrl(String attributeKey),171,189,6338,6343,IdentifierMutator-Variable,relUrl,base,0,0.8205308,<mask>,"         try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))<mask> = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
434,Node.java,absUrl,String absUrl(String attributeKey),171,189,6338,6343,IdentifierMutator-Variable,relUrl,url,1,0.12883838,<mask>,"         try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))<mask> = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
435,Node.java,absUrl,String absUrl(String attributeKey),171,189,6338,6343,IdentifierMutator-Variable,relUrl,base,2,0.016469778,<mask>,"         try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))<mask> = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
436,Node.java,absUrl,String absUrl(String attributeKey),171,189,6338,6343,IdentifierMutator-Variable,relUrl,abs,3,0.0041207084,<mask>,"         try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))<mask> = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
437,Node.java,absUrl,String absUrl(String attributeKey),171,189,6338,6343,IdentifierMutator-Variable,relUrl,relative,4,0.0024544073,<mask>,"         try {
                    base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))<mask> = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
438,Node.java,absUrl,String absUrl(String attributeKey),171,189,6361,6363,BinaryOperatorMutator,+,/,2,0.006323276,base.getPath() <mask> relUrl,"   base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath()<mask>relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
439,Node.java,absUrl,String absUrl(String attributeKey),171,189,6361,6363,BinaryOperatorMutator,+,.,3,0.0018200097,base.getPath() <mask> relUrl,"   base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath()<mask>relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
440,Node.java,absUrl,String absUrl(String attributeKey),171,189,6361,6363,BinaryOperatorMutator,+,||,4,0.0010809229,base.getPath() <mask> relUrl,"   base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath()<mask>relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
441,Node.java,absUrl,String absUrl(String attributeKey),171,189,6352,6358,MethodCallMutator,getPath,path,0,0.40422237,base.<mask>(),"      base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.<mask>() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
442,Node.java,absUrl,String absUrl(String attributeKey),171,189,6352,6358,MethodCallMutator,getPath,url,1,0.39877987,base.<mask>(),"      base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.<mask>() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
443,Node.java,absUrl,String absUrl(String attributeKey),171,189,6352,6358,MethodCallMutator,getPath,prefix,2,0.048228793,base.<mask>(),"      base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.<mask>() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
444,Node.java,absUrl,String absUrl(String attributeKey),171,189,6352,6358,MethodCallMutator,getPath,base,3,0.02423681,base.<mask>(),"      base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.<mask>() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
445,Node.java,absUrl,String absUrl(String attributeKey),171,189,6352,6358,MethodCallMutator,getPath,dir,4,0.013965068,base.<mask>(),"      base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.<mask>() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
446,Node.java,absUrl,String absUrl(String attributeKey),171,189,6347,6350,IdentifierMutator-Variable,base,url,1,0.035817575,<mask>,"        base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl =<mask>.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
447,Node.java,absUrl,String absUrl(String attributeKey),171,189,6347,6350,IdentifierMutator-Variable,base,relative,2,0.0181105,<mask>,"        base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl =<mask>.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
448,Node.java,absUrl,String absUrl(String attributeKey),171,189,6347,6350,IdentifierMutator-Variable,base,file,3,0.009060542,<mask>,"        base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl =<mask>.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
449,Node.java,absUrl,String absUrl(String attributeKey),171,189,6347,6350,IdentifierMutator-Variable,base,request,4,0.007958219,<mask>,"        base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl =<mask>.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
450,Node.java,absUrl,String absUrl(String attributeKey),171,189,6364,6369,IdentifierMutator-Variable,relUrl,url,0,0.65303606,<mask>,"  base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() +<mask>;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
451,Node.java,absUrl,String absUrl(String attributeKey),171,189,6364,6369,IdentifierMutator-Variable,relUrl,query,1,0.06520742,<mask>,"  base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() +<mask>;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
452,Node.java,absUrl,String absUrl(String attributeKey),171,189,6364,6369,IdentifierMutator-Variable,relUrl,rel,2,0.04180289,<mask>,"  base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() +<mask>;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
453,Node.java,absUrl,String absUrl(String attributeKey),171,189,6364,6369,IdentifierMutator-Variable,relUrl,ref,3,0.017578783,<mask>,"  base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() +<mask>;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
454,Node.java,absUrl,String absUrl(String attributeKey),171,189,6364,6369,IdentifierMutator-Variable,relUrl,path,4,0.017437626,<mask>,"  base = new URL(baseUri);
                } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() +<mask>;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
455,Node.java,absUrl,String absUrl(String attributeKey),171,190,6406,6409,IdentifierMutator-Variable,base,url,1,1.9392115E-4,<mask>,"  } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
456,Node.java,absUrl,String absUrl(String attributeKey),171,190,6406,6409,IdentifierMutator-Variable,base,Base,2,1.4251201E-4,<mask>,"  } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
457,Node.java,absUrl,String absUrl(String attributeKey),171,190,6406,6409,IdentifierMutator-Variable,base,prefix,4,8.9012145E-5,<mask>,"  } catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(<mask>, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
458,Node.java,absUrl,String absUrl(String attributeKey),171,190,6412,6417,IdentifierMutator-Variable,relUrl,url,0,0.36295435,<mask>," catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
459,Node.java,absUrl,String absUrl(String attributeKey),171,190,6412,6417,IdentifierMutator-Variable,relUrl,rel,1,0.25413778,<mask>," catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
460,Node.java,absUrl,String absUrl(String attributeKey),171,190,6412,6417,IdentifierMutator-Variable,relUrl,url,2,0.103270575,<mask>," catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
461,Node.java,absUrl,String absUrl(String attributeKey),171,190,6412,6417,IdentifierMutator-Variable,relUrl,rel,3,0.029159987,<mask>," catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
462,Node.java,absUrl,String absUrl(String attributeKey),171,190,6412,6417,IdentifierMutator-Variable,relUrl,attribute,4,0.01870446,<mask>," catch (MalformedURLException e) {
                    // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base,<mask>);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
463,Node.java,absUrl,String absUrl(String attributeKey),171,191,6448,6461,MethodCallMutator,toExternalForm,url,0,0.27643317,abs.<mask>(),"          // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
464,Node.java,absUrl,String absUrl(String attributeKey),171,191,6448,6461,MethodCallMutator,toExternalForm,build,1,0.22461945,abs.<mask>(),"          // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
465,Node.java,absUrl,String absUrl(String attributeKey),171,191,6448,6461,MethodCallMutator,toExternalForm,path,2,0.06467855,abs.<mask>(),"          // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
466,Node.java,absUrl,String absUrl(String attributeKey),171,191,6448,6461,MethodCallMutator,toExternalForm,external,3,0.050724093,abs.<mask>(),"          // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
467,Node.java,absUrl,String absUrl(String attributeKey),171,191,6448,6461,MethodCallMutator,toExternalForm,format,4,0.045681495,abs.<mask>(),"          // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.<mask>();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
468,Node.java,absUrl,String absUrl(String attributeKey),171,191,6444,6446,IdentifierMutator-Variable,abs,res,1,1.2828075E-4,<mask>,"            // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
469,Node.java,absUrl,String absUrl(String attributeKey),171,191,6444,6446,IdentifierMutator-Variable,abs,url,2,7.818347E-5,<mask>,"            // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
470,Node.java,absUrl,String absUrl(String attributeKey),171,191,6444,6446,IdentifierMutator-Variable,abs,rel,3,7.624696E-5,<mask>,"            // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
471,Node.java,absUrl,String absUrl(String attributeKey),171,191,6444,6446,IdentifierMutator-Variable,abs,base,4,6.4183296E-5,<mask>,"            // the base is unsuitable, but the attribute may be abs on its own, so try that
                    URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return<mask>.toExternalForm();
            } catch (MalformedURLException e) {
                return """";
            }
        }
   "
472,Node.java,absUrl,String absUrl(String attributeKey),171,193,6537,6538,IdentifierMutator-Literal,"""""",null,0,0.55384994,<mask>,"     URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
   "
473,Node.java,absUrl,String absUrl(String attributeKey),171,193,6537,6538,IdentifierMutator-Literal,"""""",url,1,0.18957731,<mask>,"     URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
   "
474,Node.java,absUrl,String absUrl(String attributeKey),171,193,6537,6538,IdentifierMutator-Literal,"""""","''",3,0.028163671,<mask>,"     URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
   "
475,Node.java,absUrl,String absUrl(String attributeKey),171,193,6537,6538,IdentifierMutator-Literal,"""""",base,4,0.019240329,<mask>,"     URL abs = new URL(relUrl);
                    return abs.toExternalForm();
                }
                // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired
                if (relUrl.startsWith(""?""))
                    relUrl = base.getPath() + relUrl;
                URL abs = new URL(base, relUrl);
                return abs.toExternalForm();
            } catch (MalformedURLException e) {
                return<mask>;
            }
        }
   "
476,Node.java,childNode,Node childNode(int index),203,204,6765,6767,MethodCallMutator,get,item,1,0.046622567,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
477,Node.java,childNode,Node childNode(int index),203,204,6765,6767,MethodCallMutator,get,column,2,0.006246263,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
478,Node.java,childNode,Node childNode(int index),203,204,6765,6767,MethodCallMutator,get,child,3,0.0046897237,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
479,Node.java,childNode,Node childNode(int index),203,204,6765,6767,MethodCallMutator,get,remove,4,0.0041810037,childNodes.<mask>(index),"Node childNode(int index) {
        return childNodes.<mask>(index);
    }"
480,Node.java,childNode,Node childNode(int index),203,204,6754,6763,IdentifierMutator-Variable,childNodes,children,0,0.80395085,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
481,Node.java,childNode,Node childNode(int index),203,204,6754,6763,IdentifierMutator-Variable,childNodes,nodes,1,0.08626561,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
482,Node.java,childNode,Node childNode(int index),203,204,6754,6763,IdentifierMutator-Variable,childNodes,child,2,0.02589042,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
483,Node.java,childNode,Node childNode(int index),203,204,6754,6763,IdentifierMutator-Variable,childNodes,list,3,0.009000036,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
484,Node.java,childNode,Node childNode(int index),203,204,6754,6763,IdentifierMutator-Variable,childNodes,node,4,0.008922574,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
485,Node.java,childNode,Node childNode(int index),203,204,6754,6763,FieldReferenceMutator,childNodes,children,0,0.80395085,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
486,Node.java,childNode,Node childNode(int index),203,204,6754,6763,FieldReferenceMutator,childNodes,nodes,1,0.08626561,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
487,Node.java,childNode,Node childNode(int index),203,204,6754,6763,FieldReferenceMutator,childNodes,child,2,0.02589042,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
488,Node.java,childNode,Node childNode(int index),203,204,6754,6763,FieldReferenceMutator,childNodes,list,3,0.009000036,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
489,Node.java,childNode,Node childNode(int index),203,204,6754,6763,FieldReferenceMutator,childNodes,node,4,0.008922574,<mask>,"Node childNode(int index) {
        return<mask>.get(index);
    }"
490,Node.java,childNode,Node childNode(int index),203,204,6769,6773,IdentifierMutator-Variable,index,Index,2,4.137334E-4,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
491,Node.java,childNode,Node childNode(int index),203,204,6769,6773,IdentifierMutator-Variable,index,0,3,1.5204703E-4,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
492,Node.java,childNode,Node childNode(int index),203,204,6769,6773,IdentifierMutator-Variable,index,i,4,4.3733864E-5,<mask>,"Node childNode(int index) {
        return childNodes.get(<mask>);
    }"
493,Node.java,childNodes,List<Node> childNodes(),212,213,7087,7102,MethodCallMutator,unmodifiableList,list,0,0.45148128,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
494,Node.java,childNodes,List<Node> childNodes(),212,213,7087,7102,MethodCallMutator,unmodifiableList,List,1,0.4093461,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
495,Node.java,childNodes,List<Node> childNodes(),212,213,7087,7102,MethodCallMutator,unmodifiableList,lists,2,0.08844107,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
496,Node.java,childNodes,List<Node> childNodes(),212,213,7087,7102,MethodCallMutator,unmodifiableList,reverse,3,0.0053996546,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
497,Node.java,childNodes,List<Node> childNodes(),212,213,7087,7102,MethodCallMutator,unmodifiableList,filter,4,0.004985166,Collections.<mask>(childNodes),"List<Node> childNodes() {
        return Collections.<mask>(childNodes);
    }"
498,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,IdentifierMutator-Variable,childNodes,children,0,0.5956141,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
499,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,IdentifierMutator-Variable,childNodes,list,1,0.17415245,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
500,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,IdentifierMutator-Variable,childNodes,result,2,0.030072838,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
501,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,IdentifierMutator-Variable,childNodes,node,3,0.02569763,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
502,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,IdentifierMutator-Variable,childNodes,this,4,0.017828498,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
503,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,FieldReferenceMutator,childNodes,children,0,0.5956141,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
504,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,FieldReferenceMutator,childNodes,list,1,0.17415245,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
505,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,FieldReferenceMutator,childNodes,result,2,0.030072838,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
506,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,FieldReferenceMutator,childNodes,node,3,0.02569763,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
507,Node.java,childNodes,List<Node> childNodes(),212,213,7104,7113,FieldReferenceMutator,childNodes,this,4,0.017828498,<mask>,"List<Node> childNodes() {
        return Collections.unmodifiableList(<mask>);
    }"
508,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7197,7203,MethodCallMutator,toArray,slice,0,0.2620747,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
509,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7197,7203,MethodCallMutator,toArray,Array,1,0.24654038,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
510,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7197,7203,MethodCallMutator,toArray,map,2,0.08302289,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
511,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7197,7203,MethodCallMutator,toArray,values,3,0.060818866,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
512,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7197,7203,MethodCallMutator,toArray,get,4,0.04775904,childNodes.<mask>(new Node[childNodes().size()]),"Node[] childNodesAsArray() {
        return childNodes.<mask>(new Node[childNodes().size()]);
    }"
513,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,IdentifierMutator-Variable,childNodes,children,0,0.37280458,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
514,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,IdentifierMutator-Variable,childNodes,nodes,1,0.29602855,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
515,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,IdentifierMutator-Variable,childNodes,child,2,0.09056759,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
516,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,IdentifierMutator-Variable,childNodes,node,3,0.08395526,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
517,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,IdentifierMutator-Variable,childNodes,array,4,0.029694706,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
518,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,FieldReferenceMutator,childNodes,children,0,0.37280458,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
519,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,FieldReferenceMutator,childNodes,nodes,1,0.29602855,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
520,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,FieldReferenceMutator,childNodes,child,2,0.09056759,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
521,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,FieldReferenceMutator,childNodes,node,3,0.08395526,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
522,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7186,7195,FieldReferenceMutator,childNodes,array,4,0.029694706,<mask>,"Node[] childNodesAsArray() {
        return<mask>.toArray(new Node[childNodes().size()]);
    }"
523,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7227,7230,MethodCallMutator,size,length,1,0.011698059,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
524,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7227,7230,MethodCallMutator,size,count,2,0.001115053,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
525,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7227,7230,MethodCallMutator,size,shape,3,6.865843E-4,childNodes().<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[childNodes().<mask>()]);
    }"
526,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7214,7223,MethodCallMutator,childNodes,children,0,0.28643596,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
527,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7214,7223,MethodCallMutator,childNodes,Array,1,0.19626264,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
528,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7214,7223,MethodCallMutator,childNodes,values,2,0.0865222,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
529,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7214,7223,MethodCallMutator,childNodes,Children,3,0.07149817,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
530,Node.java,childNodesAsArray,Node[] childNodesAsArray(),216,217,7214,7223,MethodCallMutator,childNodes,List,4,0.06745306,<mask>(),"Node[] childNodesAsArray() {
        return childNodes.toArray(new Node[<mask>().size()]);
    }"
531,Node.java,parent,Node parent(),224,225,7385,7394,IdentifierMutator-Variable,parentNode,parent,0,0.6362043,<mask>,"Node parent() {
        return<mask>;
    }"
532,Node.java,parent,Node parent(),224,225,7385,7394,IdentifierMutator-Variable,parentNode,node,1,0.107871704,<mask>,"Node parent() {
        return<mask>;
    }"
533,Node.java,parent,Node parent(),224,225,7385,7394,IdentifierMutator-Variable,parentNode,null,2,0.10147042,<mask>,"Node parent() {
        return<mask>;
    }"
534,Node.java,parent,Node parent(),224,225,7385,7394,IdentifierMutator-Variable,parentNode,this,3,0.08596264,<mask>,"Node parent() {
        return<mask>;
    }"
535,Node.java,parent,Node parent(),224,225,7385,7394,IdentifierMutator-Variable,parentNode,root,4,0.009199268,<mask>,"Node parent() {
        return<mask>;
    }"
536,Node.java,parent,Node parent(),224,225,7385,7394,FieldReferenceMutator,parentNode,parent,0,0.6362043,<mask>,"Node parent() {
        return<mask>;
    }"
537,Node.java,parent,Node parent(),224,225,7385,7394,FieldReferenceMutator,parentNode,node,1,0.107871704,<mask>,"Node parent() {
        return<mask>;
    }"
538,Node.java,parent,Node parent(),224,225,7385,7394,FieldReferenceMutator,parentNode,null,2,0.10147042,<mask>,"Node parent() {
        return<mask>;
    }"
539,Node.java,parent,Node parent(),224,225,7385,7394,FieldReferenceMutator,parentNode,this,3,0.08596264,<mask>,"Node parent() {
        return<mask>;
    }"
540,Node.java,parent,Node parent(),224,225,7385,7394,FieldReferenceMutator,parentNode,root,4,0.009199268,<mask>,"Node parent() {
        return<mask>;
    }"
541,Node.java,ownerDocument,Document ownerDocument(),232,233,7624,7635,BinaryOperatorMutator,instanceof,==,0,0.5292728,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
542,Node.java,ownerDocument,Document ownerDocument(),232,233,7624,7635,BinaryOperatorMutator,instanceof,==,1,0.21057475,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
543,Node.java,ownerDocument,Document ownerDocument(),232,233,7624,7635,BinaryOperatorMutator,instanceof,!=,2,0.10551761,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
544,Node.java,ownerDocument,Document ownerDocument(),232,233,7624,7635,BinaryOperatorMutator,instanceof,is,3,0.041339185,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
545,Node.java,ownerDocument,Document ownerDocument(),232,233,7624,7635,BinaryOperatorMutator,instanceof,===,4,0.022689214,this <mask> org.jsoup.nodes.Document,"Document ownerDocument() {
        if (this<mask>Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
546,Node.java,ownerDocument,Document ownerDocument(),232,233,7620,7623,IdentifierMutator-ThisAccess,this,parent,1,0.0014528185,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
547,Node.java,ownerDocument,Document ownerDocument(),232,233,7620,7623,IdentifierMutator-ThisAccess,this,This,2,2.0815735E-4,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
548,Node.java,ownerDocument,Document ownerDocument(),232,233,7620,7623,IdentifierMutator-ThisAccess,this,document,4,1.3590319E-4,<mask>,"Document ownerDocument() {
        if (<mask> instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
549,Node.java,ownerDocument,Document ownerDocument(),232,233,7636,7643,TypeReferenceMutator,org.jsoup.nodes.Document,Document,0,0.9991411,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
550,Node.java,ownerDocument,Document ownerDocument(),232,233,7636,7643,TypeReferenceMutator,org.jsoup.nodes.Document,Document,1,6.725906E-4,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
551,Node.java,ownerDocument,Document ownerDocument(),232,233,7636,7643,TypeReferenceMutator,org.jsoup.nodes.Document,document,2,4.77007E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
552,Node.java,ownerDocument,Document ownerDocument(),232,233,7636,7643,TypeReferenceMutator,org.jsoup.nodes.Document,Node,3,3.18289E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
553,Node.java,ownerDocument,Document ownerDocument(),232,233,7636,7643,TypeReferenceMutator,org.jsoup.nodes.Document,Element,4,3.0252768E-5,org.jsoup.nodes<mask>,"Document ownerDocument() {
        if (this instanceof<mask>)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
554,Node.java,ownerDocument,Document ownerDocument(),232,234,7665,7679,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),this,0,0.9238433,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
555,Node.java,ownerDocument,Document ownerDocument(),232,234,7665,7679,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),document,1,0.040102568,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
556,Node.java,ownerDocument,Document ownerDocument(),232,234,7665,7679,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),parent,2,0.0100561315,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
557,Node.java,ownerDocument,Document ownerDocument(),232,234,7665,7679,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),null,3,0.008672474,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
558,Node.java,ownerDocument,Document ownerDocument(),232,234,7665,7679,IdentifierMutator-ThisAccess,((org.jsoup.nodes.Document)(this)),doc,4,0.0028350367,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return<mask>;
        else if (parentNode == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
559,Node.java,ownerDocument,Document ownerDocument(),232,235,7709,7712,BinaryOperatorMutator,==,=,2,0.014727041,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
560,Node.java,ownerDocument,Document ownerDocument(),232,235,7709,7712,BinaryOperatorMutator,==,===,3,0.013192903,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
561,Node.java,ownerDocument,Document ownerDocument(),232,235,7709,7712,BinaryOperatorMutator,==,!=,4,0.0053720674,parentNode <mask> null,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode<mask>null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
562,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,IdentifierMutator-Variable,parentNode,this,0,0.8005388,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
563,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,IdentifierMutator-Variable,parentNode,parent,1,0.1384563,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
564,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,IdentifierMutator-Variable,parentNode,document,2,0.011334877,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
565,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,IdentifierMutator-Variable,parentNode,node,3,0.007742833,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
566,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,IdentifierMutator-Variable,parentNode,null,4,0.004431924,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
567,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,FieldReferenceMutator,parentNode,this,0,0.8005388,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
568,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,FieldReferenceMutator,parentNode,parent,1,0.1384563,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
569,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,FieldReferenceMutator,parentNode,document,2,0.011334877,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
570,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,FieldReferenceMutator,parentNode,node,3,0.007742833,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
571,Node.java,ownerDocument,Document ownerDocument(),232,235,7699,7708,FieldReferenceMutator,parentNode,null,4,0.004431924,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (<mask> == null)
            return null;
        else
            return parentNode.ownerDocument();
    }"
572,Node.java,ownerDocument,Document ownerDocument(),232,235,7713,7716,IdentifierMutator-Literal,null,this,1,0.006002826,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
573,Node.java,ownerDocument,Document ownerDocument(),232,235,7713,7716,IdentifierMutator-Literal,null,document,2,0.001377035,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
574,Node.java,ownerDocument,Document ownerDocument(),232,235,7713,7716,IdentifierMutator-Literal,null,node,3,0.0012116093,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode ==<mask>)
            return null;
        else
            return parentNode.ownerDocument();
    }"
575,Node.java,ownerDocument,Document ownerDocument(),232,236,7738,7741,IdentifierMutator-Literal,null,this,1,0.16422714,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
576,Node.java,ownerDocument,Document ownerDocument(),232,236,7738,7741,IdentifierMutator-Literal,null,parent,2,0.011523586,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
577,Node.java,ownerDocument,Document ownerDocument(),232,236,7738,7741,IdentifierMutator-Literal,null,document,3,0.007632549,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
578,Node.java,ownerDocument,Document ownerDocument(),232,236,7738,7741,IdentifierMutator-Literal,null,undefined,4,0.0044113477,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return<mask>;
        else
            return parentNode.ownerDocument();
    }"
579,Node.java,ownerDocument,Document ownerDocument(),232,238,7787,7799,MethodCallMutator,ownerDocument,clone,0,0.5835352,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
580,Node.java,ownerDocument,Document ownerDocument(),232,238,7787,7799,MethodCallMutator,ownerDocument,document,1,0.10633413,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
581,Node.java,ownerDocument,Document ownerDocument(),232,238,7787,7799,MethodCallMutator,ownerDocument,parent,2,0.09607331,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
582,Node.java,ownerDocument,Document ownerDocument(),232,238,7787,7799,MethodCallMutator,ownerDocument,owner,3,0.050673254,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
583,Node.java,ownerDocument,Document ownerDocument(),232,238,7787,7799,MethodCallMutator,ownerDocument,copy,4,0.025796205,parentNode.<mask>(),"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return parentNode.<mask>();
    }"
584,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,IdentifierMutator-Variable,parentNode,this,0,0.38696137,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
585,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,IdentifierMutator-Variable,parentNode,node,1,0.20713063,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
586,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,IdentifierMutator-Variable,parentNode,parent,2,0.1490285,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
587,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,IdentifierMutator-Variable,parentNode,super,3,0.14571154,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
588,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,IdentifierMutator-Variable,parentNode,element,4,0.016727071,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
589,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,FieldReferenceMutator,parentNode,this,0,0.38696137,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
590,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,FieldReferenceMutator,parentNode,node,1,0.20713063,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
591,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,FieldReferenceMutator,parentNode,parent,2,0.1490285,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
592,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,FieldReferenceMutator,parentNode,super,3,0.14571154,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
593,Node.java,ownerDocument,Document ownerDocument(),232,238,7776,7785,FieldReferenceMutator,parentNode,element,4,0.016727071,<mask>,"Document ownerDocument() {
        if (this instanceof Document)
            return (Document) this;
        else if (parentNode == null)
            return null;
        else
            return<mask>.ownerDocument();
    }"
594,Node.java,remove,void remove(),244,245,7977,7983,MethodCallMutator,notNull,null,0,0.16525409,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
595,Node.java,remove,void remove(),244,245,7977,7983,MethodCallMutator,notNull,valid,1,0.072494835,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
596,Node.java,remove,void remove(),244,245,7977,7983,MethodCallMutator,notNull,not,2,0.043082226,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
597,Node.java,remove,void remove(),244,245,7977,7983,MethodCallMutator,notNull,check,3,0.040549003,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
598,Node.java,remove,void remove(),244,245,7977,7983,MethodCallMutator,notNull,empty,4,0.03641666,Validate.<mask>(parentNode),"void remove() {
        Validate.<mask>(parentNode);
        parentNode.removeChild(this);
    }"
599,Node.java,remove,void remove(),244,245,7985,7994,IdentifierMutator-Variable,parentNode,parent,0,0.4362268,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
600,Node.java,remove,void remove(),244,245,7985,7994,IdentifierMutator-Variable,parentNode,this,1,0.37577066,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
601,Node.java,remove,void remove(),244,245,7985,7994,IdentifierMutator-Variable,parentNode,node,2,0.04472695,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
602,Node.java,remove,void remove(),244,245,7985,7994,IdentifierMutator-Variable,parentNode,null,3,0.00867428,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
603,Node.java,remove,void remove(),244,245,7985,7994,IdentifierMutator-Variable,parentNode,self,4,0.008138837,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
604,Node.java,remove,void remove(),244,245,7985,7994,FieldReferenceMutator,parentNode,parent,0,0.4362268,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
605,Node.java,remove,void remove(),244,245,7985,7994,FieldReferenceMutator,parentNode,this,1,0.37577066,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
606,Node.java,remove,void remove(),244,245,7985,7994,FieldReferenceMutator,parentNode,node,2,0.04472695,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
607,Node.java,remove,void remove(),244,245,7985,7994,FieldReferenceMutator,parentNode,null,3,0.00867428,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
608,Node.java,remove,void remove(),244,245,7985,7994,FieldReferenceMutator,parentNode,self,4,0.008138837,<mask>,"void remove() {
        Validate.notNull(<mask>);
        parentNode.removeChild(this);
    }"
609,Node.java,remove,void remove(),244,246,8017,8027,MethodCallMutator,removeChild,remove,0,0.88705325,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
610,Node.java,remove,void remove(),244,246,8017,8027,MethodCallMutator,removeChild,add,1,0.040177006,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
611,Node.java,remove,void remove(),244,246,8017,8027,MethodCallMutator,removeChild,delete,2,0.017636532,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
612,Node.java,remove,void remove(),244,246,8017,8027,MethodCallMutator,removeChild,append,3,0.0042702644,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
613,Node.java,remove,void remove(),244,246,8017,8027,MethodCallMutator,removeChild,Remove,4,0.004052949,parentNode.<mask>(this),"void remove() {
        Validate.notNull(parentNode);
        parentNode.<mask>(this);
    }"
614,Node.java,remove,void remove(),244,246,8006,8015,IdentifierMutator-Variable,parentNode,parent,0,0.8080943,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
615,Node.java,remove,void remove(),244,246,8006,8015,IdentifierMutator-Variable,parentNode,node,1,0.12179533,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
616,Node.java,remove,void remove(),244,246,8006,8015,IdentifierMutator-Variable,parentNode,container,2,0.008109275,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
617,Node.java,remove,void remove(),244,246,8006,8015,IdentifierMutator-Variable,parentNode,parent,3,0.0061676996,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
618,Node.java,remove,void remove(),244,246,8006,8015,IdentifierMutator-Variable,parentNode,root,4,0.0048444034,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
619,Node.java,remove,void remove(),244,246,8006,8015,FieldReferenceMutator,parentNode,parent,0,0.8080943,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
620,Node.java,remove,void remove(),244,246,8006,8015,FieldReferenceMutator,parentNode,node,1,0.12179533,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
621,Node.java,remove,void remove(),244,246,8006,8015,FieldReferenceMutator,parentNode,container,2,0.008109275,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
622,Node.java,remove,void remove(),244,246,8006,8015,FieldReferenceMutator,parentNode,parent,3,0.0061676996,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
623,Node.java,remove,void remove(),244,246,8006,8015,FieldReferenceMutator,parentNode,root,4,0.0048444034,<mask>,"void remove() {
        Validate.notNull(parentNode);<mask>.removeChild(this);
    }"
624,Node.java,remove,void remove(),244,246,8029,8032,IdentifierMutator-ThisAccess,this,child,1,0.13750304,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
625,Node.java,remove,void remove(),244,246,8029,8032,IdentifierMutator-ThisAccess,this,node,2,0.13025331,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
626,Node.java,remove,void remove(),244,246,8029,8032,IdentifierMutator-ThisAccess,this,parent,3,0.026089497,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
627,Node.java,remove,void remove(),244,246,8029,8032,IdentifierMutator-ThisAccess,this,self,4,0.021735713,<mask>,"void remove() {
        Validate.notNull(parentNode);
        parentNode.removeChild(<mask>);
    }"
628,Node.java,before,Node before(String html),255,256,8314,8327,MethodCallMutator,addSiblingHtml,insert,0,0.43831265,"<mask>(siblingIndex(), html)","Node before(String html) {<mask>(siblingIndex(), html);
        return this;
    }"
629,Node.java,before,Node before(String html),255,256,8314,8327,MethodCallMutator,addSiblingHtml,before,1,0.20030437,"<mask>(siblingIndex(), html)","Node before(String html) {<mask>(siblingIndex(), html);
        return this;
    }"
630,Node.java,before,Node before(String html),255,256,8314,8327,MethodCallMutator,addSiblingHtml,set,2,0.047009263,"<mask>(siblingIndex(), html)","Node before(String html) {<mask>(siblingIndex(), html);
        return this;
    }"
631,Node.java,before,Node before(String html),255,256,8314,8327,MethodCallMutator,addSiblingHtml,append,3,0.03950762,"<mask>(siblingIndex(), html)","Node before(String html) {<mask>(siblingIndex(), html);
        return this;
    }"
632,Node.java,before,Node before(String html),255,256,8314,8327,MethodCallMutator,addSiblingHtml,add,4,0.03817553,"<mask>(siblingIndex(), html)","Node before(String html) {<mask>(siblingIndex(), html);
        return this;
    }"
633,Node.java,before,Node before(String html),255,256,8329,8340,MethodCallMutator,siblingIndex,before,0,0.34046263,<mask>(),"Node before(String html) {
        addSiblingHtml(<mask>(), html);
        return this;
    }"
634,Node.java,before,Node before(String html),255,256,8329,8340,MethodCallMutator,siblingIndex,this,1,0.25582337,<mask>(),"Node before(String html) {
        addSiblingHtml(<mask>(), html);
        return this;
    }"
635,Node.java,before,Node before(String html),255,256,8329,8340,MethodCallMutator,siblingIndex,node,2,0.13461083,<mask>(),"Node before(String html) {
        addSiblingHtml(<mask>(), html);
        return this;
    }"
636,Node.java,before,Node before(String html),255,256,8329,8340,MethodCallMutator,siblingIndex,prev,3,0.031295493,<mask>(),"Node before(String html) {
        addSiblingHtml(<mask>(), html);
        return this;
    }"
637,Node.java,before,Node before(String html),255,256,8329,8340,MethodCallMutator,siblingIndex,after,4,0.026694067,<mask>(),"Node before(String html) {
        addSiblingHtml(<mask>(), html);
        return this;
    }"
638,Node.java,before,Node before(String html),255,256,8345,8348,IdentifierMutator-Variable,html,HTML,2,4.5422064E-5,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(),<mask>);
        return this;
    }"
639,Node.java,before,Node before(String html),255,256,8345,8348,IdentifierMutator-Variable,html,text,3,3.684591E-5,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(),<mask>);
        return this;
    }"
640,Node.java,before,Node before(String html),255,256,8345,8348,IdentifierMutator-Variable,html,"''",4,2.5995416E-5,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(),<mask>);
        return this;
    }"
641,Node.java,before,Node before(String html),255,257,8367,8370,IdentifierMutator-ThisAccess,this,node,0,0.33228192,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(), html);
        return<mask>;
    }"
642,Node.java,before,Node before(String html),255,257,8367,8370,IdentifierMutator-ThisAccess,this,null,2,0.13385414,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(), html);
        return<mask>;
    }"
643,Node.java,before,Node before(String html),255,257,8367,8370,IdentifierMutator-ThisAccess,this,root,3,0.038851637,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(), html);
        return<mask>;
    }"
644,Node.java,before,Node before(String html),255,257,8367,8370,IdentifierMutator-ThisAccess,this,false,4,0.037872892,<mask>,"Node before(String html) {
        addSiblingHtml(siblingIndex(), html);
        return<mask>;
    }"
645,Node.java,before,Node before(Node node),266,267,8651,8657,MethodCallMutator,notNull,null,0,0.42568198,Validate.<mask>(node),"Node before(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
646,Node.java,before,Node before(Node node),266,267,8651,8657,MethodCallMutator,notNull,object,1,0.3463418,Validate.<mask>(node),"Node before(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
647,Node.java,before,Node before(Node node),266,267,8651,8657,MethodCallMutator,notNull,node,2,0.09477185,Validate.<mask>(node),"Node before(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
648,Node.java,before,Node before(Node node),266,267,8651,8657,MethodCallMutator,notNull,not,3,0.0181024,Validate.<mask>(node),"Node before(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
649,Node.java,before,Node before(Node node),266,267,8651,8657,MethodCallMutator,notNull,string,4,0.016584594,Validate.<mask>(node),"Node before(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
650,Node.java,before,Node before(Node node),266,267,8659,8662,IdentifierMutator-Variable,node,this,1,0.07806017,<mask>,"Node before(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
651,Node.java,before,Node before(Node node),266,267,8659,8662,IdentifierMutator-Variable,node,self,2,0.013011245,<mask>,"Node before(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
652,Node.java,before,Node before(Node node),266,267,8659,8662,IdentifierMutator-Variable,node,parent,3,0.009499442,<mask>,"Node before(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
653,Node.java,before,Node before(Node node),266,267,8659,8662,IdentifierMutator-Variable,node,child,4,0.007360803,<mask>,"Node before(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
654,Node.java,before,Node before(Node node),266,268,8683,8689,MethodCallMutator,notNull,null,0,0.59950906,Validate.<mask>(parentNode),"Node before(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
655,Node.java,before,Node before(Node node),266,268,8683,8689,MethodCallMutator,notNull,object,1,0.19022465,Validate.<mask>(parentNode),"Node before(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
656,Node.java,before,Node before(Node node),266,268,8683,8689,MethodCallMutator,notNull,node,2,0.055496704,Validate.<mask>(parentNode),"Node before(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
657,Node.java,before,Node before(Node node),266,268,8683,8689,MethodCallMutator,notNull,graph,3,0.050454725,Validate.<mask>(parentNode),"Node before(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
658,Node.java,before,Node before(Node node),266,268,8683,8689,MethodCallMutator,notNull,string,4,0.011746069,Validate.<mask>(parentNode),"Node before(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
659,Node.java,before,Node before(Node node),266,268,8691,8700,IdentifierMutator-Variable,parentNode,this,0,0.5682713,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
660,Node.java,before,Node before(Node node),266,268,8691,8700,IdentifierMutator-Variable,parentNode,parent,1,0.25329587,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
661,Node.java,before,Node before(Node node),266,268,8691,8700,IdentifierMutator-Variable,parentNode,node,2,0.06687138,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
662,Node.java,before,Node before(Node node),266,268,8691,8700,IdentifierMutator-Variable,parentNode,self,3,0.034661993,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
663,Node.java,before,Node before(Node node),266,268,8691,8700,IdentifierMutator-Variable,parentNode,child,4,0.018270673,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
664,Node.java,before,Node before(Node node),266,268,8691,8700,FieldReferenceMutator,parentNode,this,0,0.5682713,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
665,Node.java,before,Node before(Node node),266,268,8691,8700,FieldReferenceMutator,parentNode,parent,1,0.25329587,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
666,Node.java,before,Node before(Node node),266,268,8691,8700,FieldReferenceMutator,parentNode,node,2,0.06687138,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
667,Node.java,before,Node before(Node node),266,268,8691,8700,FieldReferenceMutator,parentNode,self,3,0.034661993,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
668,Node.java,before,Node before(Node node),266,268,8691,8700,FieldReferenceMutator,parentNode,child,4,0.018270673,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex(), node);
        return this;
    }"
669,Node.java,before,Node before(Node node),266,270,8724,8734,MethodCallMutator,addChildren,set,0,0.38212243,"parentNode.<mask>(siblingIndex(), node)","Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex(), node);
        return this;
    }"
670,Node.java,before,Node before(Node node),266,270,8724,8734,MethodCallMutator,addChildren,add,1,0.15331094,"parentNode.<mask>(siblingIndex(), node)","Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex(), node);
        return this;
    }"
671,Node.java,before,Node before(Node node),266,270,8724,8734,MethodCallMutator,addChildren,insert,2,0.093817614,"parentNode.<mask>(siblingIndex(), node)","Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex(), node);
        return this;
    }"
672,Node.java,before,Node before(Node node),266,270,8724,8734,MethodCallMutator,addChildren,before,3,0.061996885,"parentNode.<mask>(siblingIndex(), node)","Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex(), node);
        return this;
    }"
673,Node.java,before,Node before(Node node),266,270,8724,8734,MethodCallMutator,addChildren,after,4,0.058415573,"parentNode.<mask>(siblingIndex(), node)","Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex(), node);
        return this;
    }"
674,Node.java,before,Node before(Node node),266,270,8713,8722,IdentifierMutator-Variable,parentNode,parent,0,0.5764757,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
675,Node.java,before,Node before(Node node),266,270,8713,8722,IdentifierMutator-Variable,parentNode,this,1,0.23928241,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
676,Node.java,before,Node before(Node node),266,270,8713,8722,IdentifierMutator-Variable,parentNode,node,2,0.09391807,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
677,Node.java,before,Node before(Node node),266,270,8713,8722,IdentifierMutator-Variable,parentNode,super,3,0.010148502,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
678,Node.java,before,Node before(Node node),266,270,8713,8722,IdentifierMutator-Variable,parentNode,root,4,0.0056645353,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
679,Node.java,before,Node before(Node node),266,270,8713,8722,FieldReferenceMutator,parentNode,parent,0,0.5764757,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
680,Node.java,before,Node before(Node node),266,270,8713,8722,FieldReferenceMutator,parentNode,this,1,0.23928241,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
681,Node.java,before,Node before(Node node),266,270,8713,8722,FieldReferenceMutator,parentNode,node,2,0.09391807,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
682,Node.java,before,Node before(Node node),266,270,8713,8722,FieldReferenceMutator,parentNode,super,3,0.010148502,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
683,Node.java,before,Node before(Node node),266,270,8713,8722,FieldReferenceMutator,parentNode,root,4,0.0056645353,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex(), node);
        return this;
    }"
684,Node.java,before,Node before(Node node),266,270,8736,8747,MethodCallMutator,siblingIndex,before,0,0.5529153,<mask>(),"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>(), node);
        return this;
    }"
685,Node.java,before,Node before(Node node),266,270,8736,8747,MethodCallMutator,siblingIndex,child,1,0.0867268,<mask>(),"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>(), node);
        return this;
    }"
686,Node.java,before,Node before(Node node),266,270,8736,8747,MethodCallMutator,siblingIndex,after,2,0.07205046,<mask>(),"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>(), node);
        return this;
    }"
687,Node.java,before,Node before(Node node),266,270,8736,8747,MethodCallMutator,siblingIndex,this,3,0.048781827,<mask>(),"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>(), node);
        return this;
    }"
688,Node.java,before,Node before(Node node),266,270,8736,8747,MethodCallMutator,siblingIndex,next,4,0.016586721,<mask>(),"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>(), node);
        return this;
    }"
689,Node.java,before,Node before(Node node),266,270,8752,8755,IdentifierMutator-Variable,node,this,1,0.14394848,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(),<mask>);
        return this;
    }"
690,Node.java,before,Node before(Node node),266,270,8752,8755,IdentifierMutator-Variable,node,child,2,0.013745494,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(),<mask>);
        return this;
    }"
691,Node.java,before,Node before(Node node),266,270,8752,8755,IdentifierMutator-Variable,node,before,3,0.0077632796,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(),<mask>);
        return this;
    }"
692,Node.java,before,Node before(Node node),266,270,8752,8755,IdentifierMutator-Variable,node,self,4,0.0016699414,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(),<mask>);
        return this;
    }"
693,Node.java,before,Node before(Node node),266,271,8774,8777,IdentifierMutator-ThisAccess,this,node,0,0.89140505,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return<mask>;
    }"
694,Node.java,before,Node before(Node node),266,271,8774,8777,IdentifierMutator-ThisAccess,this,null,2,0.008985635,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return<mask>;
    }"
695,Node.java,before,Node before(Node node),266,271,8774,8777,IdentifierMutator-ThisAccess,this,parent,3,0.006567194,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return<mask>;
    }"
696,Node.java,before,Node before(Node node),266,271,8774,8777,IdentifierMutator-ThisAccess,this,self,4,0.002287122,<mask>,"Node before(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex(), node);
        return<mask>;
    }"
697,Node.java,after,Node after(String html),280,281,9055,9068,MethodCallMutator,addSiblingHtml,insert,0,0.47008127,"<mask>(siblingIndex() + 1, html)","Node after(String html) {<mask>(siblingIndex()+1, html);
        return this;
    }"
698,Node.java,after,Node after(String html),280,281,9055,9068,MethodCallMutator,addSiblingHtml,replace,1,0.1588581,"<mask>(siblingIndex() + 1, html)","Node after(String html) {<mask>(siblingIndex()+1, html);
        return this;
    }"
699,Node.java,after,Node after(String html),280,281,9055,9068,MethodCallMutator,addSiblingHtml,append,2,0.08923599,"<mask>(siblingIndex() + 1, html)","Node after(String html) {<mask>(siblingIndex()+1, html);
        return this;
    }"
700,Node.java,after,Node after(String html),280,281,9055,9068,MethodCallMutator,addSiblingHtml,after,3,0.06053808,"<mask>(siblingIndex() + 1, html)","Node after(String html) {<mask>(siblingIndex()+1, html);
        return this;
    }"
701,Node.java,after,Node after(String html),280,281,9055,9068,MethodCallMutator,addSiblingHtml,set,4,0.050248556,"<mask>(siblingIndex() + 1, html)","Node after(String html) {<mask>(siblingIndex()+1, html);
        return this;
    }"
702,Node.java,after,Node after(String html),280,281,9084,9084,BinaryOperatorMutator,+,-,1,0.06389121,siblingIndex() <mask> 1,"Node after(String html) {
        addSiblingHtml(siblingIndex()<mask>1, html);
        return this;
    }"
703,Node.java,after,Node after(String html),280,281,9084,9084,BinaryOperatorMutator,+,-,3,0.007866653,siblingIndex() <mask> 1,"Node after(String html) {
        addSiblingHtml(siblingIndex()<mask>1, html);
        return this;
    }"
704,Node.java,after,Node after(String html),280,281,9084,9084,BinaryOperatorMutator,+,)+,4,0.0031504037,siblingIndex() <mask> 1,"Node after(String html) {
        addSiblingHtml(siblingIndex()<mask>1, html);
        return this;
    }"
705,Node.java,after,Node after(String html),280,281,9070,9081,MethodCallMutator,siblingIndex,index,0,0.5361917,<mask>(),"Node after(String html) {
        addSiblingHtml(<mask>()+1, html);
        return this;
    }"
706,Node.java,after,Node after(String html),280,281,9070,9081,MethodCallMutator,siblingIndex,position,1,0.23537478,<mask>(),"Node after(String html) {
        addSiblingHtml(<mask>()+1, html);
        return this;
    }"
707,Node.java,after,Node after(String html),280,281,9070,9081,MethodCallMutator,siblingIndex,Index,2,0.027040657,<mask>(),"Node after(String html) {
        addSiblingHtml(<mask>()+1, html);
        return this;
    }"
708,Node.java,after,Node after(String html),280,281,9070,9081,MethodCallMutator,siblingIndex,id,3,0.015697015,<mask>(),"Node after(String html) {
        addSiblingHtml(<mask>()+1, html);
        return this;
    }"
709,Node.java,after,Node after(String html),280,281,9070,9081,MethodCallMutator,siblingIndex,page,4,0.014259404,<mask>(),"Node after(String html) {
        addSiblingHtml(<mask>()+1, html);
        return this;
    }"
710,Node.java,after,Node after(String html),280,281,9085,9085,IdentifierMutator-Literal,1,2,1,0.028222127,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+<mask>, html);
        return this;
    }"
711,Node.java,after,Node after(String html),280,281,9085,9085,IdentifierMutator-Literal,1,0,3,0.02022025,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+<mask>, html);
        return this;
    }"
712,Node.java,after,Node after(String html),280,281,9085,9085,IdentifierMutator-Literal,1,i,4,0.007819114,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+<mask>, html);
        return this;
    }"
713,Node.java,after,Node after(String html),280,281,9088,9091,IdentifierMutator-Variable,html,HTML,2,3.143579E-5,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1,<mask>);
        return this;
    }"
714,Node.java,after,Node after(String html),280,281,9088,9091,IdentifierMutator-Variable,html,text,3,1.3824144E-5,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1,<mask>);
        return this;
    }"
715,Node.java,after,Node after(String html),280,281,9088,9091,IdentifierMutator-Variable,html,"''",4,1.1040662E-5,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1,<mask>);
        return this;
    }"
716,Node.java,after,Node after(String html),280,282,9110,9113,IdentifierMutator-ThisAccess,this,node,0,0.2537908,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1, html);
        return<mask>;
    }"
717,Node.java,after,Node after(String html),280,282,9110,9113,IdentifierMutator-ThisAccess,this,null,2,0.13511366,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1, html);
        return<mask>;
    }"
718,Node.java,after,Node after(String html),280,282,9110,9113,IdentifierMutator-ThisAccess,this,root,3,0.05835574,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1, html);
        return<mask>;
    }"
719,Node.java,after,Node after(String html),280,282,9110,9113,IdentifierMutator-ThisAccess,this,html,4,0.037308298,<mask>,"Node after(String html) {
        addSiblingHtml(siblingIndex()+1, html);
        return<mask>;
    }"
720,Node.java,after,Node after(Node node),291,292,9391,9397,MethodCallMutator,notNull,null,0,0.43696794,Validate.<mask>(node),"Node after(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
721,Node.java,after,Node after(Node node),291,292,9391,9397,MethodCallMutator,notNull,object,1,0.27944672,Validate.<mask>(node),"Node after(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
722,Node.java,after,Node after(Node node),291,292,9391,9397,MethodCallMutator,notNull,node,2,0.10157905,Validate.<mask>(node),"Node after(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
723,Node.java,after,Node after(Node node),291,292,9391,9397,MethodCallMutator,notNull,not,3,0.026411034,Validate.<mask>(node),"Node after(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
724,Node.java,after,Node after(Node node),291,292,9391,9397,MethodCallMutator,notNull,string,4,0.024292681,Validate.<mask>(node),"Node after(Node node) {
        Validate.<mask>(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
725,Node.java,after,Node after(Node node),291,292,9399,9402,IdentifierMutator-Variable,node,this,1,0.07856705,<mask>,"Node after(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
726,Node.java,after,Node after(Node node),291,292,9399,9402,IdentifierMutator-Variable,node,parent,2,0.008549182,<mask>,"Node after(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
727,Node.java,after,Node after(Node node),291,292,9399,9402,IdentifierMutator-Variable,node,self,3,0.007724942,<mask>,"Node after(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
728,Node.java,after,Node after(Node node),291,292,9399,9402,IdentifierMutator-Variable,node,child,4,0.0031674027,<mask>,"Node after(Node node) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
729,Node.java,after,Node after(Node node),291,293,9423,9429,MethodCallMutator,notNull,null,0,0.5503779,Validate.<mask>(parentNode),"Node after(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
730,Node.java,after,Node after(Node node),291,293,9423,9429,MethodCallMutator,notNull,object,1,0.18869402,Validate.<mask>(parentNode),"Node after(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
731,Node.java,after,Node after(Node node),291,293,9423,9429,MethodCallMutator,notNull,graph,2,0.07446055,Validate.<mask>(parentNode),"Node after(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
732,Node.java,after,Node after(Node node),291,293,9423,9429,MethodCallMutator,notNull,node,3,0.07227805,Validate.<mask>(parentNode),"Node after(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
733,Node.java,after,Node after(Node node),291,293,9423,9429,MethodCallMutator,notNull,string,4,0.013919654,Validate.<mask>(parentNode),"Node after(Node node) {
        Validate.notNull(node);
        Validate.<mask>(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
734,Node.java,after,Node after(Node node),291,293,9431,9440,IdentifierMutator-Variable,parentNode,this,0,0.58465093,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
735,Node.java,after,Node after(Node node),291,293,9431,9440,IdentifierMutator-Variable,parentNode,parent,1,0.28119195,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
736,Node.java,after,Node after(Node node),291,293,9431,9440,IdentifierMutator-Variable,parentNode,node,2,0.07148753,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
737,Node.java,after,Node after(Node node),291,293,9431,9440,IdentifierMutator-Variable,parentNode,self,3,0.018619636,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
738,Node.java,after,Node after(Node node),291,293,9431,9440,IdentifierMutator-Variable,parentNode,child,4,0.007050629,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
739,Node.java,after,Node after(Node node),291,293,9431,9440,FieldReferenceMutator,parentNode,this,0,0.58465093,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
740,Node.java,after,Node after(Node node),291,293,9431,9440,FieldReferenceMutator,parentNode,parent,1,0.28119195,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
741,Node.java,after,Node after(Node node),291,293,9431,9440,FieldReferenceMutator,parentNode,node,2,0.07148753,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
742,Node.java,after,Node after(Node node),291,293,9431,9440,FieldReferenceMutator,parentNode,self,3,0.018619636,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
743,Node.java,after,Node after(Node node),291,293,9431,9440,FieldReferenceMutator,parentNode,child,4,0.007050629,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(<mask>);

        parentNode.addChildren(siblingIndex()+1, node);
        return this;
    }"
744,Node.java,after,Node after(Node node),291,295,9464,9474,MethodCallMutator,addChildren,set,0,0.30083892,"parentNode.<mask>(siblingIndex() + 1, node)","Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex()+1, node);
        return this;
    }"
745,Node.java,after,Node after(Node node),291,295,9464,9474,MethodCallMutator,addChildren,add,1,0.26524898,"parentNode.<mask>(siblingIndex() + 1, node)","Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex()+1, node);
        return this;
    }"
746,Node.java,after,Node after(Node node),291,295,9464,9474,MethodCallMutator,addChildren,insert,2,0.097493514,"parentNode.<mask>(siblingIndex() + 1, node)","Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex()+1, node);
        return this;
    }"
747,Node.java,after,Node after(Node node),291,295,9464,9474,MethodCallMutator,addChildren,after,3,0.07849394,"parentNode.<mask>(siblingIndex() + 1, node)","Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex()+1, node);
        return this;
    }"
748,Node.java,after,Node after(Node node),291,295,9464,9474,MethodCallMutator,addChildren,replace,4,0.06291342,"parentNode.<mask>(siblingIndex() + 1, node)","Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.<mask>(siblingIndex()+1, node);
        return this;
    }"
749,Node.java,after,Node after(Node node),291,295,9453,9462,IdentifierMutator-Variable,parentNode,parent,0,0.5306836,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
750,Node.java,after,Node after(Node node),291,295,9453,9462,IdentifierMutator-Variable,parentNode,this,1,0.30579197,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
751,Node.java,after,Node after(Node node),291,295,9453,9462,IdentifierMutator-Variable,parentNode,node,2,0.07775821,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
752,Node.java,after,Node after(Node node),291,295,9453,9462,IdentifierMutator-Variable,parentNode,super,3,0.008273274,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
753,Node.java,after,Node after(Node node),291,295,9453,9462,IdentifierMutator-Variable,parentNode,tree,4,0.0056550587,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
754,Node.java,after,Node after(Node node),291,295,9453,9462,FieldReferenceMutator,parentNode,parent,0,0.5306836,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
755,Node.java,after,Node after(Node node),291,295,9453,9462,FieldReferenceMutator,parentNode,this,1,0.30579197,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
756,Node.java,after,Node after(Node node),291,295,9453,9462,FieldReferenceMutator,parentNode,node,2,0.07775821,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
757,Node.java,after,Node after(Node node),291,295,9453,9462,FieldReferenceMutator,parentNode,super,3,0.008273274,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
758,Node.java,after,Node after(Node node),291,295,9453,9462,FieldReferenceMutator,parentNode,tree,4,0.0056550587,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);<mask>.addChildren(siblingIndex()+1, node);
        return this;
    }"
759,Node.java,after,Node after(Node node),291,295,9490,9490,BinaryOperatorMutator,+,-,1,0.38652968,siblingIndex() <mask> 1,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()<mask>1, node);
        return this;
    }"
760,Node.java,after,Node after(Node node),291,295,9490,9490,BinaryOperatorMutator,+,-,2,0.037312616,siblingIndex() <mask> 1,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()<mask>1, node);
        return this;
    }"
761,Node.java,after,Node after(Node node),291,295,9490,9490,BinaryOperatorMutator,+,$,4,0.0020573377,siblingIndex() <mask> 1,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()<mask>1, node);
        return this;
    }"
762,Node.java,after,Node after(Node node),291,295,9476,9487,MethodCallMutator,siblingIndex,index,0,0.43589815,<mask>(),"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>()+1, node);
        return this;
    }"
763,Node.java,after,Node after(Node node),291,295,9476,9487,MethodCallMutator,siblingIndex,position,1,0.3493173,<mask>(),"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>()+1, node);
        return this;
    }"
764,Node.java,after,Node after(Node node),291,295,9476,9487,MethodCallMutator,siblingIndex,size,2,0.052821577,<mask>(),"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>()+1, node);
        return this;
    }"
765,Node.java,after,Node after(Node node),291,295,9476,9487,MethodCallMutator,siblingIndex,count,3,0.024925698,<mask>(),"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>()+1, node);
        return this;
    }"
766,Node.java,after,Node after(Node node),291,295,9476,9487,MethodCallMutator,siblingIndex,id,4,0.023637423,<mask>(),"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(<mask>()+1, node);
        return this;
    }"
767,Node.java,after,Node after(Node node),291,295,9491,9491,IdentifierMutator-Literal,1,0,2,0.012198198,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+<mask>, node);
        return this;
    }"
768,Node.java,after,Node after(Node node),291,295,9491,9491,IdentifierMutator-Literal,1,2,3,0.01043201,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+<mask>, node);
        return this;
    }"
769,Node.java,after,Node after(Node node),291,295,9491,9491,IdentifierMutator-Literal,1,i,4,0.006105841,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+<mask>, node);
        return this;
    }"
770,Node.java,after,Node after(Node node),291,295,9494,9497,IdentifierMutator-Variable,node,this,1,0.04275462,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1,<mask>);
        return this;
    }"
771,Node.java,after,Node after(Node node),291,295,9494,9497,IdentifierMutator-Variable,node,child,2,0.005190336,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1,<mask>);
        return this;
    }"
772,Node.java,after,Node after(Node node),291,295,9494,9497,IdentifierMutator-Variable,node,self,3,5.7463045E-4,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1,<mask>);
        return this;
    }"
773,Node.java,after,Node after(Node node),291,295,9494,9497,IdentifierMutator-Variable,node,parent,4,4.7486043E-4,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1,<mask>);
        return this;
    }"
774,Node.java,after,Node after(Node node),291,296,9516,9519,IdentifierMutator-ThisAccess,this,node,0,0.94120616,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return<mask>;
    }"
775,Node.java,after,Node after(Node node),291,296,9516,9519,IdentifierMutator-ThisAccess,this,null,2,0.006130488,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return<mask>;
    }"
776,Node.java,after,Node after(Node node),291,296,9516,9519,IdentifierMutator-ThisAccess,this,parent,3,0.0056728898,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return<mask>;
    }"
777,Node.java,after,Node after(Node node),291,296,9516,9519,IdentifierMutator-ThisAccess,this,true,4,0.0015225336,<mask>,"Node after(Node node) {
        Validate.notNull(node);
        Validate.notNull(parentNode);

        parentNode.addChildren(siblingIndex()+1, node);
        return<mask>;
    }"
778,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9604,9610,MethodCallMutator,notNull,string,0,0.4932792,Validate.<mask>(html),"void addSiblingHtml(int index, String html) {
        Validate.<mask>(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
779,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9604,9610,MethodCallMutator,notNull,null,1,0.2239177,Validate.<mask>(html),"void addSiblingHtml(int index, String html) {
        Validate.<mask>(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
780,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9604,9610,MethodCallMutator,notNull,empty,2,0.09946849,Validate.<mask>(html),"void addSiblingHtml(int index, String html) {
        Validate.<mask>(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
781,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9604,9610,MethodCallMutator,notNull,text,3,0.06231338,Validate.<mask>(html),"void addSiblingHtml(int index, String html) {
        Validate.<mask>(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
782,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9604,9610,MethodCallMutator,notNull,html,4,0.02598738,Validate.<mask>(html),"void addSiblingHtml(int index, String html) {
        Validate.<mask>(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
783,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9612,9615,IdentifierMutator-Variable,html,index,1,0.051652227,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
784,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9612,9615,IdentifierMutator-Variable,html,parent,2,0.007831126,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
785,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9612,9615,IdentifierMutator-Variable,html,document,3,0.0012162718,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
786,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,300,9612,9615,IdentifierMutator-Variable,html,this,4,8.6667086E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
787,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9636,9642,MethodCallMutator,notNull,null,0,0.8857704,Validate.<mask>(parentNode),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.<mask>(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
788,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9636,9642,MethodCallMutator,notNull,object,1,0.022584127,Validate.<mask>(parentNode),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.<mask>(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
789,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9636,9642,MethodCallMutator,notNull,not,2,0.013885973,Validate.<mask>(parentNode),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.<mask>(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
790,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9636,9642,MethodCallMutator,notNull,empty,3,0.013311413,Validate.<mask>(parentNode),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.<mask>(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
791,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9636,9642,MethodCallMutator,notNull,Null,4,0.009138747,Validate.<mask>(parentNode),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.<mask>(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
792,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,IdentifierMutator-Variable,parentNode,context,0,0.75956494,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
793,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,IdentifierMutator-Variable,parentNode,parent,1,0.15143046,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
794,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,IdentifierMutator-Variable,parentNode,index,2,0.034902718,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
795,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,IdentifierMutator-Variable,parentNode,ctx,3,0.008691272,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
796,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,IdentifierMutator-Variable,parentNode,element,4,0.0051631765,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
797,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,FieldReferenceMutator,parentNode,context,0,0.75956494,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
798,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,FieldReferenceMutator,parentNode,parent,1,0.15143046,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
799,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,FieldReferenceMutator,parentNode,index,2,0.034902718,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
800,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,FieldReferenceMutator,parentNode,ctx,3,0.008691272,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
801,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,301,9644,9653,FieldReferenceMutator,parentNode,element,4,0.0051631765,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
802,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9738,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,null,0,0.3225563,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
803,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9738,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,this,1,0.138491,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
804,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9738,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,root,2,0.12489445,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
805,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9738,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,html,3,0.07291632,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
806,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9738,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,context,4,0.06026165,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
807,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9692,9703,BinaryOperatorMutator,instanceof,!=,0,0.8371963,parent() <mask> org.jsoup.nodes.Element,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent()<mask>Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
808,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9692,9703,BinaryOperatorMutator,instanceof,==,1,0.04439187,parent() <mask> org.jsoup.nodes.Element,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent()<mask>Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
809,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9692,9703,BinaryOperatorMutator,instanceof,instance,2,0.022790996,parent() <mask> org.jsoup.nodes.Element,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent()<mask>Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
810,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9692,9703,BinaryOperatorMutator,instanceof,.,3,0.021813229,parent() <mask> org.jsoup.nodes.Element,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent()<mask>Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
811,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9692,9703,BinaryOperatorMutator,instanceof,is,4,0.02019852,parent() <mask> org.jsoup.nodes.Element,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent()<mask>Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
812,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9689,MethodCallMutator,parent,current,2,5.270854E-5,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
813,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9689,MethodCallMutator,parent,root,3,3.6331436E-5,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
814,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9684,9689,MethodCallMutator,parent,node,4,2.2889682E-5,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
815,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9704,9710,TypeReferenceMutator,org.jsoup.nodes.Element,Element,0,0.99855465,org.jsoup.nodes<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
816,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9704,9710,TypeReferenceMutator,org.jsoup.nodes.Element,Element,1,3.1630966E-4,org.jsoup.nodes<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
817,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9704,9710,TypeReferenceMutator,org.jsoup.nodes.Element,Document,2,2.580315E-4,org.jsoup.nodes<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
818,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9704,9710,TypeReferenceMutator,org.jsoup.nodes.Element,Parent,3,7.926292E-5,org.jsoup.nodes<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
819,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9704,9710,TypeReferenceMutator,org.jsoup.nodes.Element,Node,4,7.415774E-5,org.jsoup.nodes<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
820,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9714,9719,MethodCallMutator,parent,(,0,0.98350656,((Element) (<mask>())),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
821,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9714,9719,MethodCallMutator,parent,(,1,0.009275005,((Element) (<mask>())),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
822,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9714,9719,MethodCallMutator,parent,((,2,0.006664385,((Element) (<mask>())),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
823,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9714,9719,MethodCallMutator,parent,-(,3,1.454363E-4,((Element) (<mask>())),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
824,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9714,9719,MethodCallMutator,parent,((,4,1.0402233E-4,((Element) (<mask>())),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
825,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9735,9738,IdentifierMutator-Literal,null,context,1,0.09185858,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
826,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9735,9738,IdentifierMutator-Literal,null,parent,2,0.051991,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
827,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9735,9738,IdentifierMutator-Literal,null,this,3,0.007185471,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
828,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,303,9735,9738,IdentifierMutator-Literal,null,root,4,0.0056539476,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
829,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9783,9795,MethodCallMutator,parseFragment,parse,0,0.9501519,"Parser.<mask>(html, context, baseUri())","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.<mask>(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
830,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9783,9795,MethodCallMutator,parseFragment,parse,1,0.023918021,"Parser.<mask>(html, context, baseUri())","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.<mask>(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
831,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9783,9795,MethodCallMutator,parseFragment,split,2,0.003493144,"Parser.<mask>(html, context, baseUri())","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.<mask>(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
832,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9783,9795,MethodCallMutator,parseFragment,process,3,0.0027437592,"Parser.<mask>(html, context, baseUri())","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.<mask>(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
833,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9783,9795,MethodCallMutator,parseFragment,eval,4,0.0018480712,"Parser.<mask>(html, context, baseUri())","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.<mask>(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
834,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9797,9800,IdentifierMutator-Variable,html,url,2,3.8696355E-5,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(<mask>, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
835,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9797,9800,IdentifierMutator-Variable,html,HTML,3,2.3895536E-5,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(<mask>, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
836,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9797,9800,IdentifierMutator-Variable,html,doc,4,1.8217952E-5,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(<mask>, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
837,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9803,9809,IdentifierMutator-Variable,context,index,1,8.8826695E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html,<mask>, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
838,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9803,9809,IdentifierMutator-Variable,context,true,2,6.529575E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html,<mask>, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
839,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9803,9809,IdentifierMutator-Variable,context,false,3,5.591618E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html,<mask>, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
840,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9803,9809,IdentifierMutator-Variable,context,null,4,5.167448E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html,<mask>, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
841,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9812,9818,MethodCallMutator,baseUri,parent,0,0.6397958,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context,<mask>());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
842,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9812,9818,MethodCallMutator,baseUri,node,1,0.030306103,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context,<mask>());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
843,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9812,9818,MethodCallMutator,baseUri,context,2,0.021170754,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context,<mask>());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
844,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9812,9818,MethodCallMutator,baseUri,get,3,0.020660266,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context,<mask>());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
845,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,304,9812,9818,MethodCallMutator,baseUri,root,4,0.015929792,<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context,<mask>());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
846,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9843,9853,MethodCallMutator,addChildren,add,0,0.4327615,"parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]))","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]));
    }"
847,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9843,9853,MethodCallMutator,addChildren,set,1,0.3230353,"parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]))","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]));
    }"
848,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9843,9853,MethodCallMutator,addChildren,replace,2,0.07092531,"parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]))","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]));
    }"
849,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9843,9853,MethodCallMutator,addChildren,insert,3,0.059097208,"parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]))","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]));
    }"
850,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9843,9853,MethodCallMutator,addChildren,put,4,0.015163269,"parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]))","void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.<mask>(index, nodes.toArray(new Node[nodes.size()]));
    }"
851,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,IdentifierMutator-Variable,parentNode,node,0,0.14856012,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
852,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,IdentifierMutator-Variable,parentNode,parent,1,0.1379034,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
853,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,IdentifierMutator-Variable,parentNode,context,2,0.121550635,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
854,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,IdentifierMutator-Variable,parentNode,root,3,0.07884425,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
855,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,IdentifierMutator-Variable,parentNode,element,4,0.03970569,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
856,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,FieldReferenceMutator,parentNode,node,0,0.14856012,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
857,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,FieldReferenceMutator,parentNode,parent,1,0.1379034,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
858,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,FieldReferenceMutator,parentNode,context,2,0.121550635,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
859,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,FieldReferenceMutator,parentNode,root,3,0.07884425,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
860,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9832,9841,FieldReferenceMutator,parentNode,element,4,0.03970569,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());<mask>.addChildren(index, nodes.toArray(new Node[nodes.size()]));
    }"
861,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9855,9859,IdentifierMutator-Variable,index,Index,2,0.0014599317,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(<mask>, nodes.toArray(new Node[nodes.size()]));
    }"
862,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9855,9859,IdentifierMutator-Variable,index,0,3,0.0011060447,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(<mask>, nodes.toArray(new Node[nodes.size()]));
    }"
863,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9855,9859,IdentifierMutator-Variable,index,1,4,3.5178178E-4,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(<mask>, nodes.toArray(new Node[nodes.size()]));
    }"
864,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9868,9874,MethodCallMutator,toArray,map,0,0.1249845,nodes.<mask>(new Node[nodes.size()]),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.<mask>(new Node[nodes.size()]));
    }"
865,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9868,9874,MethodCallMutator,toArray,values,1,0.10546051,nodes.<mask>(new Node[nodes.size()]),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.<mask>(new Node[nodes.size()]));
    }"
866,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9868,9874,MethodCallMutator,toArray,slice,2,0.09820837,nodes.<mask>(new Node[nodes.size()]),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.<mask>(new Node[nodes.size()]));
    }"
867,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9868,9874,MethodCallMutator,toArray,collect,3,0.0764671,nodes.<mask>(new Node[nodes.size()]),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.<mask>(new Node[nodes.size()]));
    }"
868,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9868,9874,MethodCallMutator,toArray,build,4,0.071915895,nodes.<mask>(new Node[nodes.size()]),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.<mask>(new Node[nodes.size()]));
    }"
869,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9862,9866,IdentifierMutator-Variable,nodes,node,1,8.84802E-6,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index,<mask>.toArray(new Node[nodes.size()]));
    }"
870,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9862,9866,IdentifierMutator-Variable,nodes,children,2,5.136728E-6,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index,<mask>.toArray(new Node[nodes.size()]));
    }"
871,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9862,9866,IdentifierMutator-Variable,nodes,elements,3,3.9135675E-6,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index,<mask>.toArray(new Node[nodes.size()]));
    }"
872,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9862,9866,IdentifierMutator-Variable,nodes,odes,4,3.5129067E-6,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index,<mask>.toArray(new Node[nodes.size()]));
    }"
873,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9891,9894,MethodCallMutator,size,length,1,0.0023034585,nodes.<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.<mask>()]));
    }"
874,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9891,9894,MethodCallMutator,size,count,3,5.592759E-5,nodes.<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.<mask>()]));
    }"
875,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9891,9894,MethodCallMutator,size,position,4,4.1615956E-5,nodes.<mask>(),"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[nodes.<mask>()]));
    }"
876,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9885,9889,IdentifierMutator-Variable,nodes,node,1,0.11813266,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[<mask>.size()]));
    }"
877,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9885,9889,IdentifierMutator-Variable,nodes,odes,2,0.04470335,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[<mask>.size()]));
    }"
878,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9885,9889,IdentifierMutator-Variable,nodes,ids,3,0.01873195,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[<mask>.size()]));
    }"
879,Node.java,addSiblingHtml,"void addSiblingHtml(int index, String html)",299,305,9885,9889,IdentifierMutator-Variable,nodes,names,4,0.012728672,<mask>,"void addSiblingHtml(int index, String html) {
        Validate.notNull(html);
        Validate.notNull(parentNode);

        Element context = parent() instanceof Element ? (Element) parent() : null;        
        List<Node> nodes = Parser.parseFragment(html, context, baseUri());
        parentNode.addChildren(index, nodes.toArray(new Node[<mask>.size()]));
    }"
880,Node.java,wrap,Node wrap(String html),313,314,10177,10184,MethodCallMutator,notEmpty,html,0,0.397105,Validate.<mask>(html),"Node wrap(String html) {
        Validate.<mask>(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
881,Node.java,wrap,Node wrap(String html),313,314,10177,10184,MethodCallMutator,notEmpty,html,1,0.11648297,Validate.<mask>(html),"Node wrap(String html) {
        Validate.<mask>(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
882,Node.java,wrap,Node wrap(String html),313,314,10177,10184,MethodCallMutator,notEmpty,string,2,0.08316124,Validate.<mask>(html),"Node wrap(String html) {
        Validate.<mask>(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
883,Node.java,wrap,Node wrap(String html),313,314,10177,10184,MethodCallMutator,notEmpty,text,3,0.03671558,Validate.<mask>(html),"Node wrap(String html) {
        Validate.<mask>(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
884,Node.java,wrap,Node wrap(String html),313,314,10177,10184,MethodCallMutator,notEmpty,HTML,4,0.03462906,Validate.<mask>(html),"Node wrap(String html) {
        Validate.<mask>(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
885,Node.java,wrap,Node wrap(String html),313,314,10186,10189,IdentifierMutator-Variable,html,context,1,8.933361E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
886,Node.java,wrap,Node wrap(String html),313,314,10186,10189,IdentifierMutator-Variable,html,tree,2,4.5418233E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
887,Node.java,wrap,Node wrap(String html),313,314,10186,10189,IdentifierMutator-Variable,html,parent,3,2.8627936E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(<mask>);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
888,Node.java,wrap,Node wrap(String html),313,316,10220,10274,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,null,0,0.45007086,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
889,Node.java,wrap,Node wrap(String html),313,316,10220,10274,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,this,1,0.15097456,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
890,Node.java,wrap,Node wrap(String html),313,316,10220,10274,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,root,2,0.10887769,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
891,Node.java,wrap,Node wrap(String html),313,316,10220,10274,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,context,3,0.067471914,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
892,Node.java,wrap,Node wrap(String html),313,316,10220,10274,IdentifierMutator-Conditional,(parent()instanceoforg.jsoup.nodes.Element)?((org.jsoup.nodes.Element)(parent())):null,"""""",4,0.040854957,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
893,Node.java,wrap,Node wrap(String html),313,316,10228,10239,BinaryOperatorMutator,instanceof,!=,0,0.73628086,parent() <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent()<mask>Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
894,Node.java,wrap,Node wrap(String html),313,316,10228,10239,BinaryOperatorMutator,instanceof,==,1,0.0988915,parent() <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent()<mask>Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
895,Node.java,wrap,Node wrap(String html),313,316,10228,10239,BinaryOperatorMutator,instanceof,of,2,0.040501356,parent() <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent()<mask>Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
896,Node.java,wrap,Node wrap(String html),313,316,10228,10239,BinaryOperatorMutator,instanceof,.,3,0.03349311,parent() <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent()<mask>Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
897,Node.java,wrap,Node wrap(String html),313,316,10228,10239,BinaryOperatorMutator,instanceof,is,4,0.016132005,parent() <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent()<mask>Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
898,Node.java,wrap,Node wrap(String html),313,316,10220,10225,MethodCallMutator,parent,node,2,1.9664216E-4,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
899,Node.java,wrap,Node wrap(String html),313,316,10220,10225,MethodCallMutator,parent,current,3,1.7059104E-4,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
900,Node.java,wrap,Node wrap(String html),313,316,10220,10225,MethodCallMutator,parent,root,4,1.2448599E-4,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context =<mask>() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
901,Node.java,wrap,Node wrap(String html),313,316,10240,10246,TypeReferenceMutator,org.jsoup.nodes.Element,Element,0,0.99911636,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
902,Node.java,wrap,Node wrap(String html),313,316,10240,10246,TypeReferenceMutator,org.jsoup.nodes.Element,Document,1,1.1415926E-4,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
903,Node.java,wrap,Node wrap(String html),313,316,10240,10246,TypeReferenceMutator,org.jsoup.nodes.Element,Node,2,1.1354882E-4,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
904,Node.java,wrap,Node wrap(String html),313,316,10240,10246,TypeReferenceMutator,org.jsoup.nodes.Element,Element,3,9.0900845E-5,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
905,Node.java,wrap,Node wrap(String html),313,316,10240,10246,TypeReferenceMutator,org.jsoup.nodes.Element,Parent,4,7.0311486E-5,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof<mask> ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
906,Node.java,wrap,Node wrap(String html),313,316,10250,10255,MethodCallMutator,parent,(,0,0.9941223,((Element) (<mask>())),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
907,Node.java,wrap,Node wrap(String html),313,316,10250,10255,MethodCallMutator,parent,(,1,0.0037302095,((Element) (<mask>())),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
908,Node.java,wrap,Node wrap(String html),313,316,10250,10255,MethodCallMutator,parent,((,2,0.0018211068,((Element) (<mask>())),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
909,Node.java,wrap,Node wrap(String html),313,316,10250,10255,MethodCallMutator,parent,(!,3,7.0123766E-5,((Element) (<mask>())),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
910,Node.java,wrap,Node wrap(String html),313,316,10250,10255,MethodCallMutator,parent,((,4,4.8152076E-5,((Element) (<mask>())),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ?<mask>nt) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
911,Node.java,wrap,Node wrap(String html),313,316,10271,10274,IdentifierMutator-Literal,null,context,1,0.10735176,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
912,Node.java,wrap,Node wrap(String html),313,316,10271,10274,IdentifierMutator-Literal,null,parent,2,0.028809713,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
913,Node.java,wrap,Node wrap(String html),313,316,10271,10274,IdentifierMutator-Literal,null,root,3,0.015159806,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
914,Node.java,wrap,Node wrap(String html),313,316,10271,10274,IdentifierMutator-Literal,null,"""""",4,0.012389947,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() :<mask>;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
915,Node.java,wrap,Node wrap(String html),313,317,10318,10330,MethodCallMutator,parseFragment,parse,0,0.92284435,"Parser.<mask>(html, context, baseUri())","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.<mask>(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
916,Node.java,wrap,Node wrap(String html),313,317,10318,10330,MethodCallMutator,parseFragment,parse,1,0.026071448,"Parser.<mask>(html, context, baseUri())","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.<mask>(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
917,Node.java,wrap,Node wrap(String html),313,317,10318,10330,MethodCallMutator,parseFragment,split,2,0.009721158,"Parser.<mask>(html, context, baseUri())","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.<mask>(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
918,Node.java,wrap,Node wrap(String html),313,317,10318,10330,MethodCallMutator,parseFragment,wrap,3,0.004730589,"Parser.<mask>(html, context, baseUri())","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.<mask>(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
919,Node.java,wrap,Node wrap(String html),313,317,10318,10330,MethodCallMutator,parseFragment,process,4,0.0023406975,"Parser.<mask>(html, context, baseUri())","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.<mask>(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
920,Node.java,wrap,Node wrap(String html),313,317,10332,10335,IdentifierMutator-Variable,html,url,2,2.8458497E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(<mask>, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
921,Node.java,wrap,Node wrap(String html),313,317,10332,10335,IdentifierMutator-Variable,html,http,3,1.7848863E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(<mask>, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
922,Node.java,wrap,Node wrap(String html),313,317,10332,10335,IdentifierMutator-Variable,html,HTML,4,1.62486E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(<mask>, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
923,Node.java,wrap,Node wrap(String html),313,317,10338,10344,IdentifierMutator-Variable,context,true,1,0.0031786493,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html,<mask>, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
924,Node.java,wrap,Node wrap(String html),313,317,10338,10344,IdentifierMutator-Variable,context,false,2,0.0021498078,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html,<mask>, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
925,Node.java,wrap,Node wrap(String html),313,317,10338,10344,IdentifierMutator-Variable,context,null,3,0.0014721486,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html,<mask>, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
926,Node.java,wrap,Node wrap(String html),313,317,10338,10344,IdentifierMutator-Variable,context,root,4,0.0010613807,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html,<mask>, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
927,Node.java,wrap,Node wrap(String html),313,317,10347,10353,MethodCallMutator,baseUri,parent,0,0.4640859,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context,<mask>());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
928,Node.java,wrap,Node wrap(String html),313,317,10347,10353,MethodCallMutator,baseUri,context,1,0.03949247,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context,<mask>());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
929,Node.java,wrap,Node wrap(String html),313,317,10347,10353,MethodCallMutator,baseUri,node,2,0.023948757,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context,<mask>());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
930,Node.java,wrap,Node wrap(String html),313,317,10347,10353,MethodCallMutator,baseUri,root,3,0.02337349,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context,<mask>());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
931,Node.java,wrap,Node wrap(String html),313,317,10347,10353,MethodCallMutator,baseUri,get,4,0.012108188,<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context,<mask>());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
932,Node.java,wrap,Node wrap(String html),313,318,10396,10398,MethodCallMutator,get,item,1,0.021868546,wrapChildren.<mask>(0),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.<mask>(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
933,Node.java,wrap,Node wrap(String html),313,318,10396,10398,MethodCallMutator,get,remove,2,0.0022809485,wrapChildren.<mask>(0),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.<mask>(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
934,Node.java,wrap,Node wrap(String html),313,318,10396,10398,MethodCallMutator,get,column,4,1.3338798E-4,wrapChildren.<mask>(0),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.<mask>(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
935,Node.java,wrap,Node wrap(String html),313,318,10383,10394,IdentifierMutator-Variable,wrapChildren,children,0,0.90039253,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode =<mask>.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
936,Node.java,wrap,Node wrap(String html),313,318,10383,10394,IdentifierMutator-Variable,wrapChildren,nodes,1,0.022031834,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode =<mask>.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
937,Node.java,wrap,Node wrap(String html),313,318,10383,10394,IdentifierMutator-Variable,wrapChildren,Children,2,0.014026353,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode =<mask>.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
938,Node.java,wrap,Node wrap(String html),313,318,10383,10394,IdentifierMutator-Variable,wrapChildren,list,3,0.008495179,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode =<mask>.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
939,Node.java,wrap,Node wrap(String html),313,318,10383,10394,IdentifierMutator-Variable,wrapChildren,Children,4,0.0049721454,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode =<mask>.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
940,Node.java,wrap,Node wrap(String html),313,318,10400,10400,IdentifierMutator-Literal,0,1,1,0.009561773,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(<mask>);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
941,Node.java,wrap,Node wrap(String html),313,318,10400,10400,IdentifierMutator-Literal,0,2,2,9.0712565E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(<mask>);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
942,Node.java,wrap,Node wrap(String html),313,318,10400,10400,IdentifierMutator-Literal,0,context,3,8.6942577E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(<mask>);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
943,Node.java,wrap,Node wrap(String html),313,318,10400,10400,IdentifierMutator-Literal,0,i,4,8.031631E-4,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(<mask>);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
944,Node.java,wrap,Node wrap(String html),313,319,10432,10435,BinaryOperatorMutator,||,&&,2,0.09774545,(wrapNode == null) <mask> (!(wrapNode instanceof org.jsoup.nodes.Element)),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null<mask>!(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
945,Node.java,wrap,Node wrap(String html),313,319,10432,10435,BinaryOperatorMutator,||,|,3,0.031365152,(wrapNode == null) <mask> (!(wrapNode instanceof org.jsoup.nodes.Element)),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null<mask>!(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
946,Node.java,wrap,Node wrap(String html),313,319,10432,10435,BinaryOperatorMutator,||,?,4,0.008501408,(wrapNode == null) <mask> (!(wrapNode instanceof org.jsoup.nodes.Element)),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null<mask>!(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
947,Node.java,wrap,Node wrap(String html),313,319,10424,10427,BinaryOperatorMutator,==,=,2,0.0029580307,wrapNode <mask> null,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode<mask>null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
948,Node.java,wrap,Node wrap(String html),313,319,10424,10427,BinaryOperatorMutator,==,!=,3,7.088003E-4,wrapNode <mask> null,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode<mask>null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
949,Node.java,wrap,Node wrap(String html),313,319,10424,10427,BinaryOperatorMutator,==,===,4,6.4315804E-4,wrapNode <mask> null,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode<mask>null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
950,Node.java,wrap,Node wrap(String html),313,319,10416,10423,IdentifierMutator-Variable,wrapNode,wrap,0,0.24619141,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (<mask> == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
951,Node.java,wrap,Node wrap(String html),313,319,10416,10423,IdentifierMutator-Variable,wrapNode,node,1,0.17439812,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (<mask> == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
952,Node.java,wrap,Node wrap(String html),313,319,10416,10423,IdentifierMutator-Variable,wrapNode,context,2,0.14701265,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (<mask> == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
953,Node.java,wrap,Node wrap(String html),313,319,10416,10423,IdentifierMutator-Variable,wrapNode,html,3,0.11128022,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (<mask> == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
954,Node.java,wrap,Node wrap(String html),313,319,10416,10423,IdentifierMutator-Variable,wrapNode,wrapper,4,0.047717553,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (<mask> == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
955,Node.java,wrap,Node wrap(String html),313,319,10428,10431,IdentifierMutator-Literal,null,this,2,9.6823016E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode ==<mask> || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
956,Node.java,wrap,Node wrap(String html),313,319,10428,10431,IdentifierMutator-Literal,null,NULL,3,6.7111876E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode ==<mask> || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
957,Node.java,wrap,Node wrap(String html),313,319,10428,10431,IdentifierMutator-Literal,null,nil,4,5.7397643E-5,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode ==<mask> || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
958,Node.java,wrap,Node wrap(String html),313,319,10436,10436,UnaryOperatorMutator,!,//,1,0.0010051178,<mask>(wrapNode instanceof org.jsoup.nodes.Element),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null ||<mask>(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
959,Node.java,wrap,Node wrap(String html),313,319,10436,10436,UnaryOperatorMutator,!,not,2,2.3260746E-4,<mask>(wrapNode instanceof org.jsoup.nodes.Element),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null ||<mask>(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
960,Node.java,wrap,Node wrap(String html),313,319,10436,10436,UnaryOperatorMutator,!,!!,4,1.0662462E-4,<mask>(wrapNode instanceof org.jsoup.nodes.Element),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null ||<mask>(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
961,Node.java,wrap,Node wrap(String html),313,319,10446,10457,BinaryOperatorMutator,instanceof,of,0,0.87773836,wrapNode <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode<mask>Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
962,Node.java,wrap,Node wrap(String html),313,319,10446,10457,BinaryOperatorMutator,instanceof,.,1,0.03991021,wrapNode <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode<mask>Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
963,Node.java,wrap,Node wrap(String html),313,319,10446,10457,BinaryOperatorMutator,instanceof,is,2,0.02011243,wrapNode <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode<mask>Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
964,Node.java,wrap,Node wrap(String html),313,319,10446,10457,BinaryOperatorMutator,instanceof,==,3,0.0064333417,wrapNode <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode<mask>Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
965,Node.java,wrap,Node wrap(String html),313,319,10446,10457,BinaryOperatorMutator,instanceof,==,4,0.0056659696,wrapNode <mask> org.jsoup.nodes.Element,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode<mask>Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
966,Node.java,wrap,Node wrap(String html),313,319,10438,10445,IdentifierMutator-Variable,wrapNode,context,0,0.74850076,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(<mask> instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
967,Node.java,wrap,Node wrap(String html),313,319,10438,10445,IdentifierMutator-Variable,wrapNode,wrap,1,0.06806418,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(<mask> instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
968,Node.java,wrap,Node wrap(String html),313,319,10438,10445,IdentifierMutator-Variable,wrapNode,ctx,2,0.033771228,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(<mask> instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
969,Node.java,wrap,Node wrap(String html),313,319,10438,10445,IdentifierMutator-Variable,wrapNode,node,3,0.02497645,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(<mask> instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
970,Node.java,wrap,Node wrap(String html),313,319,10438,10445,IdentifierMutator-Variable,wrapNode,wrapper,4,0.012913398,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(<mask> instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
971,Node.java,wrap,Node wrap(String html),313,319,10458,10464,TypeReferenceMutator,org.jsoup.nodes.Element,Element,0,0.9829354,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof<mask>)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
972,Node.java,wrap,Node wrap(String html),313,319,10458,10464,TypeReferenceMutator,org.jsoup.nodes.Element,Node,1,0.013532051,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof<mask>)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
973,Node.java,wrap,Node wrap(String html),313,319,10458,10464,TypeReferenceMutator,org.jsoup.nodes.Element,Document,2,5.2187894E-4,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof<mask>)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
974,Node.java,wrap,Node wrap(String html),313,319,10458,10464,TypeReferenceMutator,org.jsoup.nodes.Element,Tag,3,1.8590517E-4,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof<mask>)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
975,Node.java,wrap,Node wrap(String html),313,319,10458,10464,TypeReferenceMutator,org.jsoup.nodes.Element,String,4,1.7175374E-4,org.jsoup.nodes<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof<mask>)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
976,Node.java,wrap,Node wrap(String html),313,320,10517,10520,IdentifierMutator-Literal,null,this,1,0.3784761,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return<mask>;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
977,Node.java,wrap,Node wrap(String html),313,320,10517,10520,IdentifierMutator-Literal,null,root,2,0.044870175,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return<mask>;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
978,Node.java,wrap,Node wrap(String html),313,320,10517,10520,IdentifierMutator-Literal,null,node,3,0.006855807,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return<mask>;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
979,Node.java,wrap,Node wrap(String html),313,320,10517,10520,IdentifierMutator-Literal,null,parent,4,0.0065952404,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return<mask>;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
980,Node.java,wrap,Node wrap(String html),313,322,10547,10564,IdentifierMutator-Variable,((org.jsoup.nodes.Element)(wrapNode)),this,0,0.20619078,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap =<mask>;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
981,Node.java,wrap,Node wrap(String html),313,322,10547,10564,IdentifierMutator-Variable,((org.jsoup.nodes.Element)(wrapNode)),html,1,0.19532178,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap =<mask>;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
982,Node.java,wrap,Node wrap(String html),313,322,10547,10564,IdentifierMutator-Variable,((org.jsoup.nodes.Element)(wrapNode)),context,2,0.1756166,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap =<mask>;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
983,Node.java,wrap,Node wrap(String html),313,322,10547,10564,IdentifierMutator-Variable,((org.jsoup.nodes.Element)(wrapNode)),null,3,0.09465271,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap =<mask>;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
984,Node.java,wrap,Node wrap(String html),313,322,10547,10564,IdentifierMutator-Variable,((org.jsoup.nodes.Element)(wrapNode)),root,4,0.079462856,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap =<mask>;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
985,Node.java,wrap,Node wrap(String html),313,323,10593,10604,MethodCallMutator,getDeepChild,deepest,0,0.32886177,<mask>(wrap),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest =<mask>(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
986,Node.java,wrap,Node wrap(String html),313,323,10593,10604,MethodCallMutator,getDeepChild,wrap,1,0.06733878,<mask>(wrap),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest =<mask>(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
987,Node.java,wrap,Node wrap(String html),313,323,10593,10604,MethodCallMutator,getDeepChild,closest,2,0.06438681,<mask>(wrap),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest =<mask>(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
988,Node.java,wrap,Node wrap(String html),313,323,10593,10604,MethodCallMutator,getDeepChild,parent,3,0.043956716,<mask>(wrap),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest =<mask>(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
989,Node.java,wrap,Node wrap(String html),313,323,10593,10604,MethodCallMutator,getDeepChild,nest,4,0.036989752,<mask>(wrap),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest =<mask>(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
990,Node.java,wrap,Node wrap(String html),313,323,10606,10609,IdentifierMutator-Variable,wrap,html,1,0.021535706,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(<mask>);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
991,Node.java,wrap,Node wrap(String html),313,323,10606,10609,IdentifierMutator-Variable,wrap,wrapper,2,0.017041313,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(<mask>);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
992,Node.java,wrap,Node wrap(String html),313,323,10606,10609,IdentifierMutator-Variable,wrap,tag,3,0.0016232696,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(<mask>);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
993,Node.java,wrap,Node wrap(String html),313,323,10606,10609,IdentifierMutator-Variable,wrap,tree,4,0.0013897861,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(<mask>);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
994,Node.java,wrap,Node wrap(String html),313,324,10632,10643,MethodCallMutator,replaceChild,replace,0,0.85233045,"parentNode.<mask>(this, wrap)","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.<mask>(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
995,Node.java,wrap,Node wrap(String html),313,324,10632,10643,MethodCallMutator,replaceChild,insert,1,0.042054236,"parentNode.<mask>(this, wrap)","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.<mask>(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
996,Node.java,wrap,Node wrap(String html),313,324,10632,10643,MethodCallMutator,replaceChild,append,2,0.019261584,"parentNode.<mask>(this, wrap)","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.<mask>(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
997,Node.java,wrap,Node wrap(String html),313,324,10632,10643,MethodCallMutator,replaceChild,add,3,0.013430015,"parentNode.<mask>(this, wrap)","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.<mask>(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
998,Node.java,wrap,Node wrap(String html),313,324,10632,10643,MethodCallMutator,replaceChild,after,4,0.01188681,"parentNode.<mask>(this, wrap)","Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.<mask>(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
999,Node.java,wrap,Node wrap(String html),313,324,10621,10630,IdentifierMutator-Variable,parentNode,deepest,0,0.9722186,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1000,Node.java,wrap,Node wrap(String html),313,324,10621,10630,IdentifierMutator-Variable,parentNode,parent,1,0.004787255,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1001,Node.java,wrap,Node wrap(String html),313,324,10621,10630,IdentifierMutator-Variable,parentNode,root,2,0.0028572704,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1002,Node.java,wrap,Node wrap(String html),313,324,10621,10630,IdentifierMutator-Variable,parentNode,last,3,0.0015741651,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1003,Node.java,wrap,Node wrap(String html),313,324,10621,10630,IdentifierMutator-Variable,parentNode,deeper,4,0.0015627998,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1004,Node.java,wrap,Node wrap(String html),313,324,10621,10630,FieldReferenceMutator,parentNode,deepest,0,0.9722186,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1005,Node.java,wrap,Node wrap(String html),313,324,10621,10630,FieldReferenceMutator,parentNode,parent,1,0.004787255,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1006,Node.java,wrap,Node wrap(String html),313,324,10621,10630,FieldReferenceMutator,parentNode,root,2,0.0028572704,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1007,Node.java,wrap,Node wrap(String html),313,324,10621,10630,FieldReferenceMutator,parentNode,last,3,0.0015741651,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1008,Node.java,wrap,Node wrap(String html),313,324,10621,10630,FieldReferenceMutator,parentNode,deeper,4,0.0015627998,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);<mask>.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1009,Node.java,wrap,Node wrap(String html),313,324,10645,10648,IdentifierMutator-ThisAccess,this,0,0,0.58036256,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(<mask>, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1010,Node.java,wrap,Node wrap(String html),313,324,10645,10648,IdentifierMutator-ThisAccess,this,1,2,0.03343207,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(<mask>, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1011,Node.java,wrap,Node wrap(String html),313,324,10645,10648,IdentifierMutator-ThisAccess,this,child,3,0.01811195,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(<mask>, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1012,Node.java,wrap,Node wrap(String html),313,324,10645,10648,IdentifierMutator-ThisAccess,this,i,4,0.01486207,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(<mask>, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1013,Node.java,wrap,Node wrap(String html),313,324,10651,10654,IdentifierMutator-Variable,wrap,deepest,0,0.9507732,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this,<mask>);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1014,Node.java,wrap,Node wrap(String html),313,324,10651,10654,IdentifierMutator-Variable,wrap,deeper,1,0.01487019,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this,<mask>);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1015,Node.java,wrap,Node wrap(String html),313,324,10651,10654,IdentifierMutator-Variable,wrap,nested,3,0.004311415,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this,<mask>);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1016,Node.java,wrap,Node wrap(String html),313,324,10651,10654,IdentifierMutator-Variable,wrap,root,4,0.0019875534,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this,<mask>);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1017,Node.java,wrap,Node wrap(String html),313,325,10674,10684,MethodCallMutator,addChildren,remove,0,0.45509806,deepest.<mask>(this),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.<mask>(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1018,Node.java,wrap,Node wrap(String html),313,325,10674,10684,MethodCallMutator,addChildren,append,1,0.16103537,deepest.<mask>(this),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.<mask>(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1019,Node.java,wrap,Node wrap(String html),313,325,10674,10684,MethodCallMutator,addChildren,add,2,0.0780301,deepest.<mask>(this),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.<mask>(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1020,Node.java,wrap,Node wrap(String html),313,325,10674,10684,MethodCallMutator,addChildren,close,3,0.037282977,deepest.<mask>(this),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.<mask>(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1021,Node.java,wrap,Node wrap(String html),313,325,10674,10684,MethodCallMutator,addChildren,push,4,0.02618846,deepest.<mask>(this),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.<mask>(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1022,Node.java,wrap,Node wrap(String html),313,325,10666,10672,IdentifierMutator-Variable,deepest,deeper,1,0.006154471,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);<mask>.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1023,Node.java,wrap,Node wrap(String html),313,325,10666,10672,IdentifierMutator-Variable,deepest,nested,2,0.0024317193,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);<mask>.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1024,Node.java,wrap,Node wrap(String html),313,325,10666,10672,IdentifierMutator-Variable,deepest,parent,3,0.0019972262,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);<mask>.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1025,Node.java,wrap,Node wrap(String html),313,325,10666,10672,IdentifierMutator-Variable,deepest,root,4,0.0013401787,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);<mask>.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1026,Node.java,wrap,Node wrap(String html),313,325,10686,10689,IdentifierMutator-ThisAccess,this,wrap,0,0.8792707,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(<mask>);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1027,Node.java,wrap,Node wrap(String html),313,325,10686,10689,IdentifierMutator-ThisAccess,this,wrapper,2,0.011439636,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(<mask>);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1028,Node.java,wrap,Node wrap(String html),313,325,10686,10689,IdentifierMutator-ThisAccess,this,tree,3,0.009657423,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(<mask>);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1029,Node.java,wrap,Node wrap(String html),313,325,10686,10689,IdentifierMutator-ThisAccess,this,child,4,0.0082835145,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(<mask>);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1030,Node.java,wrap,Node wrap(String html),313,328,10812,10814,BinaryOperatorMutator,>,==,2,0.1715788,wrapChildren.size() <mask> 0,"(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size()<mask>0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1031,Node.java,wrap,Node wrap(String html),313,328,10812,10814,BinaryOperatorMutator,>,!=,3,0.011345116,wrapChildren.size() <mask> 0,"(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size()<mask>0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1032,Node.java,wrap,Node wrap(String html),313,328,10812,10814,BinaryOperatorMutator,>,==,4,0.0054380293,wrapChildren.size() <mask> 0,"(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size()<mask>0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1033,Node.java,wrap,Node wrap(String html),313,328,10806,10809,MethodCallMutator,size,count,1,7.8739115E-4,wrapChildren.<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.<mask>() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1034,Node.java,wrap,Node wrap(String html),313,328,10806,10809,MethodCallMutator,size,length,2,4.8194634E-4,wrapChildren.<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.<mask>() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1035,Node.java,wrap,Node wrap(String html),313,328,10806,10809,MethodCallMutator,size,position,4,3.548468E-4,wrapChildren.<mask>(),"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.<mask>() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1036,Node.java,wrap,Node wrap(String html),313,328,10793,10804,IdentifierMutator-Variable,wrapChildren,children,0,0.33518094,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (<mask>.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1037,Node.java,wrap,Node wrap(String html),313,328,10793,10804,IdentifierMutator-Variable,wrapChildren,wrap,1,0.3224,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (<mask>.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1038,Node.java,wrap,Node wrap(String html),313,328,10793,10804,IdentifierMutator-Variable,wrapChildren,wrapper,2,0.083776936,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (<mask>.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1039,Node.java,wrap,Node wrap(String html),313,328,10793,10804,IdentifierMutator-Variable,wrapChildren,raw,3,0.022166524,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (<mask>.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1040,Node.java,wrap,Node wrap(String html),313,328,10793,10804,IdentifierMutator-Variable,wrapChildren,stack,4,0.018197741,<mask>,"Node wrap(String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (<mask>.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1041,Node.java,wrap,Node wrap(String html),313,328,10815,10815,IdentifierMutator-Literal,0,1,1,0.1573457,<mask>,"String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() ><mask>) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1042,Node.java,wrap,Node wrap(String html),313,328,10815,10815,IdentifierMutator-Literal,0,2,2,0.008731342,<mask>,"String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() ><mask>) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1043,Node.java,wrap,Node wrap(String html),313,328,10815,10815,IdentifierMutator-Literal,0,3,3,0.0016845588,<mask>,"String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() ><mask>) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1044,Node.java,wrap,Node wrap(String html),313,328,10815,10815,IdentifierMutator-Literal,0,4,4,0.0010625909,<mask>,"String html) {
        Validate.notEmpty(html);

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() ><mask>) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1045,Node.java,wrap,Node wrap(String html),313,329,10845,10845,IdentifierMutator-Literal,0,1,1,0.008001938,<mask>,"

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i =<mask>; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1046,Node.java,wrap,Node wrap(String html),313,329,10845,10845,IdentifierMutator-Literal,0,2,3,1.444543E-4,<mask>,"

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i =<mask>; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1047,Node.java,wrap,Node wrap(String html),313,329,10845,10845,IdentifierMutator-Literal,0,1,4,5.7766818E-5,<mask>,"

        Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i =<mask>; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1048,Node.java,wrap,Node wrap(String html),313,329,10849,10851,BinaryOperatorMutator,<,++,2,0.0011491645,i <mask> wrapChildren.size(),"      Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i<mask>wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1049,Node.java,wrap,Node wrap(String html),313,329,10849,10851,BinaryOperatorMutator,<,<=,3,5.9738866E-4,i <mask> wrapChildren.size(),"      Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i<mask>wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1050,Node.java,wrap,Node wrap(String html),313,329,10849,10851,BinaryOperatorMutator,<,.<,4,5.562616E-4,i <mask> wrapChildren.size(),"      Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i<mask>wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1051,Node.java,wrap,Node wrap(String html),313,329,10848,10848,IdentifierMutator-Variable,i,I,2,9.5074654E-5,<mask>,"       Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0;<mask> < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1052,Node.java,wrap,Node wrap(String html),313,329,10848,10848,IdentifierMutator-Variable,i,I,3,4.3297867E-5,<mask>,"       Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0;<mask> < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1053,Node.java,wrap,Node wrap(String html),313,329,10848,10848,IdentifierMutator-Variable,i,0,4,3.870085E-5,<mask>,"       Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0;<mask> < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1054,Node.java,wrap,Node wrap(String html),313,329,10865,10868,MethodCallMutator,size,length,1,1.2353809E-4,wrapChildren.<mask>(),"  Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.<mask>(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1055,Node.java,wrap,Node wrap(String html),313,329,10865,10868,MethodCallMutator,size,position,2,3.405885E-5,wrapChildren.<mask>(),"  Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.<mask>(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1056,Node.java,wrap,Node wrap(String html),313,329,10865,10868,MethodCallMutator,size,count,4,2.2377786E-5,wrapChildren.<mask>(),"  Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.<mask>(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1057,Node.java,wrap,Node wrap(String html),313,329,10852,10863,IdentifierMutator-Variable,wrapChildren,children,0,0.56282014,<mask>,"     Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i <<mask>.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1058,Node.java,wrap,Node wrap(String html),313,329,10852,10863,IdentifierMutator-Variable,wrapChildren,wrap,1,0.24298553,<mask>,"     Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i <<mask>.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1059,Node.java,wrap,Node wrap(String html),313,329,10852,10863,IdentifierMutator-Variable,wrapChildren,children,2,0.027326802,<mask>,"     Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i <<mask>.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1060,Node.java,wrap,Node wrap(String html),313,329,10852,10863,IdentifierMutator-Variable,wrapChildren,child,3,0.019918077,<mask>,"     Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i <<mask>.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1061,Node.java,wrap,Node wrap(String html),313,329,10852,10863,IdentifierMutator-Variable,wrapChildren,this,4,0.012537052,<mask>,"     Element context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i <<mask>.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1062,Node.java,wrap,Node wrap(String html),313,329,10874,10875,UnaryOperatorMutator,++,++),2,0.0033174872,i<mask>," = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i<mask>) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1063,Node.java,wrap,Node wrap(String html),313,329,10874,10875,UnaryOperatorMutator,++,++;,3,3.808859E-4,i<mask>," = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i<mask>) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1064,Node.java,wrap,Node wrap(String html),313,329,10874,10875,UnaryOperatorMutator,++,--,4,3.7565947E-4,i<mask>," = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i<mask>) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1065,Node.java,wrap,Node wrap(String html),313,329,10873,10873,IdentifierMutator-Variable,i,I,2,9.008257E-5,<mask>," context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size();<mask>++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1066,Node.java,wrap,Node wrap(String html),313,329,10873,10873,IdentifierMutator-Variable,i,I,3,7.102168E-5,<mask>," context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size();<mask>++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1067,Node.java,wrap,Node wrap(String html),313,329,10873,10873,IdentifierMutator-Variable,i,,4,6.865143E-5,<mask>," context = parent() instanceof Element ? (Element) parent() : null;
        List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size();<mask>++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1068,Node.java,wrap,Node wrap(String html),313,330,10926,10928,MethodCallMutator,get,item,1,0.035016004,wrapChildren.<mask>(i),"<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.<mask>(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1069,Node.java,wrap,Node wrap(String html),313,330,10926,10928,MethodCallMutator,get,remove,2,0.0035583216,wrapChildren.<mask>(i),"<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.<mask>(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1070,Node.java,wrap,Node wrap(String html),313,330,10926,10928,MethodCallMutator,get,atom,3,0.001108158,wrapChildren.<mask>(i),"<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.<mask>(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1071,Node.java,wrap,Node wrap(String html),313,330,10926,10928,MethodCallMutator,get,slice,4,4.7963503E-4,wrapChildren.<mask>(i),"<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.<mask>(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1072,Node.java,wrap,Node wrap(String html),313,330,10913,10924,IdentifierMutator-Variable,wrapChildren,children,0,0.77129096,<mask>,"   List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder =<mask>.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1073,Node.java,wrap,Node wrap(String html),313,330,10913,10924,IdentifierMutator-Variable,wrapChildren,remainder,1,0.037834693,<mask>,"   List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder =<mask>.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1074,Node.java,wrap,Node wrap(String html),313,330,10913,10924,IdentifierMutator-Variable,wrapChildren,nodes,2,0.035739206,<mask>,"   List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder =<mask>.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1075,Node.java,wrap,Node wrap(String html),313,330,10913,10924,IdentifierMutator-Variable,wrapChildren,Children,3,0.011645635,<mask>,"   List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder =<mask>.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1076,Node.java,wrap,Node wrap(String html),313,330,10913,10924,IdentifierMutator-Variable,wrapChildren,stack,4,0.0058917664,<mask>,"   List<Node> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder =<mask>.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1077,Node.java,wrap,Node wrap(String html),313,330,10930,10930,IdentifierMutator-Variable,i,0,1,5.807332E-4,<mask>,"> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(<mask>);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1078,Node.java,wrap,Node wrap(String html),313,330,10930,10930,IdentifierMutator-Variable,i,1,3,6.749326E-5,<mask>,"> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(<mask>);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1079,Node.java,wrap,Node wrap(String html),313,330,10930,10930,IdentifierMutator-Variable,i,I,4,5.81165E-5,<mask>,"> wrapChildren = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(<mask>);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1080,Node.java,wrap,Node wrap(String html),313,331,10971,10981,MethodCallMutator,removeChild,remove,0,0.8169131,remainder.parentNode.<mask>(remainder),"     Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.<mask>(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1081,Node.java,wrap,Node wrap(String html),313,331,10971,10981,MethodCallMutator,removeChild,add,1,0.06191436,remainder.parentNode.<mask>(remainder),"     Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.<mask>(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1082,Node.java,wrap,Node wrap(String html),313,331,10971,10981,MethodCallMutator,removeChild,append,2,0.04315029,remainder.parentNode.<mask>(remainder),"     Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.<mask>(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1083,Node.java,wrap,Node wrap(String html),313,331,10971,10981,MethodCallMutator,removeChild,after,3,0.023615925,remainder.parentNode.<mask>(remainder),"     Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.<mask>(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1084,Node.java,wrap,Node wrap(String html),313,331,10971,10981,MethodCallMutator,removeChild,push,4,0.009708089,remainder.parentNode.<mask>(remainder),"     Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.<mask>(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1085,Node.java,wrap,Node wrap(String html),313,331,10950,10969,IdentifierMutator-Variable,remainder.parentNode,wrap,0,0.84577835,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1086,Node.java,wrap,Node wrap(String html),313,331,10950,10969,IdentifierMutator-Variable,remainder.parentNode,wrapper,1,0.062295277,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1087,Node.java,wrap,Node wrap(String html),313,331,10950,10969,IdentifierMutator-Variable,remainder.parentNode,wrap,2,0.021759419,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1088,Node.java,wrap,Node wrap(String html),313,331,10950,10969,IdentifierMutator-Variable,remainder.parentNode,root,3,0.008129443,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1089,Node.java,wrap,Node wrap(String html),313,331,10950,10969,IdentifierMutator-Variable,remainder.parentNode,wrapping,4,0.0074462355,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1090,Node.java,wrap,Node wrap(String html),313,331,10950,10958,IdentifierMutator-Variable,remainder,wrapper,1,9.6696295E-4,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1091,Node.java,wrap,Node wrap(String html),313,331,10950,10958,IdentifierMutator-Variable,remainder,this,2,7.8649225E-4,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1092,Node.java,wrap,Node wrap(String html),313,331,10950,10958,IdentifierMutator-Variable,remainder,child,3,5.984733E-4,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1093,Node.java,wrap,Node wrap(String html),313,331,10950,10958,IdentifierMutator-Variable,remainder,inner,4,4.015619E-4,<mask>,"Children = Parser.parseFragment(html, context, baseUri());
        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);<mask>.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1094,Node.java,wrap,Node wrap(String html),313,331,10960,10969,FieldReferenceMutator,parentNode,parent,0,0.9317349,remainder.<mask>,"        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1095,Node.java,wrap,Node wrap(String html),313,331,10960,10969,FieldReferenceMutator,parentNode,next,1,0.01320042,remainder.<mask>,"        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1096,Node.java,wrap,Node wrap(String html),313,331,10960,10969,FieldReferenceMutator,parentNode,prev,2,0.009837395,remainder.<mask>,"        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1097,Node.java,wrap,Node wrap(String html),313,331,10960,10969,FieldReferenceMutator,parentNode,Parent,3,0.008118253,remainder.<mask>,"        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1098,Node.java,wrap,Node wrap(String html),313,331,10960,10969,FieldReferenceMutator,parentNode,node,4,0.007610003,remainder.<mask>,"        Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.<mask>.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1099,Node.java,wrap,Node wrap(String html),313,331,10983,10991,IdentifierMutator-Variable,remainder,inner,0,0.3069324,<mask>,"  Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(<mask>);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1100,Node.java,wrap,Node wrap(String html),313,331,10983,10991,IdentifierMutator-Variable,remainder,this,1,0.26582298,<mask>,"  Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(<mask>);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1101,Node.java,wrap,Node wrap(String html),313,331,10983,10991,IdentifierMutator-Variable,remainder,wrapper,2,0.1506641,<mask>,"  Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(<mask>);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1102,Node.java,wrap,Node wrap(String html),313,331,10983,10991,IdentifierMutator-Variable,remainder,wrap,3,0.058900055,<mask>,"  Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(<mask>);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1103,Node.java,wrap,Node wrap(String html),313,331,10983,10991,IdentifierMutator-Variable,remainder,self,4,0.04048694,<mask>,"  Node wrapNode = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(<mask>);
                wrap.appendChild(remainder);
            }
        }
        return this;
    }"
1104,Node.java,wrap,Node wrap(String html),313,332,11016,11026,MethodCallMutator,appendChild,add,0,0.31793723,wrap.<mask>(remainder),"wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.<mask>(remainder);
            }
        }
        return this;
    }"
1105,Node.java,wrap,Node wrap(String html),313,332,11016,11026,MethodCallMutator,appendChild,remove,1,0.3018857,wrap.<mask>(remainder),"wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.<mask>(remainder);
            }
        }
        return this;
    }"
1106,Node.java,wrap,Node wrap(String html),313,332,11016,11026,MethodCallMutator,appendChild,append,2,0.26279813,wrap.<mask>(remainder),"wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.<mask>(remainder);
            }
        }
        return this;
    }"
1107,Node.java,wrap,Node wrap(String html),313,332,11016,11026,MethodCallMutator,appendChild,push,3,0.032499347,wrap.<mask>(remainder),"wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.<mask>(remainder);
            }
        }
        return this;
    }"
1108,Node.java,wrap,Node wrap(String html),313,332,11016,11026,MethodCallMutator,appendChild,after,4,0.01895598,wrap.<mask>(remainder),"wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.<mask>(remainder);
            }
        }
        return this;
    }"
1109,Node.java,wrap,Node wrap(String html),313,332,11011,11014,IdentifierMutator-Variable,wrap,this,0,0.36039674,<mask>," = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);<mask>.appendChild(remainder);
            }
        }
        return this;
    }"
1110,Node.java,wrap,Node wrap(String html),313,332,11011,11014,IdentifierMutator-Variable,wrap,root,2,0.06767819,<mask>," = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);<mask>.appendChild(remainder);
            }
        }
        return this;
    }"
1111,Node.java,wrap,Node wrap(String html),313,332,11011,11014,IdentifierMutator-Variable,wrap,wrapper,3,0.05968673,<mask>," = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);<mask>.appendChild(remainder);
            }
        }
        return this;
    }"
1112,Node.java,wrap,Node wrap(String html),313,332,11011,11014,IdentifierMutator-Variable,wrap,parent,4,0.04435795,<mask>," = wrapChildren.get(0);
        if (wrapNode == null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);<mask>.appendChild(remainder);
            }
        }
        return this;
    }"
1113,Node.java,wrap,Node wrap(String html),313,332,11028,11036,IdentifierMutator-Variable,remainder,inner,1,0.33850747,<mask>," null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(<mask>);
            }
        }
        return this;
    }"
1114,Node.java,wrap,Node wrap(String html),313,332,11028,11036,IdentifierMutator-Variable,remainder,this,2,0.026526093,<mask>," null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(<mask>);
            }
        }
        return this;
    }"
1115,Node.java,wrap,Node wrap(String html),313,332,11028,11036,IdentifierMutator-Variable,remainder,child,3,0.024585463,<mask>," null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(<mask>);
            }
        }
        return this;
    }"
1116,Node.java,wrap,Node wrap(String html),313,332,11028,11036,IdentifierMutator-Variable,remainder,result,4,0.015019738,<mask>," null || !(wrapNode instanceof Element)) // nothing to wrap with; noop
            return null;

        Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(<mask>);
            }
        }
        return this;
    }"
1117,Node.java,wrap,Node wrap(String html),313,335,11079,11082,IdentifierMutator-ThisAccess,this,wrap,0,0.7514129,<mask>,"       Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return<mask>;
    }"
1118,Node.java,wrap,Node wrap(String html),313,335,11079,11082,IdentifierMutator-ThisAccess,this,wrapper,1,0.040226083,<mask>,"       Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return<mask>;
    }"
1119,Node.java,wrap,Node wrap(String html),313,335,11079,11082,IdentifierMutator-ThisAccess,this,root,3,0.024634285,<mask>,"       Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return<mask>;
    }"
1120,Node.java,wrap,Node wrap(String html),313,335,11079,11082,IdentifierMutator-ThisAccess,this,true,4,0.020430235,<mask>,"       Element wrap = (Element) wrapNode;
        Element deepest = getDeepChild(wrap);
        parentNode.replaceChild(this, wrap);
        deepest.addChildren(this);

        // remainder (unbalanced wrap, like <div></div><p></p> -- The <p> is remainder
        if (wrapChildren.size() > 0) {
            for (int i = 0; i < wrapChildren.size(); i++) {
                Node remainder = wrapChildren.get(i);
                remainder.parentNode.removeChild(remainder);
                wrap.appendChild(remainder);
            }
        }
        return<mask>;
    }"
1121,Node.java,unwrap,Node unwrap(),351,352,11813,11819,MethodCallMutator,notNull,Null,0,0.17284718,Validate.<mask>(parentNode),"Node unwrap() {
        Validate.<mask>(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1122,Node.java,unwrap,Node unwrap(),351,352,11813,11819,MethodCallMutator,notNull,ok,1,0.11739106,Validate.<mask>(parentNode),"Node unwrap() {
        Validate.<mask>(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1123,Node.java,unwrap,Node unwrap(),351,352,11813,11819,MethodCallMutator,notNull,null,2,0.111079305,Validate.<mask>(parentNode),"Node unwrap() {
        Validate.<mask>(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1124,Node.java,unwrap,Node unwrap(),351,352,11813,11819,MethodCallMutator,notNull,validate,3,0.08808054,Validate.<mask>(parentNode),"Node unwrap() {
        Validate.<mask>(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1125,Node.java,unwrap,Node unwrap(),351,352,11813,11819,MethodCallMutator,notNull,check,4,0.04665866,Validate.<mask>(parentNode),"Node unwrap() {
        Validate.<mask>(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1126,Node.java,unwrap,Node unwrap(),351,352,11821,11830,IdentifierMutator-Variable,parentNode,this,0,0.67263293,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1127,Node.java,unwrap,Node unwrap(),351,352,11821,11830,IdentifierMutator-Variable,parentNode,parent,1,0.12025924,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1128,Node.java,unwrap,Node unwrap(),351,352,11821,11830,IdentifierMutator-Variable,parentNode,index,2,0.099966906,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1129,Node.java,unwrap,Node unwrap(),351,352,11821,11830,IdentifierMutator-Variable,parentNode,child,3,0.014397423,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1130,Node.java,unwrap,Node unwrap(),351,352,11821,11830,IdentifierMutator-Variable,parentNode,node,4,0.014195965,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1131,Node.java,unwrap,Node unwrap(),351,352,11821,11830,FieldReferenceMutator,parentNode,this,0,0.67263293,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1132,Node.java,unwrap,Node unwrap(),351,352,11821,11830,FieldReferenceMutator,parentNode,parent,1,0.12025924,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1133,Node.java,unwrap,Node unwrap(),351,352,11821,11830,FieldReferenceMutator,parentNode,index,2,0.099966906,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1134,Node.java,unwrap,Node unwrap(),351,352,11821,11830,FieldReferenceMutator,parentNode,child,3,0.014397423,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1135,Node.java,unwrap,Node unwrap(),351,352,11821,11830,FieldReferenceMutator,parentNode,node,4,0.014195965,<mask>,"Node unwrap() {
        Validate.notNull(<mask>);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1136,Node.java,unwrap,Node unwrap(),351,354,11855,11866,IdentifierMutator-Variable,siblingIndex,0,0,0.90550065,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1137,Node.java,unwrap,Node unwrap(),351,354,11855,11866,IdentifierMutator-Variable,siblingIndex,1,1,0.07607847,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1138,Node.java,unwrap,Node unwrap(),351,354,11855,11866,IdentifierMutator-Variable,siblingIndex,2,2,0.003217814,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1139,Node.java,unwrap,Node unwrap(),351,354,11855,11866,IdentifierMutator-Variable,siblingIndex,this,3,0.001671183,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1140,Node.java,unwrap,Node unwrap(),351,354,11855,11866,IdentifierMutator-Variable,siblingIndex,index,4,0.0016516407,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1141,Node.java,unwrap,Node unwrap(),351,354,11855,11866,FieldReferenceMutator,siblingIndex,0,0,0.90550065,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1142,Node.java,unwrap,Node unwrap(),351,354,11855,11866,FieldReferenceMutator,siblingIndex,1,1,0.07607847,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1143,Node.java,unwrap,Node unwrap(),351,354,11855,11866,FieldReferenceMutator,siblingIndex,2,2,0.003217814,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1144,Node.java,unwrap,Node unwrap(),351,354,11855,11866,FieldReferenceMutator,siblingIndex,this,3,0.001671183,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1145,Node.java,unwrap,Node unwrap(),351,354,11855,11866,FieldReferenceMutator,siblingIndex,index,4,0.0016516407,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index =<mask>;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1146,Node.java,unwrap,Node unwrap(),351,355,11895,11942,IdentifierMutator-Conditional,(childNodes.size()>0)?childNodes.get(0):null,this,0,0.88539916,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1147,Node.java,unwrap,Node unwrap(),351,355,11895,11942,IdentifierMutator-Conditional,(childNodes.size()>0)?childNodes.get(0):null,null,1,0.08656229,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1148,Node.java,unwrap,Node unwrap(),351,355,11895,11942,IdentifierMutator-Conditional,(childNodes.size()>0)?childNodes.get(0):null,node,2,0.0055680345,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1149,Node.java,unwrap,Node unwrap(),351,355,11895,11942,IdentifierMutator-Conditional,(childNodes.size()>0)?childNodes.get(0):null,parent,3,0.004684402,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1150,Node.java,unwrap,Node unwrap(),351,355,11895,11942,IdentifierMutator-Conditional,(childNodes.size()>0)?childNodes.get(0):null,root,4,0.003366951,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1151,Node.java,unwrap,Node unwrap(),351,355,11912,11914,BinaryOperatorMutator,>,==,2,0.032730877,childNodes.size() <mask> 0,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size()<mask>0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1152,Node.java,unwrap,Node unwrap(),351,355,11912,11914,BinaryOperatorMutator,>,!=,3,0.013019839,childNodes.size() <mask> 0,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size()<mask>0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1153,Node.java,unwrap,Node unwrap(),351,355,11912,11914,BinaryOperatorMutator,>,>=,4,0.003105256,childNodes.size() <mask> 0,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size()<mask>0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1154,Node.java,unwrap,Node unwrap(),351,355,11906,11909,MethodCallMutator,size,length,2,3.3694968E-4,childNodes.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.<mask>() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1155,Node.java,unwrap,Node unwrap(),351,355,11906,11909,MethodCallMutator,size,count,3,5.301951E-5,childNodes.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.<mask>() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1156,Node.java,unwrap,Node unwrap(),351,355,11906,11909,MethodCallMutator,size,position,4,2.8512552E-5,childNodes.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.<mask>() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1157,Node.java,unwrap,Node unwrap(),351,355,11895,11904,IdentifierMutator-Variable,childNodes,this,0,0.6064946,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1158,Node.java,unwrap,Node unwrap(),351,355,11895,11904,IdentifierMutator-Variable,childNodes,children,1,0.26592842,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1159,Node.java,unwrap,Node unwrap(),351,355,11895,11904,IdentifierMutator-Variable,childNodes,child,2,0.026393283,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1160,Node.java,unwrap,Node unwrap(),351,355,11895,11904,IdentifierMutator-Variable,childNodes,siblings,3,0.019373411,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1161,Node.java,unwrap,Node unwrap(),351,355,11895,11904,IdentifierMutator-Variable,childNodes,nodes,4,0.01367462,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1162,Node.java,unwrap,Node unwrap(),351,355,11895,11904,FieldReferenceMutator,childNodes,this,0,0.6064946,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1163,Node.java,unwrap,Node unwrap(),351,355,11895,11904,FieldReferenceMutator,childNodes,children,1,0.26592842,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1164,Node.java,unwrap,Node unwrap(),351,355,11895,11904,FieldReferenceMutator,childNodes,child,2,0.026393283,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1165,Node.java,unwrap,Node unwrap(),351,355,11895,11904,FieldReferenceMutator,childNodes,siblings,3,0.019373411,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1166,Node.java,unwrap,Node unwrap(),351,355,11895,11904,FieldReferenceMutator,childNodes,nodes,4,0.01367462,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild =<mask>.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1167,Node.java,unwrap,Node unwrap(),351,355,11915,11915,IdentifierMutator-Literal,0,index,1,0.021958936,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() ><mask> ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1168,Node.java,unwrap,Node unwrap(),351,355,11915,11915,IdentifierMutator-Literal,0,1,2,0.005702397,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() ><mask> ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1169,Node.java,unwrap,Node unwrap(),351,355,11915,11915,IdentifierMutator-Literal,0,zero,4,4.0301823E-4,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() ><mask> ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1170,Node.java,unwrap,Node unwrap(),351,355,11930,11932,MethodCallMutator,get,item,1,0.021334007,childNodes.<mask>(0),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.<mask>(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1171,Node.java,unwrap,Node unwrap(),351,355,11930,11932,MethodCallMutator,get,remove,2,0.005938585,childNodes.<mask>(0),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.<mask>(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1172,Node.java,unwrap,Node unwrap(),351,355,11930,11932,MethodCallMutator,get,atom,3,0.0015358976,childNodes.<mask>(0),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.<mask>(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1173,Node.java,unwrap,Node unwrap(),351,355,11930,11932,MethodCallMutator,get,slice,4,4.4452056E-4,childNodes.<mask>(0),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.<mask>(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1174,Node.java,unwrap,Node unwrap(),351,355,11919,11928,IdentifierMutator-Variable,childNodes,children,0,0.56749225,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1175,Node.java,unwrap,Node unwrap(),351,355,11919,11928,IdentifierMutator-Variable,childNodes,nodes,1,0.18337847,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1176,Node.java,unwrap,Node unwrap(),351,355,11919,11928,IdentifierMutator-Variable,childNodes,this,2,0.14173877,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1177,Node.java,unwrap,Node unwrap(),351,355,11919,11928,IdentifierMutator-Variable,childNodes,siblings,3,0.024917942,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1178,Node.java,unwrap,Node unwrap(),351,355,11919,11928,IdentifierMutator-Variable,childNodes,node,4,0.009456702,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1179,Node.java,unwrap,Node unwrap(),351,355,11919,11928,FieldReferenceMutator,childNodes,children,0,0.56749225,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1180,Node.java,unwrap,Node unwrap(),351,355,11919,11928,FieldReferenceMutator,childNodes,nodes,1,0.18337847,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1181,Node.java,unwrap,Node unwrap(),351,355,11919,11928,FieldReferenceMutator,childNodes,this,2,0.14173877,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1182,Node.java,unwrap,Node unwrap(),351,355,11919,11928,FieldReferenceMutator,childNodes,siblings,3,0.024917942,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1183,Node.java,unwrap,Node unwrap(),351,355,11919,11928,FieldReferenceMutator,childNodes,node,4,0.009456702,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ?<mask>.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1184,Node.java,unwrap,Node unwrap(),351,355,11934,11934,IdentifierMutator-Literal,0,index,1,0.13383637,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(<mask>) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1185,Node.java,unwrap,Node unwrap(),351,355,11934,11934,IdentifierMutator-Literal,0,1,2,0.0016529217,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(<mask>) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1186,Node.java,unwrap,Node unwrap(),351,355,11934,11934,IdentifierMutator-Literal,0,Index,3,4.2948066E-4,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(<mask>) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1187,Node.java,unwrap,Node unwrap(),351,355,11939,11942,IdentifierMutator-Literal,null,this,1,0.10705857,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) :<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1188,Node.java,unwrap,Node unwrap(),351,355,11939,11942,IdentifierMutator-Literal,null,root,2,0.0043027373,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) :<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1189,Node.java,unwrap,Node unwrap(),351,355,11939,11942,IdentifierMutator-Literal,null,undefined,3,0.003920292,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) :<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1190,Node.java,unwrap,Node unwrap(),351,355,11939,11942,IdentifierMutator-Literal,null,parent,4,0.0034750814,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) :<mask>;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1191,Node.java,unwrap,Node unwrap(),351,356,11964,11974,MethodCallMutator,addChildren,set,0,0.31536034,"parentNode.<mask>(index, this.childNodesAsArray())","Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.<mask>(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1192,Node.java,unwrap,Node unwrap(),351,356,11964,11974,MethodCallMutator,addChildren,add,1,0.2768037,"parentNode.<mask>(index, this.childNodesAsArray())","Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.<mask>(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1193,Node.java,unwrap,Node unwrap(),351,356,11964,11974,MethodCallMutator,addChildren,insert,2,0.13830705,"parentNode.<mask>(index, this.childNodesAsArray())","Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.<mask>(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1194,Node.java,unwrap,Node unwrap(),351,356,11964,11974,MethodCallMutator,addChildren,replace,3,0.037828933,"parentNode.<mask>(index, this.childNodesAsArray())","Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.<mask>(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1195,Node.java,unwrap,Node unwrap(),351,356,11964,11974,MethodCallMutator,addChildren,put,4,0.035779595,"parentNode.<mask>(index, this.childNodesAsArray())","Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.<mask>(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1196,Node.java,unwrap,Node unwrap(),351,356,11953,11962,IdentifierMutator-Variable,parentNode,this,0,0.36734083,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1197,Node.java,unwrap,Node unwrap(),351,356,11953,11962,IdentifierMutator-Variable,parentNode,node,1,0.16097319,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1198,Node.java,unwrap,Node unwrap(),351,356,11953,11962,IdentifierMutator-Variable,parentNode,parent,2,0.15926327,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1199,Node.java,unwrap,Node unwrap(),351,356,11953,11962,IdentifierMutator-Variable,parentNode,child,3,0.034597334,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1200,Node.java,unwrap,Node unwrap(),351,356,11953,11962,IdentifierMutator-Variable,parentNode,root,4,0.028764129,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1201,Node.java,unwrap,Node unwrap(),351,356,11953,11962,FieldReferenceMutator,parentNode,this,0,0.36734083,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1202,Node.java,unwrap,Node unwrap(),351,356,11953,11962,FieldReferenceMutator,parentNode,node,1,0.16097319,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1203,Node.java,unwrap,Node unwrap(),351,356,11953,11962,FieldReferenceMutator,parentNode,parent,2,0.15926327,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1204,Node.java,unwrap,Node unwrap(),351,356,11953,11962,FieldReferenceMutator,parentNode,child,3,0.034597334,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1205,Node.java,unwrap,Node unwrap(),351,356,11953,11962,FieldReferenceMutator,parentNode,root,4,0.028764129,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;<mask>.addChildren(index, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1206,Node.java,unwrap,Node unwrap(),351,356,11976,11980,IdentifierMutator-Variable,index,0,1,0.007958984,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(<mask>, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1207,Node.java,unwrap,Node unwrap(),351,356,11976,11980,IdentifierMutator-Variable,index,Index,2,0.0038411226,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(<mask>, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1208,Node.java,unwrap,Node unwrap(),351,356,11976,11980,IdentifierMutator-Variable,index,1,3,0.0028424081,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(<mask>, this.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1209,Node.java,unwrap,Node unwrap(),351,356,11988,12004,MethodCallMutator,childNodesAsArray,remove,0,0.45117158,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.<mask>());
        this.remove();

        return firstChild;
    }"
1210,Node.java,unwrap,Node unwrap(),351,356,11988,12004,MethodCallMutator,childNodesAsArray,children,1,0.14803557,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.<mask>());
        this.remove();

        return firstChild;
    }"
1211,Node.java,unwrap,Node unwrap(),351,356,11988,12004,MethodCallMutator,childNodesAsArray,clone,2,0.14444645,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.<mask>());
        this.remove();

        return firstChild;
    }"
1212,Node.java,unwrap,Node unwrap(),351,356,11988,12004,MethodCallMutator,childNodesAsArray,get,3,0.02741011,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.<mask>());
        this.remove();

        return firstChild;
    }"
1213,Node.java,unwrap,Node unwrap(),351,356,11988,12004,MethodCallMutator,childNodesAsArray,node,4,0.026081381,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.<mask>());
        this.remove();

        return firstChild;
    }"
1214,Node.java,unwrap,Node unwrap(),351,356,11983,11986,IdentifierMutator-ThisAccess,this,node,1,0.024492808,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index,<mask>.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1215,Node.java,unwrap,Node unwrap(),351,356,11983,11986,IdentifierMutator-ThisAccess,this,child,2,0.017187575,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index,<mask>.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1216,Node.java,unwrap,Node unwrap(),351,356,11983,11986,IdentifierMutator-ThisAccess,this,sibling,4,0.004778556,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index,<mask>.childNodesAsArray());
        this.remove();

        return firstChild;
    }"
1217,Node.java,unwrap,Node unwrap(),351,357,12023,12028,MethodCallMutator,remove,reset,1,0.12677388,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.<mask>();

        return firstChild;
    }"
1218,Node.java,unwrap,Node unwrap(),351,357,12023,12028,MethodCallMutator,remove,clear,2,0.083450295,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.<mask>();

        return firstChild;
    }"
1219,Node.java,unwrap,Node unwrap(),351,357,12023,12028,MethodCallMutator,remove,clean,3,0.044619616,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.<mask>();

        return firstChild;
    }"
1220,Node.java,unwrap,Node unwrap(),351,357,12023,12028,MethodCallMutator,remove,close,4,0.038241252,this.<mask>(),"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.<mask>();

        return firstChild;
    }"
1221,Node.java,unwrap,Node unwrap(),351,357,12018,12021,IdentifierMutator-ThisAccess,this,it,0,0.26913446,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());<mask>.remove();

        return firstChild;
    }"
1222,Node.java,unwrap,Node unwrap(),351,357,12018,12021,IdentifierMutator-ThisAccess,this,iterator,2,0.0770368,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());<mask>.remove();

        return firstChild;
    }"
1223,Node.java,unwrap,Node unwrap(),351,357,12018,12021,IdentifierMutator-ThisAccess,this,parent,3,0.05945935,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());<mask>.remove();

        return firstChild;
    }"
1224,Node.java,unwrap,Node unwrap(),351,357,12018,12021,IdentifierMutator-ThisAccess,this,node,4,0.02653188,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());<mask>.remove();

        return firstChild;
    }"
1225,Node.java,unwrap,Node unwrap(),351,359,12049,12058,IdentifierMutator-Variable,firstChild,this,0,0.8978746,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return<mask>;
    }"
1226,Node.java,unwrap,Node unwrap(),351,359,12049,12058,IdentifierMutator-Variable,firstChild,node,1,0.03083571,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return<mask>;
    }"
1227,Node.java,unwrap,Node unwrap(),351,359,12049,12058,IdentifierMutator-Variable,firstChild,null,2,0.025922528,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return<mask>;
    }"
1228,Node.java,unwrap,Node unwrap(),351,359,12049,12058,IdentifierMutator-Variable,firstChild,parent,3,0.010955393,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return<mask>;
    }"
1229,Node.java,unwrap,Node unwrap(),351,359,12049,12058,IdentifierMutator-Variable,firstChild,child,4,0.01006086,<mask>,"Node unwrap() {
        Validate.notNull(parentNode);

        int index = siblingIndex;
        Node firstChild = childNodes.size() > 0 ? childNodes.get(0) : null;
        parentNode.addChildren(index, this.childNodesAsArray());
        this.remove();

        return<mask>;
    }"
1230,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12151,12158,MethodCallMutator,children,Children,1,5.8114453E-4,el.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.<mask>();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1231,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12151,12158,MethodCallMutator,children,parents,2,3.5956156E-4,el.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.<mask>();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1232,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12151,12158,MethodCallMutator,children,child,3,3.53761E-4,el.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.<mask>();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1233,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12151,12158,MethodCallMutator,children,get,4,3.502075E-4,el.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.<mask>();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1234,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12148,12149,IdentifierMutator-Variable,el,element,1,0.002191489,<mask>,"Element getDeepChild(Element el) {
        List<Element> children =<mask>.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1235,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12148,12149,IdentifierMutator-Variable,el,this,2,5.926776E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children =<mask>.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1236,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12148,12149,IdentifierMutator-Variable,el,parent,3,3.625558E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children =<mask>.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1237,Node.java,getDeepChild,Element getDeepChild(Element el),362,363,12148,12149,IdentifierMutator-Variable,el,child,4,3.123969E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children =<mask>.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1238,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12190,12192,BinaryOperatorMutator,>,==,2,0.07886006,children.size() <mask> 0,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size()<mask>0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1239,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12190,12192,BinaryOperatorMutator,>,!=,3,0.00666165,children.size() <mask> 0,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size()<mask>0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1240,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12190,12192,BinaryOperatorMutator,>,=,4,0.0014738324,children.size() <mask> 0,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size()<mask>0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1241,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12184,12187,MethodCallMutator,size,length,1,0.0010550314,children.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.<mask>() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1242,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12184,12187,MethodCallMutator,size,count,3,1.1585612E-4,children.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.<mask>() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1243,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12184,12187,MethodCallMutator,size,position,4,8.623106E-5,children.<mask>(),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.<mask>() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1244,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12175,12182,IdentifierMutator-Variable,children,child,1,0.0014642698,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (<mask>.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1245,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12175,12182,IdentifierMutator-Variable,children,Children,2,3.99832E-5,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (<mask>.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1246,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12175,12182,IdentifierMutator-Variable,children,parent,4,5.153829E-6,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (<mask>.size() > 0)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1247,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12193,12193,IdentifierMutator-Literal,0,1,2,0.0026082746,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() ><mask>)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1248,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12193,12193,IdentifierMutator-Literal,0,zero,3,1.1897814E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() ><mask>)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1249,Node.java,getDeepChild,Element getDeepChild(Element el),362,364,12193,12193,IdentifierMutator-Literal,0,2,4,1.7461249E-5,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() ><mask>)
            return getDeepChild(children.get(0));
        else
            return el;
    }"
1250,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12215,12226,MethodCallMutator,getDeepChild,get,0,0.26310262,<mask>(children.get(0)),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return<mask>(children.get(0));
        else
            return el;
    }"
1251,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12215,12226,MethodCallMutator,getDeepChild,wrap,1,0.12569791,<mask>(children.get(0)),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return<mask>(children.get(0));
        else
            return el;
    }"
1252,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12215,12226,MethodCallMutator,getDeepChild,clone,2,0.061136127,<mask>(children.get(0)),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return<mask>(children.get(0));
        else
            return el;
    }"
1253,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12215,12226,MethodCallMutator,getDeepChild,copy,3,0.052960753,<mask>(children.get(0)),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return<mask>(children.get(0));
        else
            return el;
    }"
1254,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12215,12226,MethodCallMutator,getDeepChild,find,4,0.04294348,<mask>(children.get(0)),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return<mask>(children.get(0));
        else
            return el;
    }"
1255,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12237,12239,MethodCallMutator,get,item,1,0.11186736,children.<mask>(0),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.<mask>(0));
        else
            return el;
    }"
1256,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12237,12239,MethodCallMutator,get,remove,2,0.0016146258,children.<mask>(0),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.<mask>(0));
        else
            return el;
    }"
1257,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12237,12239,MethodCallMutator,get,column,3,4.945471E-4,children.<mask>(0),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.<mask>(0));
        else
            return el;
    }"
1258,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12237,12239,MethodCallMutator,get,atom,4,4.9329794E-4,children.<mask>(0),"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.<mask>(0));
        else
            return el;
    }"
1259,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12228,12235,IdentifierMutator-Variable,children,child,1,8.2807883E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(<mask>.get(0));
        else
            return el;
    }"
1260,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12228,12235,IdentifierMutator-Variable,children,Children,3,2.020719E-5,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(<mask>.get(0));
        else
            return el;
    }"
1261,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12228,12235,IdentifierMutator-Variable,children,parent,4,4.3904884E-6,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(<mask>.get(0));
        else
            return el;
    }"
1262,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12241,12241,IdentifierMutator-Literal,0,1,2,4.1202607E-4,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(<mask>));
        else
            return el;
    }"
1263,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12241,12241,IdentifierMutator-Literal,0,zero,3,7.277035E-5,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(<mask>));
        else
            return el;
    }"
1264,Node.java,getDeepChild,Element getDeepChild(Element el),362,365,12241,12241,IdentifierMutator-Literal,0,index,4,2.0142374E-5,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(<mask>));
        else
            return el;
    }"
1265,Node.java,getDeepChild,Element getDeepChild(Element el),362,367,12278,12279,IdentifierMutator-Variable,el,null,1,0.22082816,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return<mask>;
    }"
1266,Node.java,getDeepChild,Element getDeepChild(Element el),362,367,12278,12279,IdentifierMutator-Variable,el,child,2,0.005951084,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return<mask>;
    }"
1267,Node.java,getDeepChild,Element getDeepChild(Element el),362,367,12278,12279,IdentifierMutator-Variable,el,element,3,0.0059021823,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return<mask>;
    }"
1268,Node.java,getDeepChild,Element getDeepChild(Element el),362,367,12278,12279,IdentifierMutator-Variable,el,root,4,0.0043929867,<mask>,"Element getDeepChild(Element el) {
        List<Element> children = el.children();
        if (children.size() > 0)
            return getDeepChild(children.get(0));
        else
            return<mask>;
    }"
1269,Node.java,replaceWith,void replaceWith(Node in),374,375,12493,12499,MethodCallMutator,notNull,null,0,0.41633207,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1270,Node.java,replaceWith,void replaceWith(Node in),374,375,12493,12499,MethodCallMutator,notNull,object,1,0.2543269,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1271,Node.java,replaceWith,void replaceWith(Node in),374,375,12493,12499,MethodCallMutator,notNull,node,2,0.12636189,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1272,Node.java,replaceWith,void replaceWith(Node in),374,375,12493,12499,MethodCallMutator,notNull,not,3,0.042114064,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1273,Node.java,replaceWith,void replaceWith(Node in),374,375,12493,12499,MethodCallMutator,notNull,graph,4,0.0133540565,Validate.<mask>(in),"void replaceWith(Node in) {
        Validate.<mask>(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1274,Node.java,replaceWith,void replaceWith(Node in),374,375,12501,12502,IdentifierMutator-Variable,in,this,1,0.050477542,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1275,Node.java,replaceWith,void replaceWith(Node in),374,375,12501,12502,IdentifierMutator-Variable,in,ins,2,2.2421863E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1276,Node.java,replaceWith,void replaceWith(Node in),374,375,12501,12502,IdentifierMutator-Variable,in,out,3,2.0718055E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1277,Node.java,replaceWith,void replaceWith(Node in),374,375,12501,12502,IdentifierMutator-Variable,in,parent,4,1.5737042E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(<mask>);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this, in);
    }"
1278,Node.java,replaceWith,void replaceWith(Node in),374,376,12523,12529,MethodCallMutator,notNull,null,0,0.8215706,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
1279,Node.java,replaceWith,void replaceWith(Node in),374,376,12523,12529,MethodCallMutator,notNull,node,1,0.03603016,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
1280,Node.java,replaceWith,void replaceWith(Node in),374,376,12523,12529,MethodCallMutator,notNull,object,2,0.035352077,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
1281,Node.java,replaceWith,void replaceWith(Node in),374,376,12523,12529,MethodCallMutator,notNull,graph,3,0.015336272,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
1282,Node.java,replaceWith,void replaceWith(Node in),374,376,12523,12529,MethodCallMutator,notNull,Null,4,0.008714576,Validate.<mask>(parentNode),"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.<mask>(parentNode);
        parentNode.replaceChild(this, in);
    }"
1283,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,IdentifierMutator-Variable,parentNode,this,0,0.5907477,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1284,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,IdentifierMutator-Variable,parentNode,in,1,0.26867065,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1285,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,IdentifierMutator-Variable,parentNode,parent,2,0.06868322,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1286,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,IdentifierMutator-Variable,parentNode,out,3,0.02329433,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1287,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,IdentifierMutator-Variable,parentNode,null,4,0.0061522727,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1288,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,FieldReferenceMutator,parentNode,this,0,0.5907477,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1289,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,FieldReferenceMutator,parentNode,in,1,0.26867065,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1290,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,FieldReferenceMutator,parentNode,parent,2,0.06868322,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1291,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,FieldReferenceMutator,parentNode,out,3,0.02329433,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1292,Node.java,replaceWith,void replaceWith(Node in),374,376,12531,12540,FieldReferenceMutator,parentNode,null,4,0.0061522727,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(<mask>);
        parentNode.replaceChild(this, in);
    }"
1293,Node.java,replaceWith,void replaceWith(Node in),374,377,12563,12574,MethodCallMutator,replaceChild,replace,0,0.86106193,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
1294,Node.java,replaceWith,void replaceWith(Node in),374,377,12563,12574,MethodCallMutator,replaceChild,replace,1,0.109839424,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
1295,Node.java,replaceWith,void replaceWith(Node in),374,377,12563,12574,MethodCallMutator,replaceChild,insert,2,0.0070565394,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
1296,Node.java,replaceWith,void replaceWith(Node in),374,377,12563,12574,MethodCallMutator,replaceChild,insert,3,0.0032174764,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
1297,Node.java,replaceWith,void replaceWith(Node in),374,377,12563,12574,MethodCallMutator,replaceChild,add,4,0.0016431882,"parentNode.<mask>(this, in)","void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.<mask>(this, in);
    }"
1298,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,IdentifierMutator-Variable,parentNode,parent,0,0.8167315,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1299,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,IdentifierMutator-Variable,parentNode,node,1,0.0645854,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1300,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,IdentifierMutator-Variable,parentNode,out,2,0.028392911,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1301,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,IdentifierMutator-Variable,parentNode,super,3,0.02399395,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1302,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,IdentifierMutator-Variable,parentNode,this,4,0.008477612,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1303,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,FieldReferenceMutator,parentNode,parent,0,0.8167315,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1304,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,FieldReferenceMutator,parentNode,node,1,0.0645854,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1305,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,FieldReferenceMutator,parentNode,out,2,0.028392911,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1306,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,FieldReferenceMutator,parentNode,super,3,0.02399395,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1307,Node.java,replaceWith,void replaceWith(Node in),374,377,12552,12561,FieldReferenceMutator,parentNode,this,4,0.008477612,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);<mask>.replaceChild(this, in);
    }"
1308,Node.java,replaceWith,void replaceWith(Node in),374,377,12576,12579,IdentifierMutator-ThisAccess,this,0,0,0.47081,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
1309,Node.java,replaceWith,void replaceWith(Node in),374,377,12576,12579,IdentifierMutator-ThisAccess,this,child,1,0.095121786,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
1310,Node.java,replaceWith,void replaceWith(Node in),374,377,12576,12579,IdentifierMutator-ThisAccess,this,i,3,0.0731736,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
1311,Node.java,replaceWith,void replaceWith(Node in),374,377,12576,12579,IdentifierMutator-ThisAccess,this,1,4,0.045318026,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(<mask>, in);
    }"
1312,Node.java,replaceWith,void replaceWith(Node in),374,377,12582,12583,IdentifierMutator-Variable,in,this,2,9.874783E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
1313,Node.java,replaceWith,void replaceWith(Node in),374,377,12582,12583,IdentifierMutator-Variable,in,inside,3,4.5638872E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
1314,Node.java,replaceWith,void replaceWith(Node in),374,377,12582,12583,IdentifierMutator-Variable,in,out,4,2.7903353E-4,<mask>,"void replaceWith(Node in) {
        Validate.notNull(in);
        Validate.notNull(parentNode);
        parentNode.replaceChild(this,<mask>);
    }"
1315,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12673,12676,BinaryOperatorMutator,!=,==,1,0.43626446,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1316,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12673,12676,BinaryOperatorMutator,!=,=,2,0.011576069,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1317,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12673,12676,BinaryOperatorMutator,!=,==,3,0.002900928,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1318,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12673,12676,BinaryOperatorMutator,!=,===,4,6.143476E-4,this.parentNode <mask> null,"void setParentNode(Node parentNode) {
        if (this.parentNode<mask>null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1319,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12672,IdentifierMutator-Variable,this.parentNode,this,0,0.9275973,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1320,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12672,IdentifierMutator-Variable,this.parentNode,parent,1,0.059486795,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1321,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12672,IdentifierMutator-Variable,this.parentNode,super,2,0.0016602091,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1322,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12672,IdentifierMutator-Variable,this.parentNode,node,3,0.001147848,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1323,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12672,IdentifierMutator-Variable,this.parentNode,this,4,7.7661057E-4,<mask>,"void setParentNode(Node parentNode) {
        if (<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1324,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12661,IdentifierMutator-ThisAccess,this,parent,2,2.7232607E-5,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1325,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12661,IdentifierMutator-ThisAccess,this,This,3,8.408797E-6,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1326,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12658,12661,IdentifierMutator-ThisAccess,this,super,4,5.588309E-6,<mask>,"void setParentNode(Node parentNode) {
        if (<mask>.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1327,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12663,12672,FieldReferenceMutator,parentNode,parent,0,0.98066586,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1328,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12663,12672,FieldReferenceMutator,parentNode,node,1,0.006593348,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1329,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12663,12672,FieldReferenceMutator,parentNode,root,2,0.0013379545,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1330,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12663,12672,FieldReferenceMutator,parentNode,tree,3,0.0010033794,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1331,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12663,12672,FieldReferenceMutator,parentNode,child,4,9.697367E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.<mask> != null)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1332,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12677,12680,IdentifierMutator-Literal,null,this,1,0.006230758,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1333,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12677,12680,IdentifierMutator-Literal,null,node,2,0.004320916,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1334,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12677,12680,IdentifierMutator-Literal,null,parent,3,0.0011827516,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1335,Node.java,setParentNode,void setParentNode(Node parentNode),380,381,12677,12680,IdentifierMutator-Literal,null,root,4,3.892802E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode !=<mask>)
            this.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1336,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12711,12721,MethodCallMutator,removeChild,remove,0,0.485557,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
1337,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12711,12721,MethodCallMutator,removeChild,add,1,0.11368077,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
1338,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12711,12721,MethodCallMutator,removeChild,set,2,0.04191533,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
1339,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12711,12721,MethodCallMutator,removeChild,close,3,0.034104783,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
1340,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12711,12721,MethodCallMutator,removeChild,init,4,0.03072516,this.parentNode.<mask>(this),"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.<mask>(this);
        this.parentNode = parentNode;
    }"
1341,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12709,IdentifierMutator-Variable,this.parentNode,parent,0,0.8040805,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1342,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12709,IdentifierMutator-Variable,this.parentNode,node,1,0.096045166,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1343,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12709,IdentifierMutator-Variable,this.parentNode,parent,2,0.03636713,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1344,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12709,IdentifierMutator-Variable,this.parentNode,container,3,0.00992055,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1345,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12709,IdentifierMutator-Variable,this.parentNode,Node,4,0.004818369,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1346,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12698,IdentifierMutator-ThisAccess,this,parent,2,2.6666354E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1347,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12698,IdentifierMutator-ThisAccess,this,super,3,7.826902E-6,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1348,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12695,12698,IdentifierMutator-ThisAccess,this,that,4,2.829684E-6,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)<mask>.parentNode.removeChild(this);
        this.parentNode = parentNode;
    }"
1349,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12700,12709,FieldReferenceMutator,parentNode,parent,0,0.96268034,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1350,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12700,12709,FieldReferenceMutator,parentNode,node,1,0.023117805,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1351,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12700,12709,FieldReferenceMutator,parentNode,container,2,0.0020777788,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1352,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12700,12709,FieldReferenceMutator,parentNode,tree,3,0.0010578607,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1353,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12700,12709,FieldReferenceMutator,parentNode,root,4,8.80225E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.<mask>.removeChild(this);
        this.parentNode = parentNode;
    }"
1354,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12723,12726,IdentifierMutator-ThisAccess,this,parent,1,0.0013681275,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
1355,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12723,12726,IdentifierMutator-ThisAccess,this,node,2,7.226611E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
1356,Node.java,setParentNode,void setParentNode(Node parentNode),380,382,12723,12726,IdentifierMutator-ThisAccess,this,true,3,3.5879004E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(<mask>);
        this.parentNode = parentNode;
    }"
1357,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12753,12753,AssignmentMutator,this.parentNode=parentNode,|,0,0.63684773,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
1358,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12753,12753,AssignmentMutator,this.parentNode=parentNode,*,1,0.14211403,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
1359,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12753,12753,AssignmentMutator,this.parentNode=parentNode,&,2,0.03298141,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
1360,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12753,12753,AssignmentMutator,this.parentNode=parentNode,!,3,0.029971892,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
1361,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12753,12753,AssignmentMutator,this.parentNode=parentNode,2,4,0.023421092,this.parentNode <mask>= parentNode,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode<mask>= parentNode;
    }"
1362,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12752,IdentifierMutator-Variable,this.parentNode,this,0,0.4714662,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
1363,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12752,IdentifierMutator-Variable,this.parentNode,parent,1,0.34403715,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
1364,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12752,IdentifierMutator-Variable,this.parentNode,node,2,0.08508681,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
1365,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12752,IdentifierMutator-Variable,this.parentNode,super,3,0.021890042,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
1366,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12752,IdentifierMutator-Variable,this.parentNode,root,4,0.020796709,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask> = parentNode;
    }"
1367,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12741,IdentifierMutator-ThisAccess,this,parent,2,4.6181717E-4,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
1368,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12741,IdentifierMutator-ThisAccess,this,super,3,7.430377E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
1369,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12738,12741,IdentifierMutator-ThisAccess,this,node,4,2.5979458E-5,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);<mask>.parentNode = parentNode;
    }"
1370,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12743,12752,FieldReferenceMutator,parentNode,parent,0,0.99092054,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
1371,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12743,12752,FieldReferenceMutator,parentNode,node,1,0.005611508,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
1372,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12743,12752,FieldReferenceMutator,parentNode,Parent,2,4.6887045E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
1373,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12743,12752,FieldReferenceMutator,parentNode,child,3,3.3048357E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
1374,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12743,12752,FieldReferenceMutator,parentNode,root,4,2.9942932E-4,this.<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.<mask> = parentNode;
    }"
1375,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12756,12765,IdentifierMutator-Variable,parentNode,null,0,0.96779346,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
1376,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12756,12765,IdentifierMutator-Variable,parentNode,this,1,0.010713059,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
1377,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12756,12765,IdentifierMutator-Variable,parentNode,parent,2,0.008887131,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
1378,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12756,12765,IdentifierMutator-Variable,parentNode,node,3,0.0064262445,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
1379,Node.java,setParentNode,void setParentNode(Node parentNode),380,383,12756,12765,IdentifierMutator-Variable,parentNode,undefined,4,0.0012343249,<mask>,"void setParentNode(Node parentNode) {
        if (this.parentNode != null)
            this.parentNode.removeChild(this);
        this.parentNode =<mask>;
    }"
1380,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12845,12850,MethodCallMutator,isTrue,true,0,0.48376986,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1381,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12845,12850,MethodCallMutator,isTrue,check,1,0.1985505,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1382,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12845,12850,MethodCallMutator,isTrue,condition,2,0.13202748,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1383,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12845,12850,MethodCallMutator,isTrue,not,3,0.038534842,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1384,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12845,12850,MethodCallMutator,isTrue,test,4,0.026461104,Validate.<mask>(out.parentNode == this),"void replaceChild(Node out, Node in) {
        Validate.<mask>(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1385,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12866,12869,BinaryOperatorMutator,==,=,1,0.09756931,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1386,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12866,12869,BinaryOperatorMutator,==,",",2,0.028111057,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1387,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12866,12869,BinaryOperatorMutator,==,!=,3,0.027808154,out.parentNode <mask> this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode<mask>this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1388,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12865,IdentifierMutator-Variable,out.parentNode,out,0,0.98848224,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1389,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12865,IdentifierMutator-Variable,out.parentNode,in,1,0.009148271,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1390,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12865,IdentifierMutator-Variable,out.parentNode,Out,2,0.0016447811,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1391,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12865,IdentifierMutator-Variable,out.parentNode,out,3,1.4707455E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1392,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12865,IdentifierMutator-Variable,out.parentNode,outer,4,8.727967E-5,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1393,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12854,IdentifierMutator-Variable,out,in,1,0.22871351,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1394,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12854,IdentifierMutator-Variable,out,Out,2,0.004924867,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1395,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12854,IdentifierMutator-Variable,out,this,3,9.732549E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1396,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12852,12854,IdentifierMutator-Variable,out,outer,4,1.6284791E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(<mask>.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1397,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12856,12865,FieldReferenceMutator,parentNode,parent,0,0.94882923,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1398,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12856,12865,FieldReferenceMutator,parentNode,node,1,0.037695326,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1399,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12856,12865,FieldReferenceMutator,parentNode,next,2,0.0021357709,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1400,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12856,12865,FieldReferenceMutator,parentNode,child,3,0.0020720589,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1401,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12856,12865,FieldReferenceMutator,parentNode,prev,4,9.590752E-4,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.<mask> == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1402,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12870,12873,IdentifierMutator-ThisAccess,this,null,1,0.31077552,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1403,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12870,12873,IdentifierMutator-ThisAccess,this,out,2,0.15501411,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1404,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12870,12873,IdentifierMutator-ThisAccess,this,in,3,0.02805721,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1405,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,387,12870,12873,IdentifierMutator-ThisAccess,this,parent,4,0.013088231,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode ==<mask>);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1406,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12894,12900,MethodCallMutator,notNull,null,0,0.37369275,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1407,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12894,12900,MethodCallMutator,notNull,remove,1,0.08126879,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1408,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12894,12900,MethodCallMutator,notNull,not,2,0.031258456,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1409,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12894,12900,MethodCallMutator,notNull,parent,3,0.024553115,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1410,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12894,12900,MethodCallMutator,notNull,check,4,0.024354003,Validate.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.<mask>(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1411,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12902,12903,IdentifierMutator-Variable,in,out,1,0.047298774,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1412,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12902,12903,IdentifierMutator-Variable,in,this,2,5.470114E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1413,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12902,12903,IdentifierMutator-Variable,in,ins,3,2.3828156E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1414,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,388,12902,12903,IdentifierMutator-Variable,in,In,4,2.1591835E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(<mask>);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1415,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12932,12935,BinaryOperatorMutator,!=,==,0,0.7295424,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1416,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12932,12935,BinaryOperatorMutator,!=,=,2,0.029734217,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1417,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12932,12935,BinaryOperatorMutator,!=,==,3,0.010482262,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1418,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12932,12935,BinaryOperatorMutator,!=,.,4,0.0011424244,in.parentNode <mask> null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode<mask>null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1419,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12931,IdentifierMutator-Variable,in.parentNode,in,0,0.976061,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1420,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12931,IdentifierMutator-Variable,in.parentNode,out,1,0.015697943,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1421,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12931,IdentifierMutator-Variable,in.parentNode,ins,2,0.0033076524,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1422,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12931,IdentifierMutator-Variable,in.parentNode,in,3,6.594933E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1423,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12931,IdentifierMutator-Variable,in.parentNode,parent,4,6.3103455E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1424,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12920,IdentifierMutator-Variable,in,out,1,0.0013022945,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1425,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12920,IdentifierMutator-Variable,in,ins,3,1.3826012E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1426,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12919,12920,IdentifierMutator-Variable,in,input,4,5.988801E-5,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (<mask>.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1427,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12922,12931,FieldReferenceMutator,parentNode,parent,0,0.98742163,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1428,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12922,12931,FieldReferenceMutator,parentNode,node,1,0.002022753,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1429,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12922,12931,FieldReferenceMutator,parentNode,child,2,0.0015145359,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1430,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12922,12931,FieldReferenceMutator,parentNode,next,3,0.0011728365,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1431,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12922,12931,FieldReferenceMutator,parentNode,parents,4,8.7740255E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.<mask> != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1432,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12936,12939,IdentifierMutator-Literal,null,this,1,0.1694159,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1433,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12936,12939,IdentifierMutator-Literal,null,out,2,0.025005534,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1434,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12936,12939,IdentifierMutator-Literal,null,parent,3,0.0049528503,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1435,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,389,12936,12939,IdentifierMutator-Literal,null,node,4,0.004363865,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode !=<mask>)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1436,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12968,12978,MethodCallMutator,removeChild,remove,0,0.8108765,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1437,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12968,12978,MethodCallMutator,removeChild,add,1,0.044362564,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1438,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12968,12978,MethodCallMutator,removeChild,replace,2,0.042457037,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1439,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12968,12978,MethodCallMutator,removeChild,append,3,0.015188558,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1440,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12968,12978,MethodCallMutator,removeChild,del,4,0.011940637,in.parentNode.<mask>(in),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.<mask>(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1441,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12966,IdentifierMutator-Variable,in.parentNode,out,0,0.65769523,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1442,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12966,IdentifierMutator-Variable,in.parentNode,parent,1,0.13193831,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1443,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12966,IdentifierMutator-Variable,in.parentNode,this,2,0.07894108,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1444,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12966,IdentifierMutator-Variable,in.parentNode,out,3,0.039366953,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1445,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12966,IdentifierMutator-Variable,in.parentNode,in,4,0.019961353,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1446,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12955,IdentifierMutator-Variable,in,out,2,0.005246241,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1447,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12955,IdentifierMutator-Variable,in,out,3,0.0010334481,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1448,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12954,12955,IdentifierMutator-Variable,in,ins,4,8.089896E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)<mask>.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1449,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12957,12966,FieldReferenceMutator,parentNode,parent,0,0.9899233,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1450,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12957,12966,FieldReferenceMutator,parentNode,node,1,0.0074098636,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1451,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12957,12966,FieldReferenceMutator,parentNode,next,2,8.545794E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1452,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12957,12966,FieldReferenceMutator,parentNode,Parent,3,2.3872498E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1453,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12957,12966,FieldReferenceMutator,parentNode,child,4,2.0674708E-4,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.<mask>.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1454,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12980,12981,IdentifierMutator-Variable,in,out,1,0.17001766,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1455,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12980,12981,IdentifierMutator-Variable,in,this,2,0.020152459,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1456,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12980,12981,IdentifierMutator-Variable,in,self,3,6.647702E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1457,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,390,12980,12981,IdentifierMutator-Variable,in,ins,4,5.31627E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(<mask>);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1458,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13022,13033,MethodCallMutator,siblingIndex,index,0,0.9396018,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1459,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13022,13033,MethodCallMutator,siblingIndex,position,1,0.01815929,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1460,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13022,13033,MethodCallMutator,siblingIndex,id,2,0.011959642,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1461,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13022,13033,MethodCallMutator,siblingIndex,size,3,0.0030209427,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1462,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13022,13033,MethodCallMutator,siblingIndex,number,4,0.0028574828,out.<mask>(),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.<mask>();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1463,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13018,13020,IdentifierMutator-Variable,out,in,0,0.9385301,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1464,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13018,13020,IdentifierMutator-Variable,out,in,2,0.0063968566,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1465,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13018,13020,IdentifierMutator-Variable,out,this,3,0.005877816,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1466,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,392,13018,13020,IdentifierMutator-Variable,out,ins,4,0.0034297686,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index =<mask>.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1467,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13057,13059,MethodCallMutator,set,add,1,0.16268969,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1468,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13057,13059,MethodCallMutator,set,replace,2,0.07807827,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1469,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13057,13059,MethodCallMutator,set,put,3,0.071022086,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1470,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13057,13059,MethodCallMutator,set,insert,4,0.0296076,"childNodes.<mask>(index, in)","void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.<mask>(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1471,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,IdentifierMutator-Variable,childNodes,siblings,0,0.28025597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1472,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,IdentifierMutator-Variable,childNodes,children,1,0.13037787,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1473,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,IdentifierMutator-Variable,childNodes,nodes,2,0.087280415,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1474,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,IdentifierMutator-Variable,childNodes,out,3,0.02732186,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1475,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,IdentifierMutator-Variable,childNodes,indices,4,0.026425047,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1476,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,FieldReferenceMutator,childNodes,siblings,0,0.28025597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1477,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,FieldReferenceMutator,childNodes,children,1,0.13037787,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1478,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,FieldReferenceMutator,childNodes,nodes,2,0.087280415,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1479,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,FieldReferenceMutator,childNodes,out,3,0.02732186,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1480,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13046,13055,FieldReferenceMutator,childNodes,indices,4,0.026425047,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();<mask>.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1481,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13061,13065,IdentifierMutator-Variable,index,out,1,0.042854954,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1482,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13061,13065,IdentifierMutator-Variable,index,in,2,0.0050389906,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1483,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13061,13065,IdentifierMutator-Variable,index,Index,3,0.002072001,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1484,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13061,13065,IdentifierMutator-Variable,index,0,4,0.0019758544,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(<mask>, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1485,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13068,13069,IdentifierMutator-Variable,in,out,1,0.3674969,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1486,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13068,13069,IdentifierMutator-Variable,in,this,2,0.033657786,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1487,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,393,13068,13069,IdentifierMutator-Variable,in,node,3,0.007089899,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index,<mask>);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1488,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13094,13094,AssignmentMutator,in.parentNode=this,!,0,0.5296534,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1489,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13094,13094,AssignmentMutator,in.parentNode=this,|,1,0.3166121,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1490,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13094,13094,AssignmentMutator,in.parentNode=this,||,2,0.03922767,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1491,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13094,13094,AssignmentMutator,in.parentNode=this,*,3,0.03529428,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1492,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13094,13094,AssignmentMutator,in.parentNode=this,|,4,0.00970577,in.parentNode <mask>= this,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode<mask>= this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1493,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13093,IdentifierMutator-Variable,in.parentNode,in,0,0.777726,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1494,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13093,IdentifierMutator-Variable,in.parentNode,out,1,0.15991867,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1495,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13093,IdentifierMutator-Variable,in.parentNode,in,2,0.021770403,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1496,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13093,IdentifierMutator-Variable,in.parentNode,index,3,0.0058510597,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1497,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13093,IdentifierMutator-Variable,in.parentNode,parent,4,0.0041171825,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1498,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13082,IdentifierMutator-Variable,in,out,1,0.19568098,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1499,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13082,IdentifierMutator-Variable,in,ins,3,0.0052417153,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1500,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13081,13082,IdentifierMutator-Variable,in,out,4,0.0033644699,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);<mask>.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1501,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13084,13093,FieldReferenceMutator,parentNode,parent,0,0.97630376,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1502,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13084,13093,FieldReferenceMutator,parentNode,node,1,0.009248881,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1503,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13084,13093,FieldReferenceMutator,parentNode,next,2,0.0060845907,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1504,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13084,13093,FieldReferenceMutator,parentNode,prev,3,0.00205835,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1505,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13084,13093,FieldReferenceMutator,parentNode,child,4,0.0018138079,in.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.<mask> = this;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1506,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13097,13100,IdentifierMutator-ThisAccess,this,null,0,0.6367505,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1507,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13097,13100,IdentifierMutator-ThisAccess,this,out,1,0.22499056,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1508,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13097,13100,IdentifierMutator-ThisAccess,this,parent,3,0.017192394,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1509,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,394,13097,13100,IdentifierMutator-ThisAccess,this,in,4,0.009922998,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode =<mask>;
        in.setSiblingIndex(index);
        out.parentNode = null;
    }"
1510,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13114,13128,MethodCallMutator,setSiblingIndex,remove,0,0.52576506,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
1511,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13114,13128,MethodCallMutator,setSiblingIndex,delete,1,0.22563672,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
1512,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13114,13128,MethodCallMutator,setSiblingIndex,move,2,0.027332667,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
1513,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13114,13128,MethodCallMutator,setSiblingIndex,index,3,0.020054951,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
1514,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13114,13128,MethodCallMutator,setSiblingIndex,pop,4,0.009785792,in.<mask>(index),"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.<mask>(index);
        out.parentNode = null;
    }"
1515,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13111,13112,IdentifierMutator-Variable,in,out,1,0.33924824,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
1516,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13111,13112,IdentifierMutator-Variable,in,this,3,0.02829465,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
1517,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13111,13112,IdentifierMutator-Variable,in,out,4,0.009890511,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;<mask>.setSiblingIndex(index);
        out.parentNode = null;
    }"
1518,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13130,13134,IdentifierMutator-Variable,index,0,1,0.0022028154,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
1519,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13130,13134,IdentifierMutator-Variable,index,Index,2,0.002011847,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
1520,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13130,13134,IdentifierMutator-Variable,index,in,3,6.2898884E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
1521,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,395,13130,13134,IdentifierMutator-Variable,index,out,4,5.1079993E-4,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(<mask>);
        out.parentNode = null;
    }"
1522,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13160,13160,AssignmentMutator,out.parentNode=null,|,0,0.2744085,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
1523,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13160,13160,AssignmentMutator,out.parentNode=null,&,1,0.2600427,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
1524,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13160,13160,AssignmentMutator,out.parentNode=null,!,2,0.16850221,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
1525,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13160,13160,AssignmentMutator,out.parentNode=null,||,3,0.08855054,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
1526,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13160,13160,AssignmentMutator,out.parentNode=null,*,4,0.084747955,out.parentNode <mask>= null,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode<mask>= null;
    }"
1527,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13159,IdentifierMutator-Variable,out.parentNode,in,0,0.87772435,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
1528,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13159,IdentifierMutator-Variable,out.parentNode,out,1,0.029757408,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
1529,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13159,IdentifierMutator-Variable,out.parentNode,in,2,0.017663533,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
1530,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13159,IdentifierMutator-Variable,out.parentNode,index,3,0.017126255,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
1531,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13159,IdentifierMutator-Variable,out.parentNode,this,4,0.009670108,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask> = null;
    }"
1532,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13148,IdentifierMutator-Variable,out,in,0,0.9012405,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
1533,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13148,IdentifierMutator-Variable,out,in,1,0.080757365,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
1534,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13148,IdentifierMutator-Variable,out,ins,3,0.0026551895,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
1535,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13146,13148,IdentifierMutator-Variable,out,this,4,0.0021970118,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);<mask>.parentNode = null;
    }"
1536,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13150,13159,FieldReferenceMutator,parentNode,parent,0,0.9256674,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
1537,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13150,13159,FieldReferenceMutator,parentNode,children,1,0.012803798,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
1538,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13150,13159,FieldReferenceMutator,parentNode,node,2,0.011108591,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
1539,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13150,13159,FieldReferenceMutator,parentNode,child,3,0.010256675,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
1540,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13150,13159,FieldReferenceMutator,parentNode,parents,4,0.0073473877,out.<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.<mask> = null;
    }"
1541,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13163,13166,IdentifierMutator-Literal,null,out,0,0.61812454,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
1542,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13163,13166,IdentifierMutator-Literal,null,this,1,0.13161397,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
1543,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13163,13166,IdentifierMutator-Literal,null,in,3,0.06072379,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
1544,Node.java,replaceChild,"void replaceChild(Node out, Node in)",386,396,13163,13166,IdentifierMutator-Literal,null,undefined,4,0.006630218,<mask>,"void replaceChild(Node out, Node in) {
        Validate.isTrue(out.parentNode == this);
        Validate.notNull(in);
        if (in.parentNode != null)
            in.parentNode.removeChild(in);
        
        Integer index = out.siblingIndex();
        childNodes.set(index, in);
        in.parentNode = this;
        in.setSiblingIndex(index);
        out.parentNode =<mask>;
    }"
1545,Node.java,removeChild,void removeChild(Node out),399,400,13236,13241,MethodCallMutator,isTrue,true,0,0.48096806,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1546,Node.java,removeChild,void removeChild(Node out),399,400,13236,13241,MethodCallMutator,isTrue,check,1,0.1741084,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1547,Node.java,removeChild,void removeChild(Node out),399,400,13236,13241,MethodCallMutator,isTrue,True,2,0.1242781,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1548,Node.java,removeChild,void removeChild(Node out),399,400,13236,13241,MethodCallMutator,isTrue,condition,3,0.025470495,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1549,Node.java,removeChild,void removeChild(Node out),399,400,13236,13241,MethodCallMutator,isTrue,ument,4,0.023486326,Validate.<mask>(out.parentNode == this),"void removeChild(Node out) {
        Validate.<mask>(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1550,Node.java,removeChild,void removeChild(Node out),399,400,13257,13260,BinaryOperatorMutator,==,!=,2,0.08966335,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1551,Node.java,removeChild,void removeChild(Node out),399,400,13257,13260,BinaryOperatorMutator,==,=,3,0.07564739,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1552,Node.java,removeChild,void removeChild(Node out),399,400,13257,13260,BinaryOperatorMutator,==,:,4,0.030683467,out.parentNode <mask> this,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode<mask>this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1553,Node.java,removeChild,void removeChild(Node out),399,400,13243,13256,IdentifierMutator-Variable,out.parentNode,out,0,0.9937364,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1554,Node.java,removeChild,void removeChild(Node out),399,400,13243,13256,IdentifierMutator-Variable,out.parentNode,in,1,0.0041298433,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1555,Node.java,removeChild,void removeChild(Node out),399,400,13243,13256,IdentifierMutator-Variable,out.parentNode,Out,2,0.0011463109,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1556,Node.java,removeChild,void removeChild(Node out),399,400,13243,13256,IdentifierMutator-Variable,out.parentNode,OUT,3,1.8672545E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1557,Node.java,removeChild,void removeChild(Node out),399,400,13243,13256,IdentifierMutator-Variable,out.parentNode,out,4,1.3502328E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1558,Node.java,removeChild,void removeChild(Node out),399,400,13243,13245,IdentifierMutator-Variable,out,in,1,0.003992035,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1559,Node.java,removeChild,void removeChild(Node out),399,400,13243,13245,IdentifierMutator-Variable,out,Out,2,0.0035276583,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1560,Node.java,removeChild,void removeChild(Node out),399,400,13243,13245,IdentifierMutator-Variable,out,OUT,3,2.7454665E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1561,Node.java,removeChild,void removeChild(Node out),399,400,13243,13245,IdentifierMutator-Variable,out,parent,4,1.6722597E-4,<mask>,"void removeChild(Node out) {
        Validate.isTrue(<mask>.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1562,Node.java,removeChild,void removeChild(Node out),399,400,13247,13256,FieldReferenceMutator,parentNode,parent,0,0.9629195,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1563,Node.java,removeChild,void removeChild(Node out),399,400,13247,13256,FieldReferenceMutator,parentNode,node,1,0.021025056,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1564,Node.java,removeChild,void removeChild(Node out),399,400,13247,13256,FieldReferenceMutator,parentNode,child,2,0.003573262,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1565,Node.java,removeChild,void removeChild(Node out),399,400,13247,13256,FieldReferenceMutator,parentNode,tree,3,0.0010581962,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1566,Node.java,removeChild,void removeChild(Node out),399,400,13247,13256,FieldReferenceMutator,parentNode,next,4,9.735534E-4,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.<mask> == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1567,Node.java,removeChild,void removeChild(Node out),399,400,13261,13264,IdentifierMutator-ThisAccess,this,out,0,0.33289367,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1568,Node.java,removeChild,void removeChild(Node out),399,400,13261,13264,IdentifierMutator-ThisAccess,this,null,1,0.26614508,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1569,Node.java,removeChild,void removeChild(Node out),399,400,13261,13264,IdentifierMutator-ThisAccess,this,node,3,0.06746055,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1570,Node.java,removeChild,void removeChild(Node out),399,400,13261,13264,IdentifierMutator-ThisAccess,this,parent,4,0.015050102,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode ==<mask>);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1571,Node.java,removeChild,void removeChild(Node out),399,401,13292,13303,MethodCallMutator,siblingIndex,index,0,0.9362033,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1572,Node.java,removeChild,void removeChild(Node out),399,401,13292,13303,MethodCallMutator,siblingIndex,id,1,0.011855876,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1573,Node.java,removeChild,void removeChild(Node out),399,401,13292,13303,MethodCallMutator,siblingIndex,position,2,0.010733755,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1574,Node.java,removeChild,void removeChild(Node out),399,401,13292,13303,MethodCallMutator,siblingIndex,node,3,0.0037415053,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1575,Node.java,removeChild,void removeChild(Node out),399,401,13292,13303,MethodCallMutator,siblingIndex,length,4,0.0021526597,out.<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.<mask>();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1576,Node.java,removeChild,void removeChild(Node out),399,401,13288,13290,IdentifierMutator-Variable,out,in,1,0.011404381,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1577,Node.java,removeChild,void removeChild(Node out),399,401,13288,13290,IdentifierMutator-Variable,out,this,2,0.0067368615,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1578,Node.java,removeChild,void removeChild(Node out),399,401,13288,13290,IdentifierMutator-Variable,out,parent,4,0.004444521,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index =<mask>.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1579,Node.java,removeChild,void removeChild(Node out),399,402,13327,13332,MethodCallMutator,remove,delete,1,0.06060056,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
1580,Node.java,removeChild,void removeChild(Node out),399,402,13327,13332,MethodCallMutator,remove,get,2,0.03764246,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
1581,Node.java,removeChild,void removeChild(Node out),399,402,13327,13332,MethodCallMutator,remove,pop,3,0.024116505,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
1582,Node.java,removeChild,void removeChild(Node out),399,402,13327,13332,MethodCallMutator,remove,Remove,4,0.010915536,childNodes.<mask>(index),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.<mask>(index);
        reindexChildren();
        out.parentNode = null;
    }"
1583,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,IdentifierMutator-Variable,childNodes,children,0,0.43821195,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1584,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,IdentifierMutator-Variable,childNodes,siblings,1,0.13084558,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1585,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,IdentifierMutator-Variable,childNodes,nodes,2,0.06437801,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1586,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,IdentifierMutator-Variable,childNodes,out,3,0.033792727,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1587,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,IdentifierMutator-Variable,childNodes,indices,4,0.026397359,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1588,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,FieldReferenceMutator,childNodes,children,0,0.43821195,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1589,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,FieldReferenceMutator,childNodes,siblings,1,0.13084558,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1590,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,FieldReferenceMutator,childNodes,nodes,2,0.06437801,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1591,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,FieldReferenceMutator,childNodes,out,3,0.033792727,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1592,Node.java,removeChild,void removeChild(Node out),399,402,13316,13325,FieldReferenceMutator,childNodes,indices,4,0.026397359,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();<mask>.remove(index);
        reindexChildren();
        out.parentNode = null;
    }"
1593,Node.java,removeChild,void removeChild(Node out),399,402,13334,13338,IdentifierMutator-Variable,index,out,1,0.421224,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
1594,Node.java,removeChild,void removeChild(Node out),399,402,13334,13338,IdentifierMutator-Variable,index,in,2,0.01906257,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
1595,Node.java,removeChild,void removeChild(Node out),399,402,13334,13338,IdentifierMutator-Variable,index,node,3,0.0029762478,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
1596,Node.java,removeChild,void removeChild(Node out),399,402,13334,13338,IdentifierMutator-Variable,index,parent,4,0.0015670387,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(<mask>);
        reindexChildren();
        out.parentNode = null;
    }"
1597,Node.java,removeChild,void removeChild(Node out),399,403,13350,13364,MethodCallMutator,reindexChildren,remove,0,0.2919852,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
1598,Node.java,removeChild,void removeChild(Node out),399,403,13350,13364,MethodCallMutator,reindexChildren,clear,1,0.077526584,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
1599,Node.java,removeChild,void removeChild(Node out),399,403,13350,13364,MethodCallMutator,reindexChildren,destroy,2,0.048891813,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
1600,Node.java,removeChild,void removeChild(Node out),399,403,13350,13364,MethodCallMutator,reindexChildren,disconnect,3,0.037654195,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
1601,Node.java,removeChild,void removeChild(Node out),399,403,13350,13364,MethodCallMutator,reindexChildren,dispose,4,0.03348545,<mask>(),"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);<mask>();
        out.parentNode = null;
    }"
1602,Node.java,removeChild,void removeChild(Node out),399,404,13391,13391,AssignmentMutator,out.parentNode=null,!,0,0.41415513,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
1603,Node.java,removeChild,void removeChild(Node out),399,404,13391,13391,AssignmentMutator,out.parentNode=null,&,1,0.17520517,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
1604,Node.java,removeChild,void removeChild(Node out),399,404,13391,13391,AssignmentMutator,out.parentNode=null,|,2,0.096864395,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
1605,Node.java,removeChild,void removeChild(Node out),399,404,13391,13391,AssignmentMutator,out.parentNode=null,||,3,0.054068036,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
1606,Node.java,removeChild,void removeChild(Node out),399,404,13391,13391,AssignmentMutator,out.parentNode=null,*,4,0.042148445,out.parentNode <mask>= null,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode<mask>= null;
    }"
1607,Node.java,removeChild,void removeChild(Node out),399,404,13377,13390,IdentifierMutator-Variable,out.parentNode,out,0,0.522046,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
1608,Node.java,removeChild,void removeChild(Node out),399,404,13377,13390,IdentifierMutator-Variable,out.parentNode,parent,1,0.082182765,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
1609,Node.java,removeChild,void removeChild(Node out),399,404,13377,13390,IdentifierMutator-Variable,out.parentNode,index,2,0.06398624,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
1610,Node.java,removeChild,void removeChild(Node out),399,404,13377,13390,IdentifierMutator-Variable,out.parentNode,node,3,0.050581284,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
1611,Node.java,removeChild,void removeChild(Node out),399,404,13377,13390,IdentifierMutator-Variable,out.parentNode,child,4,0.04424047,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask> = null;
    }"
1612,Node.java,removeChild,void removeChild(Node out),399,404,13377,13379,IdentifierMutator-Variable,out,in,2,0.012700409,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
1613,Node.java,removeChild,void removeChild(Node out),399,404,13377,13379,IdentifierMutator-Variable,out,this,3,0.008875282,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
1614,Node.java,removeChild,void removeChild(Node out),399,404,13377,13379,IdentifierMutator-Variable,out,parent,4,0.0071560424,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();<mask>.parentNode = null;
    }"
1615,Node.java,removeChild,void removeChild(Node out),399,404,13381,13390,FieldReferenceMutator,parentNode,parent,0,0.93378174,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
1616,Node.java,removeChild,void removeChild(Node out),399,404,13381,13390,FieldReferenceMutator,parentNode,child,1,0.0223483,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
1617,Node.java,removeChild,void removeChild(Node out),399,404,13381,13390,FieldReferenceMutator,parentNode,children,2,0.011585017,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
1618,Node.java,removeChild,void removeChild(Node out),399,404,13381,13390,FieldReferenceMutator,parentNode,node,3,0.006216063,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
1619,Node.java,removeChild,void removeChild(Node out),399,404,13381,13390,FieldReferenceMutator,parentNode,parents,4,0.0039612213,out.<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.<mask> = null;
    }"
1620,Node.java,removeChild,void removeChild(Node out),399,404,13394,13397,IdentifierMutator-Literal,null,out,1,0.12046053,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
1621,Node.java,removeChild,void removeChild(Node out),399,404,13394,13397,IdentifierMutator-Literal,null,this,2,0.069436006,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
1622,Node.java,removeChild,void removeChild(Node out),399,404,13394,13397,IdentifierMutator-Literal,null,undefined,3,0.016921276,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
1623,Node.java,removeChild,void removeChild(Node out),399,404,13394,13397,IdentifierMutator-Literal,null,parent,4,0.008119869,<mask>,"void removeChild(Node out) {
        Validate.isTrue(out.parentNode == this);
        int index = out.siblingIndex();
        childNodes.remove(index);
        reindexChildren();
        out.parentNode =<mask>;
    }"
1624,Node.java,addChildren,void addChildren(Node... children),407,409,13579,13586,IdentifierMutator-Variable,children,Children,2,7.728545E-5,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1625,Node.java,addChildren,void addChildren(Node... children),407,409,13579,13586,IdentifierMutator-Variable,children,Children,3,8.143714E-6,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1626,Node.java,addChildren,void addChildren(Node... children),407,409,13579,13586,IdentifierMutator-Variable,children,this,4,3.5037235E-6,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child:<mask>) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1627,Node.java,addChildren,void addChildren(Node... children),407,410,13603,13615,MethodCallMutator,reparentChild,remove,0,0.15995172,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1628,Node.java,addChildren,void addChildren(Node... children),407,410,13603,13615,MethodCallMutator,reparentChild,add,1,0.15783107,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1629,Node.java,addChildren,void addChildren(Node... children),407,410,13603,13615,MethodCallMutator,reparentChild,index,2,0.038642738,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1630,Node.java,addChildren,void addChildren(Node... children),407,410,13603,13615,MethodCallMutator,reparentChild,sort,3,0.036617346,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1631,Node.java,addChildren,void addChildren(Node... children),407,410,13603,13615,MethodCallMutator,reparentChild,visit,4,0.035002746,<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {<mask>(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1632,Node.java,addChildren,void addChildren(Node... children),407,410,13617,13621,IdentifierMutator-Variable,child,parent,1,4.3657166E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1633,Node.java,addChildren,void addChildren(Node... children),407,410,13617,13621,IdentifierMutator-Variable,child,Child,2,3.761574E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1634,Node.java,addChildren,void addChildren(Node... children),407,410,13617,13621,IdentifierMutator-Variable,child,children,4,1.198848E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(<mask>);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1635,Node.java,addChildren,void addChildren(Node... children),407,411,13648,13650,MethodCallMutator,add,push,1,0.037791457,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1636,Node.java,addChildren,void addChildren(Node... children),407,411,13648,13650,MethodCallMutator,add,remove,2,0.013921541,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1637,Node.java,addChildren,void addChildren(Node... children),407,411,13648,13650,MethodCallMutator,add,append,3,0.0074052047,childNodes.<mask>(child),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.<mask>(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1638,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,IdentifierMutator-Variable,childNodes,children,0,0.7690784,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1639,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,IdentifierMutator-Variable,childNodes,siblings,1,0.034082714,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1640,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,IdentifierMutator-Variable,childNodes,child,2,0.02393572,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1641,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,IdentifierMutator-Variable,childNodes,nodes,3,0.019685905,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1642,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,IdentifierMutator-Variable,childNodes,parents,4,0.012114218,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1643,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,FieldReferenceMutator,childNodes,children,0,0.7690784,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1644,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,FieldReferenceMutator,childNodes,siblings,1,0.034082714,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1645,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,FieldReferenceMutator,childNodes,child,2,0.02393572,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1646,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,FieldReferenceMutator,childNodes,nodes,3,0.019685905,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1647,Node.java,addChildren,void addChildren(Node... children),407,411,13637,13646,FieldReferenceMutator,childNodes,parents,4,0.012114218,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);<mask>.add(child);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1648,Node.java,addChildren,void addChildren(Node... children),407,411,13652,13656,IdentifierMutator-Variable,child,Child,1,1.6074731E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1649,Node.java,addChildren,void addChildren(Node... children),407,411,13652,13656,IdentifierMutator-Variable,child,parent,2,1.558376E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1650,Node.java,addChildren,void addChildren(Node... children),407,411,13652,13656,IdentifierMutator-Variable,child,children,4,4.4587792E-5,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(<mask>);
            child.setSiblingIndex(childNodes.size()-1);
        }
    }"
1651,Node.java,addChildren,void addChildren(Node... children),407,412,13678,13692,MethodCallMutator,setSiblingIndex,remove,0,0.41804132,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
1652,Node.java,addChildren,void addChildren(Node... children),407,412,13678,13692,MethodCallMutator,setSiblingIndex,delete,1,0.090151206,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
1653,Node.java,addChildren,void addChildren(Node... children),407,412,13678,13692,MethodCallMutator,setSiblingIndex,push,2,0.06935679,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
1654,Node.java,addChildren,void addChildren(Node... children),407,412,13678,13692,MethodCallMutator,setSiblingIndex,move,3,0.06643987,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
1655,Node.java,addChildren,void addChildren(Node... children),407,412,13678,13692,MethodCallMutator,setSiblingIndex,add,4,0.04201306,child.<mask>(childNodes.size() - 1),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.<mask>(childNodes.size()-1);
        }
    }"
1656,Node.java,addChildren,void addChildren(Node... children),407,412,13672,13676,IdentifierMutator-Variable,child,parent,2,0.0021912195,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
1657,Node.java,addChildren,void addChildren(Node... children),407,412,13672,13676,IdentifierMutator-Variable,child,Child,3,0.001182629,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
1658,Node.java,addChildren,void addChildren(Node... children),407,412,13672,13676,IdentifierMutator-Variable,child,this,4,7.1662245E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);<mask>.setSiblingIndex(childNodes.size()-1);
        }
    }"
1659,Node.java,addChildren,void addChildren(Node... children),407,412,13711,13711,BinaryOperatorMutator,-,+,1,0.18607832,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
1660,Node.java,addChildren,void addChildren(Node... children),407,412,13711,13711,BinaryOperatorMutator,-,)-,3,0.0023922361,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
1661,Node.java,addChildren,void addChildren(Node... children),407,412,13711,13711,BinaryOperatorMutator,-,++,4,0.0012900619,childNodes.size() <mask> 1,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()<mask>1);
        }
    }"
1662,Node.java,addChildren,void addChildren(Node... children),407,412,13705,13708,MethodCallMutator,size,length,2,1.5853705E-4,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
1663,Node.java,addChildren,void addChildren(Node... children),407,412,13705,13708,MethodCallMutator,size,count,3,4.486283E-5,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
1664,Node.java,addChildren,void addChildren(Node... children),407,412,13705,13708,MethodCallMutator,size,position,4,3.8291833E-5,childNodes.<mask>(),"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.<mask>()-1);
        }
    }"
1665,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,IdentifierMutator-Variable,childNodes,children,0,0.98609656,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1666,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,IdentifierMutator-Variable,childNodes,Children,1,0.0055059167,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1667,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,IdentifierMutator-Variable,childNodes,child,2,0.0034105212,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1668,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,IdentifierMutator-Variable,childNodes,children,3,0.0012175487,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1669,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,IdentifierMutator-Variable,childNodes,parents,4,5.916985E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1670,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,FieldReferenceMutator,childNodes,children,0,0.98609656,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1671,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,FieldReferenceMutator,childNodes,Children,1,0.0055059167,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1672,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,FieldReferenceMutator,childNodes,child,2,0.0034105212,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1673,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,FieldReferenceMutator,childNodes,children,3,0.0012175487,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1674,Node.java,addChildren,void addChildren(Node... children),407,412,13694,13703,FieldReferenceMutator,childNodes,parents,4,5.916985E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(<mask>.size()-1);
        }
    }"
1675,Node.java,addChildren,void addChildren(Node... children),407,412,13712,13712,IdentifierMutator-Literal,1,2,1,0.011725478,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
1676,Node.java,addChildren,void addChildren(Node... children),407,412,13712,13712,IdentifierMutator-Literal,1,3,3,0.0012798014,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
1677,Node.java,addChildren,void addChildren(Node... children),407,412,13712,13712,IdentifierMutator-Literal,1,0,4,4.1978416E-4,<mask>,"void addChildren(Node... children) {
        //most used. short circuit addChildren(int), which hits reindex children and array copy
        for (Node child: children) {
            reparentChild(child);
            childNodes.add(child);
            child.setSiblingIndex(childNodes.size()-<mask>);
        }
    }"
1678,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13812,13825,MethodCallMutator,noNullElements,null,0,0.18894103,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1679,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13812,13825,MethodCallMutator,noNullElements,Null,1,0.13807201,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1680,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13812,13825,MethodCallMutator,noNullElements,empty,2,0.0895351,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1681,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13812,13825,MethodCallMutator,noNullElements,check,3,0.085499465,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1682,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13812,13825,MethodCallMutator,noNullElements,array,4,0.060167342,Validate.<mask>(children),"void addChildren(int index, Node... children) {
        Validate.<mask>(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1683,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13827,13834,IdentifierMutator-Variable,children,index,1,0.06500558,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1684,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13827,13834,IdentifierMutator-Variable,children,child,2,0.018676238,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1685,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13827,13834,IdentifierMutator-Variable,children,Children,3,0.0058346777,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1686,Node.java,addChildren,"void addChildren(int index, Node... children)",416,417,13827,13834,IdentifierMutator-Variable,children,parent,4,0.0029736115,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(<mask>);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1687,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13874,13876,BinaryOperatorMutator,-,)-,2,2.1009933E-4,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1688,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13874,13876,BinaryOperatorMutator,-,_,3,2.6662063E-5,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1689,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13874,13876,BinaryOperatorMutator,-,--,4,1.3578356E-5,children.length <mask> 1,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length<mask>1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1690,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13873,IdentifierMutator-Variable,children.length,index,0,0.97861105,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1691,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13873,IdentifierMutator-Variable,children.length,size,1,0.008330582,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1692,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13873,IdentifierMutator-Variable,children.length,count,2,0.0060691116,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1693,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13873,IdentifierMutator-Variable,children.length,length,3,0.0023279786,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1694,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13873,IdentifierMutator-Variable,children.length,len,4,3.5790436E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1695,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13866,IdentifierMutator-Variable,children,child,1,0.0073052226,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1696,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13866,IdentifierMutator-Variable,children,arguments,3,2.5534522E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1697,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13859,13866,IdentifierMutator-Variable,children,parent,4,1.2907764E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i =<mask>.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1698,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13868,13873,FieldReferenceMutator,length,size,1,7.4757123E-4,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1699,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13868,13873,FieldReferenceMutator,length,count,3,2.4641928E-5,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1700,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13868,13873,FieldReferenceMutator,length,index,4,1.6917214E-5,children.<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.<mask> - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1701,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13877,13877,IdentifierMutator-Literal,1,2,1,0.004731048,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1702,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13877,13877,IdentifierMutator-Literal,1,index,2,9.624814E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1703,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13877,13877,IdentifierMutator-Literal,1,3,3,6.0631835E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length -<mask>; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1704,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13881,13884,BinaryOperatorMutator,>=,>,1,0.16030215,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1705,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13881,13884,BinaryOperatorMutator,>=,>,2,0.06425924,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1706,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13881,13884,BinaryOperatorMutator,>=,==,3,0.0031716283,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1707,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13881,13884,BinaryOperatorMutator,>=,!=,4,0.0010241788,i <mask> 0,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i<mask>0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1708,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13880,13880,IdentifierMutator-Variable,i,in,2,7.159257E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1709,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13880,13880,IdentifierMutator-Variable,i,index,3,5.4869786E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1710,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13880,13880,IdentifierMutator-Variable,i,I,4,1.4261467E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1;<mask> >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1711,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13885,13885,IdentifierMutator-Literal,0,index,1,0.13117355,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1712,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13885,13885,IdentifierMutator-Literal,0,1,2,0.0025374005,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1713,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13885,13885,IdentifierMutator-Literal,0,2,4,1.6762358E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >=<mask>; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1714,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13889,13890,UnaryOperatorMutator,--,++,2,6.424113E-5,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1715,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13889,13890,UnaryOperatorMutator,--,-=,3,2.419793E-5,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1716,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13889,13890,UnaryOperatorMutator,--,=-,4,7.2206167E-6,i<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i<mask>) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1717,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13888,13888,IdentifierMutator-Variable,i,in,2,9.959994E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1718,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13888,13888,IdentifierMutator-Variable,i,I,3,8.198025E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1719,Node.java,addChildren,"void addChildren(int index, Node... children)",416,418,13888,13888,IdentifierMutator-Variable,i,I,4,6.069881E-7,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0;<mask>--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1720,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,ArrayAccessMutator,i,index,1,2.3852347E-4,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1721,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,ArrayAccessMutator,i,0,3,6.334387E-5,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1722,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,ArrayAccessMutator,i,I,4,3.9329E-5,children[<mask>],"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1723,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13917,13924,IdentifierMutator-Variable,children,child,1,6.132517E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1724,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13917,13924,IdentifierMutator-Variable,children,content,3,4.721417E-6,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1725,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13917,13924,IdentifierMutator-Variable,children,arguments,4,4.229354E-6,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in =<mask>[i];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1726,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,IdentifierMutator-Variable,i,index,1,2.3852347E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1727,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,IdentifierMutator-Variable,i,0,3,6.334387E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1728,Node.java,addChildren,"void addChildren(int index, Node... children)",416,419,13926,13926,IdentifierMutator-Variable,i,I,4,3.9329E-5,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[<mask>];
            reparentChild(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1729,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13942,13954,MethodCallMutator,reparentChild,validate,0,0.4409971,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1730,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13942,13954,MethodCallMutator,reparentChild,assert,1,0.13105504,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1731,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13942,13954,MethodCallMutator,reparentChild,check,2,0.06938424,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1732,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13942,13954,MethodCallMutator,reparentChild,remove,3,0.022368869,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1733,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13942,13954,MethodCallMutator,reparentChild,verify,4,0.015240328,<mask>(in),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];<mask>(in);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1734,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13956,13957,IdentifierMutator-Variable,in,child,1,4.969367E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1735,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13956,13957,IdentifierMutator-Variable,in,index,2,3.5165035E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1736,Node.java,addChildren,"void addChildren(int index, Node... children)",416,420,13956,13957,IdentifierMutator-Variable,in,ins,3,2.7431725E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(<mask>);
            childNodes.add(index, in);
        }
        reindexChildren();
    }"
1737,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13984,13986,MethodCallMutator,add,set,1,0.24301124,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
1738,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13984,13986,MethodCallMutator,add,put,2,0.070402816,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
1739,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13984,13986,MethodCallMutator,add,insert,3,0.017372157,"childNodes.<mask>(index, in)","void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.<mask>(index, in);
        }
        reindexChildren();
    }"
1740,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,IdentifierMutator-Variable,childNodes,children,0,0.79926324,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1741,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,IdentifierMutator-Variable,childNodes,nodes,1,0.029903093,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1742,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,IdentifierMutator-Variable,childNodes,siblings,2,0.011600046,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1743,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,IdentifierMutator-Variable,childNodes,stack,3,0.009288102,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1744,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,IdentifierMutator-Variable,childNodes,parents,4,0.008330988,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1745,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,FieldReferenceMutator,childNodes,children,0,0.79926324,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1746,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,FieldReferenceMutator,childNodes,nodes,1,0.029903093,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1747,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,FieldReferenceMutator,childNodes,siblings,2,0.011600046,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1748,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,FieldReferenceMutator,childNodes,stack,3,0.009288102,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1749,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13973,13982,FieldReferenceMutator,childNodes,parents,4,0.008330988,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);<mask>.add(index, in);
        }
        reindexChildren();
    }"
1750,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13988,13992,IdentifierMutator-Variable,index,i,1,0.009037365,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
1751,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13988,13992,IdentifierMutator-Variable,index,Index,3,9.5268025E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
1752,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13988,13992,IdentifierMutator-Variable,index,0,4,7.450808E-4,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(<mask>, in);
        }
        reindexChildren();
    }"
1753,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13995,13996,IdentifierMutator-Variable,in,child,1,0.027441157,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
1754,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13995,13996,IdentifierMutator-Variable,in,this,3,0.005149564,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
1755,Node.java,addChildren,"void addChildren(int index, Node... children)",416,421,13995,13996,IdentifierMutator-Variable,in,out,4,0.004104846,<mask>,"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index,<mask>);
        }
        reindexChildren();
    }"
1756,Node.java,addChildren,"void addChildren(int index, Node... children)",416,423,14018,14032,MethodCallMutator,reindexChildren,clear,0,0.11594945,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
1757,Node.java,addChildren,"void addChildren(int index, Node... children)",416,423,14018,14032,MethodCallMutator,reindexChildren,notify,1,0.07121672,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
1758,Node.java,addChildren,"void addChildren(int index, Node... children)",416,423,14018,14032,MethodCallMutator,reindexChildren,remove,2,0.068730675,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
1759,Node.java,addChildren,"void addChildren(int index, Node... children)",416,423,14018,14032,MethodCallMutator,reindexChildren,close,3,0.06871507,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
1760,Node.java,addChildren,"void addChildren(int index, Node... children)",416,423,14018,14032,MethodCallMutator,reindexChildren,reset,4,0.04006013,<mask>(),"void addChildren(int index, Node... children) {
        Validate.noNullElements(children);
        for (int i = children.length - 1; i >= 0; i--) {
            Node in = children[i];
            reparentChild(in);
            childNodes.add(index, in);
        }<mask>();
    }"
1761,Node.java,reparentChild,void reparentChild(Node child),426,427,14117,14120,BinaryOperatorMutator,!=,==,0,0.77057356,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1762,Node.java,reparentChild,void reparentChild(Node child),426,427,14117,14120,BinaryOperatorMutator,!=,=,2,0.035261247,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1763,Node.java,reparentChild,void reparentChild(Node child),426,427,14117,14120,BinaryOperatorMutator,!=,==,3,0.0032792753,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1764,Node.java,reparentChild,void reparentChild(Node child),426,427,14117,14120,BinaryOperatorMutator,!=,===,4,0.0017207321,child.parentNode <mask> null,"void reparentChild(Node child) {
        if (child.parentNode<mask>null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1765,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14116,IdentifierMutator-Variable,child.parentNode,child,0,0.9584596,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1766,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14116,IdentifierMutator-Variable,child.parentNode,parent,1,0.03705338,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1767,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14116,IdentifierMutator-Variable,child.parentNode,child,2,5.5663986E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1768,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14116,IdentifierMutator-Variable,child.parentNode,children,3,3.7842864E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1769,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14116,IdentifierMutator-Variable,child.parentNode,current,4,1.74051E-4,<mask>,"void reparentChild(Node child) {
        if (<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1770,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14105,IdentifierMutator-Variable,child,parent,1,2.8793898E-4,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1771,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14105,IdentifierMutator-Variable,child,Child,3,6.7865745E-5,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1772,Node.java,reparentChild,void reparentChild(Node child),426,427,14101,14105,IdentifierMutator-Variable,child,children,4,4.1062594E-5,<mask>,"void reparentChild(Node child) {
        if (<mask>.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1773,Node.java,reparentChild,void reparentChild(Node child),426,427,14107,14116,FieldReferenceMutator,parentNode,parent,0,0.9955272,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1774,Node.java,reparentChild,void reparentChild(Node child),426,427,14107,14116,FieldReferenceMutator,parentNode,node,1,0.0013118701,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1775,Node.java,reparentChild,void reparentChild(Node child),426,427,14107,14116,FieldReferenceMutator,parentNode,Parent,2,4.1415234E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1776,Node.java,reparentChild,void reparentChild(Node child),426,427,14107,14116,FieldReferenceMutator,parentNode,id,3,2.1990096E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1777,Node.java,reparentChild,void reparentChild(Node child),426,427,14107,14116,FieldReferenceMutator,parentNode,parents,4,1.995197E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.<mask> != null)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1778,Node.java,reparentChild,void reparentChild(Node child),426,427,14121,14124,IdentifierMutator-Literal,null,this,1,0.06865001,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1779,Node.java,reparentChild,void reparentChild(Node child),426,427,14121,14124,IdentifierMutator-Literal,null,node,2,0.0032338668,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1780,Node.java,reparentChild,void reparentChild(Node child),426,427,14121,14124,IdentifierMutator-Literal,null,child,3,0.0024083678,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1781,Node.java,reparentChild,void reparentChild(Node child),426,427,14121,14124,IdentifierMutator-Literal,null,parent,4,0.0014327783,<mask>,"void reparentChild(Node child) {
        if (child.parentNode !=<mask>)
            child.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1782,Node.java,reparentChild,void reparentChild(Node child),426,428,14156,14166,MethodCallMutator,removeChild,remove,0,0.66167134,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
1783,Node.java,reparentChild,void reparentChild(Node child),426,428,14156,14166,MethodCallMutator,removeChild,add,1,0.06875305,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
1784,Node.java,reparentChild,void reparentChild(Node child),426,428,14156,14166,MethodCallMutator,removeChild,replace,2,0.060254905,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
1785,Node.java,reparentChild,void reparentChild(Node child),426,428,14156,14166,MethodCallMutator,removeChild,append,3,0.052979283,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
1786,Node.java,reparentChild,void reparentChild(Node child),426,428,14156,14166,MethodCallMutator,removeChild,close,4,0.017736023,child.parentNode.<mask>(child),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.<mask>(child);
        child.setParentNode(this);
    }"
1787,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14154,IdentifierMutator-Variable,child.parentNode,parent,0,0.68368584,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1788,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14154,IdentifierMutator-Variable,child.parentNode,this,1,0.2013947,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1789,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14154,IdentifierMutator-Variable,child.parentNode,node,2,0.039998427,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1790,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14154,IdentifierMutator-Variable,child.parentNode,parent,3,0.0174974,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1791,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14154,IdentifierMutator-Variable,child.parentNode,super,4,0.01068845,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1792,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14143,IdentifierMutator-Variable,child,parent,2,0.0019420455,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1793,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14143,IdentifierMutator-Variable,child,parent,3,0.0012669096,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1794,Node.java,reparentChild,void reparentChild(Node child),426,428,14139,14143,IdentifierMutator-Variable,child,this,4,6.3990464E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)<mask>.parentNode.removeChild(child);
        child.setParentNode(this);
    }"
1795,Node.java,reparentChild,void reparentChild(Node child),426,428,14145,14154,FieldReferenceMutator,parentNode,parent,0,0.98578644,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1796,Node.java,reparentChild,void reparentChild(Node child),426,428,14145,14154,FieldReferenceMutator,parentNode,node,1,0.010530685,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1797,Node.java,reparentChild,void reparentChild(Node child),426,428,14145,14154,FieldReferenceMutator,parentNode,Parent,2,6.451779E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1798,Node.java,reparentChild,void reparentChild(Node child),426,428,14145,14154,FieldReferenceMutator,parentNode,next,3,3.1881413E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1799,Node.java,reparentChild,void reparentChild(Node child),426,428,14145,14154,FieldReferenceMutator,parentNode,body,4,2.0775091E-4,child.<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.<mask>.removeChild(child);
        child.setParentNode(this);
    }"
1800,Node.java,reparentChild,void reparentChild(Node child),426,428,14168,14172,IdentifierMutator-Variable,child,this,1,0.0045624888,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
1801,Node.java,reparentChild,void reparentChild(Node child),426,428,14168,14172,IdentifierMutator-Variable,child,parent,2,6.126921E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
1802,Node.java,reparentChild,void reparentChild(Node child),426,428,14168,14172,IdentifierMutator-Variable,child,self,4,2.7037147E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(<mask>);
        child.setParentNode(this);
    }"
1803,Node.java,reparentChild,void reparentChild(Node child),426,429,14190,14202,MethodCallMutator,setParentNode,remove,0,0.26628438,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1804,Node.java,reparentChild,void reparentChild(Node child),426,429,14190,14202,MethodCallMutator,setParentNode,append,1,0.16835013,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1805,Node.java,reparentChild,void reparentChild(Node child),426,429,14190,14202,MethodCallMutator,setParentNode,replace,2,0.06282319,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1806,Node.java,reparentChild,void reparentChild(Node child),426,429,14190,14202,MethodCallMutator,setParentNode,add,3,0.062197953,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1807,Node.java,reparentChild,void reparentChild(Node child),426,429,14190,14202,MethodCallMutator,setParentNode,parent,4,0.04399304,child.<mask>(this),"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.<mask>(this);
    }"
1808,Node.java,reparentChild,void reparentChild(Node child),426,429,14184,14188,IdentifierMutator-Variable,child,parent,2,3.052656E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1809,Node.java,reparentChild,void reparentChild(Node child),426,429,14184,14188,IdentifierMutator-Variable,child,Child,3,2.2606326E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1810,Node.java,reparentChild,void reparentChild(Node child),426,429,14184,14188,IdentifierMutator-Variable,child,Child,4,1.9731923E-4,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);<mask>.setParentNode(this);
    }"
1811,Node.java,reparentChild,void reparentChild(Node child),426,429,14204,14207,IdentifierMutator-ThisAccess,this,null,0,0.6040242,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1812,Node.java,reparentChild,void reparentChild(Node child),426,429,14204,14207,IdentifierMutator-ThisAccess,this,parent,1,0.22996068,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1813,Node.java,reparentChild,void reparentChild(Node child),426,429,14204,14207,IdentifierMutator-ThisAccess,this,node,3,0.014474745,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1814,Node.java,reparentChild,void reparentChild(Node child),426,429,14204,14207,IdentifierMutator-ThisAccess,this,child,4,0.012074523,<mask>,"void reparentChild(Node child) {
        if (child.parentNode != null)
            child.parentNode.removeChild(child);
        child.setParentNode(<mask>);
    }"
1815,Node.java,reindexChildren,void reindexChildren(),432,433,14280,14280,IdentifierMutator-Literal,0,1,1,0.0050304527,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1816,Node.java,reindexChildren,void reindexChildren(),432,433,14280,14280,IdentifierMutator-Literal,0,1,3,1.9424655E-4,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1817,Node.java,reindexChildren,void reindexChildren(),432,433,14280,14280,IdentifierMutator-Literal,0,2,4,1.6409275E-4,<mask>,"void reindexChildren() {
        for (int i =<mask>; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1818,Node.java,reindexChildren,void reindexChildren(),432,433,14284,14286,BinaryOperatorMutator,<,++,2,0.0031557025,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1819,Node.java,reindexChildren,void reindexChildren(),432,433,14284,14286,BinaryOperatorMutator,<,.<,3,8.593593E-4,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1820,Node.java,reindexChildren,void reindexChildren(),432,433,14284,14286,BinaryOperatorMutator,<,<=,4,7.912365E-4,i <mask> childNodes.size(),"void reindexChildren() {
        for (int i = 0; i<mask>childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1821,Node.java,reindexChildren,void reindexChildren(),432,433,14283,14283,IdentifierMutator-Variable,i,I,2,5.2263997E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1822,Node.java,reindexChildren,void reindexChildren(),432,433,14283,14283,IdentifierMutator-Variable,i,I,3,2.3807654E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1823,Node.java,reindexChildren,void reindexChildren(),432,433,14283,14283,IdentifierMutator-Variable,i,0,4,1.13706155E-5,<mask>,"void reindexChildren() {
        for (int i = 0;<mask> < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1824,Node.java,reindexChildren,void reindexChildren(),432,433,14298,14301,MethodCallMutator,size,length,1,0.0027402584,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1825,Node.java,reindexChildren,void reindexChildren(),432,433,14298,14301,MethodCallMutator,size,count,3,7.070364E-5,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1826,Node.java,reindexChildren,void reindexChildren(),432,433,14298,14301,MethodCallMutator,size,rows,4,5.3366242E-5,childNodes.<mask>(),"void reindexChildren() {
        for (int i = 0; i < childNodes.<mask>(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1827,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,IdentifierMutator-Variable,childNodes,children,0,0.44247404,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1828,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,IdentifierMutator-Variable,childNodes,nodes,1,0.21455598,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1829,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,IdentifierMutator-Variable,childNodes,siblings,2,0.14188778,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1830,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,IdentifierMutator-Variable,childNodes,node,3,0.016669948,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1831,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,IdentifierMutator-Variable,childNodes,child,4,0.013674701,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1832,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,FieldReferenceMutator,childNodes,children,0,0.44247404,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1833,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,FieldReferenceMutator,childNodes,nodes,1,0.21455598,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1834,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,FieldReferenceMutator,childNodes,siblings,2,0.14188778,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1835,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,FieldReferenceMutator,childNodes,node,3,0.016669948,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1836,Node.java,reindexChildren,void reindexChildren(),432,433,14287,14296,FieldReferenceMutator,childNodes,child,4,0.013674701,<mask>,"void reindexChildren() {
        for (int i = 0; i <<mask>.size(); i++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1837,Node.java,reindexChildren,void reindexChildren(),432,433,14307,14308,UnaryOperatorMutator,++,++),2,0.0052344147,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1838,Node.java,reindexChildren,void reindexChildren(),432,433,14307,14308,UnaryOperatorMutator,++,++;,3,6.591635E-4,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1839,Node.java,reindexChildren,void reindexChildren(),432,433,14307,14308,UnaryOperatorMutator,++,--,4,1.7942673E-4,i<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i<mask>) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1840,Node.java,reindexChildren,void reindexChildren(),432,433,14306,14306,IdentifierMutator-Variable,i,I,2,8.865654E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1841,Node.java,reindexChildren,void reindexChildren(),432,433,14306,14306,IdentifierMutator-Variable,i,I,3,3.300491E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1842,Node.java,reindexChildren,void reindexChildren(),432,433,14306,14306,IdentifierMutator-Variable,i,,4,2.49413E-5,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size();<mask>++) {
            childNodes.get(i).setSiblingIndex(i);
        }
    }"
1843,Node.java,reindexChildren,void reindexChildren(),432,434,14343,14357,MethodCallMutator,setSiblingIndex,remove,0,0.6233273,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1844,Node.java,reindexChildren,void reindexChildren(),432,434,14343,14357,MethodCallMutator,setSiblingIndex,delete,1,0.07899636,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1845,Node.java,reindexChildren,void reindexChildren(),432,434,14343,14357,MethodCallMutator,setSiblingIndex,index,2,0.044604644,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1846,Node.java,reindexChildren,void reindexChildren(),432,434,14343,14357,MethodCallMutator,setSiblingIndex,add,3,0.022157516,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1847,Node.java,reindexChildren,void reindexChildren(),432,434,14343,14357,MethodCallMutator,setSiblingIndex,push,4,0.0140774865,childNodes.get(i).<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).<mask>(i);
        }
    }"
1848,Node.java,reindexChildren,void reindexChildren(),432,434,14336,14338,MethodCallMutator,get,item,1,0.065875046,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1849,Node.java,reindexChildren,void reindexChildren(),432,434,14336,14338,MethodCallMutator,get,element,2,0.0028545281,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1850,Node.java,reindexChildren,void reindexChildren(),432,434,14336,14338,MethodCallMutator,get,atom,3,0.0024720286,childNodes.<mask>(i),"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.<mask>(i).setSiblingIndex(i);
        }
    }"
1851,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,IdentifierMutator-Variable,childNodes,children,0,0.7157592,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1852,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,IdentifierMutator-Variable,childNodes,nodes,1,0.10071826,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1853,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,IdentifierMutator-Variable,childNodes,child,2,0.035208497,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1854,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,IdentifierMutator-Variable,childNodes,siblings,3,0.021306414,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1855,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,IdentifierMutator-Variable,childNodes,children,4,0.012841235,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1856,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,FieldReferenceMutator,childNodes,children,0,0.7157592,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1857,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,FieldReferenceMutator,childNodes,nodes,1,0.10071826,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1858,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,FieldReferenceMutator,childNodes,child,2,0.035208497,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1859,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,FieldReferenceMutator,childNodes,siblings,3,0.021306414,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1860,Node.java,reindexChildren,void reindexChildren(),432,434,14325,14334,FieldReferenceMutator,childNodes,children,4,0.012841235,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {<mask>.get(i).setSiblingIndex(i);
        }
    }"
1861,Node.java,reindexChildren,void reindexChildren(),432,434,14340,14340,IdentifierMutator-Variable,i,0,1,0.04208523,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1862,Node.java,reindexChildren,void reindexChildren(),432,434,14340,14340,IdentifierMutator-Variable,i,1,3,7.4050826E-4,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1863,Node.java,reindexChildren,void reindexChildren(),432,434,14340,14340,IdentifierMutator-Variable,i,j,4,5.8988825E-4,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(<mask>).setSiblingIndex(i);
        }
    }"
1864,Node.java,reindexChildren,void reindexChildren(),432,434,14359,14359,IdentifierMutator-Variable,i,index,1,0.08465901,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1865,Node.java,reindexChildren,void reindexChildren(),432,434,14359,14359,IdentifierMutator-Variable,i,0,2,0.034393284,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1866,Node.java,reindexChildren,void reindexChildren(),432,434,14359,14359,IdentifierMutator-Variable,i,1,3,0.008226286,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1867,Node.java,reindexChildren,void reindexChildren(),432,434,14359,14359,IdentifierMutator-Variable,i,x,4,0.004234545,<mask>,"void reindexChildren() {
        for (int i = 0; i < childNodes.size(); i++) {
            childNodes.get(i).setSiblingIndex(<mask>);
        }
    }"
1868,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14714,14717,BinaryOperatorMutator,==,=,2,0.04095528,parentNode <mask> null,"List<Node> siblingNodes() {
        if (parentNode<mask>null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1869,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14714,14717,BinaryOperatorMutator,==,===,3,0.0029938656,parentNode <mask> null,"List<Node> siblingNodes() {
        if (parentNode<mask>null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1870,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14714,14717,BinaryOperatorMutator,==,!=,4,0.0028436813,parentNode <mask> null,"List<Node> siblingNodes() {
        if (parentNode<mask>null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1871,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,IdentifierMutator-Variable,parentNode,parent,0,0.8354601,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1872,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,IdentifierMutator-Variable,parentNode,parents,1,0.036380794,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1873,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,IdentifierMutator-Variable,parentNode,node,2,0.029000873,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1874,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,IdentifierMutator-Variable,parentNode,this,3,0.023502741,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1875,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,IdentifierMutator-Variable,parentNode,Parent,4,0.0086369775,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1876,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,FieldReferenceMutator,parentNode,parent,0,0.8354601,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1877,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,FieldReferenceMutator,parentNode,parents,1,0.036380794,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1878,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,FieldReferenceMutator,parentNode,node,2,0.029000873,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1879,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,FieldReferenceMutator,parentNode,this,3,0.023502741,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1880,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14704,14713,FieldReferenceMutator,parentNode,Parent,4,0.0086369775,<mask>,"List<Node> siblingNodes() {
        if (<mask> == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1881,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14718,14721,IdentifierMutator-Literal,null,this,1,0.09208323,<mask>,"List<Node> siblingNodes() {
        if (parentNode ==<mask>)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1882,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14718,14721,IdentifierMutator-Literal,null,root,2,0.0019777846,<mask>,"List<Node> siblingNodes() {
        if (parentNode ==<mask>)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1883,Node.java,siblingNodes,List<Node> siblingNodes(),443,444,14718,14721,IdentifierMutator-Literal,null,node,3,9.192932E-4,<mask>,"List<Node> siblingNodes() {
        if (parentNode ==<mask>)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1884,Node.java,siblingNodes,List<Node> siblingNodes(),443,445,14755,14763,MethodCallMutator,emptyList,empty,0,0.5827034,Collections.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.<mask>();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1885,Node.java,siblingNodes,List<Node> siblingNodes(),443,445,14755,14763,MethodCallMutator,emptyList,list,1,0.14879647,Collections.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.<mask>();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1886,Node.java,siblingNodes,List<Node> siblingNodes(),443,445,14755,14763,MethodCallMutator,emptyList,List,2,0.12901354,Collections.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.<mask>();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1887,Node.java,siblingNodes,List<Node> siblingNodes(),443,445,14755,14763,MethodCallMutator,emptyList,Empty,3,0.043453567,Collections.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.<mask>();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1888,Node.java,siblingNodes,List<Node> siblingNodes(),443,445,14755,14763,MethodCallMutator,emptyList,null,4,0.031019699,Collections.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.<mask>();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1889,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14816,IdentifierMutator-Variable,parentNode.childNodes,nodes,0,0.41287658,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1890,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14816,IdentifierMutator-Variable,parentNode.childNodes,null,1,0.28996795,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1891,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14816,IdentifierMutator-Variable,parentNode.childNodes,this,2,0.055691738,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1892,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14816,IdentifierMutator-Variable,parentNode.childNodes,siblings,3,0.041224137,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1893,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14816,IdentifierMutator-Variable,parentNode.childNodes,children,4,0.037604295,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1894,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,IdentifierMutator-Variable,parentNode,parent,0,0.67498356,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1895,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,IdentifierMutator-Variable,parentNode,this,1,0.19508576,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1896,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,IdentifierMutator-Variable,parentNode,node,2,0.09766384,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1897,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,IdentifierMutator-Variable,parentNode,root,3,0.0038075806,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1898,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,IdentifierMutator-Variable,parentNode,self,4,0.0036408843,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1899,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,FieldReferenceMutator,parentNode,parent,0,0.67498356,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1900,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,FieldReferenceMutator,parentNode,this,1,0.19508576,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1901,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,FieldReferenceMutator,parentNode,node,2,0.09766384,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1902,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,FieldReferenceMutator,parentNode,root,3,0.0038075806,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1903,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14796,14805,FieldReferenceMutator,parentNode,self,4,0.0036408843,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes =<mask>.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1904,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14807,14816,FieldReferenceMutator,childNodes,children,0,0.94377327,parentNode.<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1905,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14807,14816,FieldReferenceMutator,childNodes,node,1,0.013806602,parentNode.<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1906,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14807,14816,FieldReferenceMutator,childNodes,parents,2,0.007158127,parentNode.<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1907,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14807,14816,FieldReferenceMutator,childNodes,child,3,0.0030423808,parentNode.<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1908,Node.java,siblingNodes,List<Node> siblingNodes(),443,447,14807,14816,FieldReferenceMutator,childNodes,odes,4,0.0024064186,parentNode.<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.<mask>;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1909,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14881,14883,BinaryOperatorMutator,-,+,0,0.7806872,nodes.size() <mask> 1,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size()<mask>1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1910,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14881,14883,BinaryOperatorMutator,-,*,2,0.028981796,nodes.size() <mask> 1,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size()<mask>1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1911,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14881,14883,BinaryOperatorMutator,-,+,3,0.020921322,nodes.size() <mask> 1,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size()<mask>1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1912,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14881,14883,BinaryOperatorMutator,-,)+,4,0.01564268,nodes.size() <mask> 1,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size()<mask>1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1913,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14875,14878,MethodCallMutator,size,length,1,9.1212074E-4,nodes.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.<mask>() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1914,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14875,14878,MethodCallMutator,size,count,3,2.8568855E-5,nodes.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.<mask>() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1915,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14875,14878,MethodCallMutator,size,position,4,1.9013763E-5,nodes.<mask>(),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.<mask>() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1916,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14869,14873,IdentifierMutator-Variable,nodes,node,1,0.19249995,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(<mask>.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1917,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14869,14873,IdentifierMutator-Variable,nodes,odes,2,0.1000192,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(<mask>.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1918,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14869,14873,IdentifierMutator-Variable,nodes,ids,3,0.0438645,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(<mask>.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1919,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14869,14873,IdentifierMutator-Variable,nodes,names,4,0.037640143,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(<mask>.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1920,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14884,14884,IdentifierMutator-Literal,1,2,1,0.016487096,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() -<mask>);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1921,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14884,14884,IdentifierMutator-Literal,1,3,3,0.001429287,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() -<mask>);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1922,Node.java,siblingNodes,List<Node> siblingNodes(),443,448,14884,14884,IdentifierMutator-Literal,1,count,4,0.0012243075,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() -<mask>);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1923,Node.java,siblingNodes,List<Node> siblingNodes(),443,449,14912,14916,IdentifierMutator-Variable,nodes,node,1,2.5242643E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node:<mask>)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1924,Node.java,siblingNodes,List<Node> siblingNodes(),443,449,14912,14916,IdentifierMutator-Variable,nodes,siblings,2,1.6119557E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node:<mask>)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1925,Node.java,siblingNodes,List<Node> siblingNodes(),443,449,14912,14916,IdentifierMutator-Variable,nodes,elements,3,9.5802225E-6,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node:<mask>)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1926,Node.java,siblingNodes,List<Node> siblingNodes(),443,449,14912,14916,IdentifierMutator-Variable,nodes,objects,4,6.5438567E-6,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node:<mask>)
            if (node != this)
                siblings.add(node);
        return siblings;
    }"
1927,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14939,14942,BinaryOperatorMutator,!=,==,0,0.71662164,node <mask> this,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node<mask>this)
                siblings.add(node);
        return siblings;
    }"
1928,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14939,14942,BinaryOperatorMutator,!=,==,2,0.096880846,node <mask> this,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node<mask>this)
                siblings.add(node);
        return siblings;
    }"
1929,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14939,14942,BinaryOperatorMutator,!=,.,3,0.016156573,node <mask> this,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node<mask>this)
                siblings.add(node);
        return siblings;
    }"
1930,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14939,14942,BinaryOperatorMutator,!=,===,4,0.008210444,node <mask> this,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node<mask>this)
                siblings.add(node);
        return siblings;
    }"
1931,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14935,14938,IdentifierMutator-Variable,node,parent,1,6.1406137E-4,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (<mask> != this)
                siblings.add(node);
        return siblings;
    }"
1932,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14935,14938,IdentifierMutator-Variable,node,child,2,3.7208703E-4,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (<mask> != this)
                siblings.add(node);
        return siblings;
    }"
1933,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14935,14938,IdentifierMutator-Variable,node,Node,4,6.669957E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (<mask> != this)
                siblings.add(node);
        return siblings;
    }"
1934,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14943,14946,IdentifierMutator-ThisAccess,this,null,0,0.8603014,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node !=<mask>)
                siblings.add(node);
        return siblings;
    }"
1935,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14943,14946,IdentifierMutator-ThisAccess,this,node,2,0.019425036,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node !=<mask>)
                siblings.add(node);
        return siblings;
    }"
1936,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14943,14946,IdentifierMutator-ThisAccess,this,root,3,0.007691016,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node !=<mask>)
                siblings.add(node);
        return siblings;
    }"
1937,Node.java,siblingNodes,List<Node> siblingNodes(),443,450,14943,14946,IdentifierMutator-ThisAccess,this,parent,4,0.0067822896,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node !=<mask>)
                siblings.add(node);
        return siblings;
    }"
1938,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14974,14976,MethodCallMutator,add,remove,2,0.0022375055,siblings.<mask>(node),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.<mask>(node);
        return siblings;
    }"
1939,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14974,14976,MethodCallMutator,add,append,3,0.0016439277,siblings.<mask>(node),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.<mask>(node);
        return siblings;
    }"
1940,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14974,14976,MethodCallMutator,add,push,4,6.8670674E-4,siblings.<mask>(node),"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.<mask>(node);
        return siblings;
    }"
1941,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14965,14972,IdentifierMutator-Variable,siblings,sibling,1,1.208966E-4,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)<mask>.add(node);
        return siblings;
    }"
1942,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14965,14972,IdentifierMutator-Variable,siblings,iblings,2,2.5189781E-6,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)<mask>.add(node);
        return siblings;
    }"
1943,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14965,14972,IdentifierMutator-Variable,siblings,children,3,5.759049E-7,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)<mask>.add(node);
        return siblings;
    }"
1944,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14965,14972,IdentifierMutator-Variable,siblings,sisters,4,5.7519134E-7,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)<mask>.add(node);
        return siblings;
    }"
1945,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14978,14981,IdentifierMutator-Variable,node,child,2,1.0045017E-4,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(<mask>);
        return siblings;
    }"
1946,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14978,14981,IdentifierMutator-Variable,node,Node,3,4.5183093E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(<mask>);
        return siblings;
    }"
1947,Node.java,siblingNodes,List<Node> siblingNodes(),443,451,14978,14981,IdentifierMutator-Variable,node,parent,4,2.971148E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(<mask>);
        return siblings;
    }"
1948,Node.java,siblingNodes,List<Node> siblingNodes(),443,452,15000,15007,IdentifierMutator-Variable,siblings,sibling,1,6.1528415E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return<mask>;
    }"
1949,Node.java,siblingNodes,List<Node> siblingNodes(),443,452,15000,15007,IdentifierMutator-Variable,siblings,nodes,2,2.5295174E-5,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return<mask>;
    }"
1950,Node.java,siblingNodes,List<Node> siblingNodes(),443,452,15000,15007,IdentifierMutator-Variable,siblings,ancestors,3,1.8259985E-6,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return<mask>;
    }"
1951,Node.java,siblingNodes,List<Node> siblingNodes(),443,452,15000,15007,IdentifierMutator-Variable,siblings,children,4,1.6626763E-6,<mask>,"List<Node> siblingNodes() {
        if (parentNode == null)
            return Collections.emptyList();

        List<Node> nodes = parentNode.childNodes;
        List<Node> siblings = new ArrayList<Node>(nodes.size() - 1);
        for (Node node: nodes)
            if (node != this)
                siblings.add(node);
        return<mask>;
    }"
1952,Node.java,nextSibling,Node nextSibling(),459,460,15185,15188,BinaryOperatorMutator,==,=,2,0.040995438,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1953,Node.java,nextSibling,Node nextSibling(),459,460,15185,15188,BinaryOperatorMutator,==,!=,3,0.007977399,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1954,Node.java,nextSibling,Node nextSibling(),459,460,15185,15188,BinaryOperatorMutator,==,.,4,0.0060582682,parentNode <mask> null,"Node nextSibling() {
        if (parentNode<mask>null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1955,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,IdentifierMutator-Variable,parentNode,parent,0,0.84937376,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1956,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,IdentifierMutator-Variable,parentNode,root,1,0.066754095,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1957,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,IdentifierMutator-Variable,parentNode,node,2,0.019058581,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1958,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,IdentifierMutator-Variable,parentNode,this,3,0.007973294,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1959,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,IdentifierMutator-Variable,parentNode,child,4,0.007381598,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1960,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,FieldReferenceMutator,parentNode,parent,0,0.84937376,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1961,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,FieldReferenceMutator,parentNode,root,1,0.066754095,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1962,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,FieldReferenceMutator,parentNode,node,2,0.019058581,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1963,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,FieldReferenceMutator,parentNode,this,3,0.007973294,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1964,Node.java,nextSibling,Node nextSibling(),459,460,15175,15184,FieldReferenceMutator,parentNode,child,4,0.007381598,<mask>,"Node nextSibling() {
        if (<mask> == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1965,Node.java,nextSibling,Node nextSibling(),459,460,15189,15192,IdentifierMutator-Literal,null,this,1,0.032957185,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1966,Node.java,nextSibling,Node nextSibling(),459,460,15189,15192,IdentifierMutator-Literal,null,root,2,0.028565131,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1967,Node.java,nextSibling,Node nextSibling(),459,460,15189,15192,IdentifierMutator-Literal,null,node,3,0.0069953417,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1968,Node.java,nextSibling,Node nextSibling(),459,460,15189,15192,IdentifierMutator-Literal,null,parent,4,0.0017088271,<mask>,"Node nextSibling() {
        if (parentNode ==<mask>)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1969,Node.java,nextSibling,Node nextSibling(),459,461,15214,15217,IdentifierMutator-Literal,null,this,1,0.0056259395,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1970,Node.java,nextSibling,Node nextSibling(),459,461,15214,15217,IdentifierMutator-Literal,null,root,2,0.0032886649,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1971,Node.java,nextSibling,Node nextSibling(),459,461,15214,15217,IdentifierMutator-Literal,null,node,3,0.0021232287,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1972,Node.java,nextSibling,Node nextSibling(),459,461,15214,15217,IdentifierMutator-Literal,null,parent,4,0.001829252,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return<mask>; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1973,Node.java,nextSibling,Node nextSibling(),459,463,15267,15287,IdentifierMutator-Variable,parentNode.childNodes,siblings,0,0.5334479,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1974,Node.java,nextSibling,Node nextSibling(),459,463,15267,15287,IdentifierMutator-Variable,parentNode.childNodes,null,1,0.16358577,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1975,Node.java,nextSibling,Node nextSibling(),459,463,15267,15287,IdentifierMutator-Variable,parentNode.childNodes,list,2,0.07232898,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1976,Node.java,nextSibling,Node nextSibling(),459,463,15267,15287,IdentifierMutator-Variable,parentNode.childNodes,children,3,0.04773046,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1977,Node.java,nextSibling,Node nextSibling(),459,463,15267,15287,IdentifierMutator-Variable,parentNode.childNodes,nodes,4,0.028207662,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1978,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,IdentifierMutator-Variable,parentNode,parent,0,0.42096812,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1979,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,IdentifierMutator-Variable,parentNode,node,1,0.32583547,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1980,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,IdentifierMutator-Variable,parentNode,this,2,0.10110435,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1981,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,IdentifierMutator-Variable,parentNode,root,3,0.051981505,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1982,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,IdentifierMutator-Variable,parentNode,child,4,0.005935973,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1983,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,FieldReferenceMutator,parentNode,parent,0,0.42096812,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1984,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,FieldReferenceMutator,parentNode,node,1,0.32583547,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1985,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,FieldReferenceMutator,parentNode,this,2,0.10110435,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1986,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,FieldReferenceMutator,parentNode,root,3,0.051981505,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1987,Node.java,nextSibling,Node nextSibling(),459,463,15267,15276,FieldReferenceMutator,parentNode,child,4,0.005935973,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1988,Node.java,nextSibling,Node nextSibling(),459,463,15278,15287,FieldReferenceMutator,childNodes,children,0,0.9582523,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1989,Node.java,nextSibling,Node nextSibling(),459,463,15278,15287,FieldReferenceMutator,childNodes,iblings,1,0.0066903615,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1990,Node.java,nextSibling,Node nextSibling(),459,463,15278,15287,FieldReferenceMutator,childNodes,siblings,2,0.00617557,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1991,Node.java,nextSibling,Node nextSibling(),459,463,15278,15287,FieldReferenceMutator,childNodes,parents,3,0.0050757886,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1992,Node.java,nextSibling,Node nextSibling(),459,463,15278,15287,FieldReferenceMutator,childNodes,child,4,0.003489966,parentNode.<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1993,Node.java,nextSibling,Node nextSibling(),459,464,15314,15325,MethodCallMutator,siblingIndex,index,0,0.8886482,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1994,Node.java,nextSibling,Node nextSibling(),459,464,15314,15325,MethodCallMutator,siblingIndex,size,1,0.053792402,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1995,Node.java,nextSibling,Node nextSibling(),459,464,15314,15325,MethodCallMutator,siblingIndex,next,2,0.019602245,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1996,Node.java,nextSibling,Node nextSibling(),459,464,15314,15325,MethodCallMutator,siblingIndex,position,3,0.004804978,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1997,Node.java,nextSibling,Node nextSibling(),459,464,15314,15325,MethodCallMutator,siblingIndex,Index,4,0.0042394404,<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1998,Node.java,nextSibling,Node nextSibling(),459,465,15347,15353,MethodCallMutator,notNull,valid,0,0.13627431,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
1999,Node.java,nextSibling,Node nextSibling(),459,465,15347,15353,MethodCallMutator,notNull,check,1,0.06922914,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2000,Node.java,nextSibling,Node nextSibling(),459,465,15347,15353,MethodCallMutator,notNull,validate,2,0.036454204,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2001,Node.java,nextSibling,Node nextSibling(),459,465,15347,15353,MethodCallMutator,notNull,range,3,0.02676765,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2002,Node.java,nextSibling,Node nextSibling(),459,465,15347,15353,MethodCallMutator,notNull,id,4,0.026717307,Validate.<mask>(index),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2003,Node.java,nextSibling,Node nextSibling(),459,465,15355,15359,IdentifierMutator-Variable,index,parent,1,0.011344735,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2004,Node.java,nextSibling,Node nextSibling(),459,465,15355,15359,IdentifierMutator-Variable,index,child,2,0.0011739593,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2005,Node.java,nextSibling,Node nextSibling(),459,465,15355,15359,IdentifierMutator-Variable,index,Index,3,8.8627276E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2006,Node.java,nextSibling,Node nextSibling(),459,465,15355,15359,IdentifierMutator-Variable,index,node,4,6.688866E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2007,Node.java,nextSibling,Node nextSibling(),459,466,15390,15392,BinaryOperatorMutator,>,==,0,0.30608848,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2008,Node.java,nextSibling,Node nextSibling(),459,466,15390,15392,BinaryOperatorMutator,>,>=,3,0.07044837,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2009,Node.java,nextSibling,Node nextSibling(),459,466,15390,15392,BinaryOperatorMutator,>,<,4,0.045181043,siblings.size() <mask> (index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size()<mask>index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2010,Node.java,nextSibling,Node nextSibling(),459,466,15384,15387,MethodCallMutator,size,length,1,3.091651E-4,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2011,Node.java,nextSibling,Node nextSibling(),459,466,15384,15387,MethodCallMutator,size,position,3,7.075142E-5,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2012,Node.java,nextSibling,Node nextSibling(),459,466,15384,15387,MethodCallMutator,size,count,4,5.3955384E-5,siblings.<mask>(),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.<mask>() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2013,Node.java,nextSibling,Node nextSibling(),459,466,15375,15382,IdentifierMutator-Variable,siblings,iblings,1,0.10411446,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2014,Node.java,nextSibling,Node nextSibling(),459,466,15375,15382,IdentifierMutator-Variable,siblings,children,2,0.06727586,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2015,Node.java,nextSibling,Node nextSibling(),459,466,15375,15382,IdentifierMutator-Variable,siblings,parents,3,0.06267906,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2016,Node.java,nextSibling,Node nextSibling(),459,466,15375,15382,IdentifierMutator-Variable,siblings,names,4,0.012541719,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask>.size() > index+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2017,Node.java,nextSibling,Node nextSibling(),459,466,15398,15398,BinaryOperatorMutator,+,-,1,0.007443162,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
2018,Node.java,nextSibling,Node nextSibling(),459,466,15398,15398,BinaryOperatorMutator,+,)+,3,4.1318513E-4,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
2019,Node.java,nextSibling,Node nextSibling(),459,466,15398,15398,BinaryOperatorMutator,+,Plus,4,5.8608708E-5,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index<mask>1)
            return siblings.get(index+1);
        else
            return null;
    }"
2020,Node.java,nextSibling,Node nextSibling(),459,466,15393,15397,IdentifierMutator-Variable,index,1,2,1.3167582E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2021,Node.java,nextSibling,Node nextSibling(),459,466,15393,15397,IdentifierMutator-Variable,index,0,3,1.24505505E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2022,Node.java,nextSibling,Node nextSibling(),459,466,15393,15397,IdentifierMutator-Variable,index,i,4,1.3467217E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() ><mask>+1)
            return siblings.get(index+1);
        else
            return null;
    }"
2023,Node.java,nextSibling,Node nextSibling(),459,466,15399,15399,IdentifierMutator-Literal,1,2,1,0.006080939,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
2024,Node.java,nextSibling,Node nextSibling(),459,466,15399,15399,IdentifierMutator-Literal,1,0,3,0.0017865027,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
2025,Node.java,nextSibling,Node nextSibling(),459,466,15399,15399,IdentifierMutator-Literal,1,3,4,4.428576E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+<mask>)
            return siblings.get(index+1);
        else
            return null;
    }"
2026,Node.java,nextSibling,Node nextSibling(),459,467,15430,15432,MethodCallMutator,get,item,1,0.035478618,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
2027,Node.java,nextSibling,Node nextSibling(),459,467,15430,15432,MethodCallMutator,get,remove,2,0.009331637,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
2028,Node.java,nextSibling,Node nextSibling(),459,467,15430,15432,MethodCallMutator,get,skip,3,0.0034046497,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
2029,Node.java,nextSibling,Node nextSibling(),459,467,15430,15432,MethodCallMutator,get,slice,4,0.001240925,siblings.<mask>(index + 1),"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.<mask>(index+1);
        else
            return null;
    }"
2030,Node.java,nextSibling,Node nextSibling(),459,467,15421,15428,IdentifierMutator-Variable,siblings,sibling,1,1.9526729E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
2031,Node.java,nextSibling,Node nextSibling(),459,467,15421,15428,IdentifierMutator-Variable,siblings,children,2,1.579941E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
2032,Node.java,nextSibling,Node nextSibling(),459,467,15421,15428,IdentifierMutator-Variable,siblings,nodes,3,6.7203164E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
2033,Node.java,nextSibling,Node nextSibling(),459,467,15421,15428,IdentifierMutator-Variable,siblings,iblings,4,4.9416217E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return<mask>.get(index+1);
        else
            return null;
    }"
2034,Node.java,nextSibling,Node nextSibling(),459,467,15439,15439,BinaryOperatorMutator,+,-,1,0.033819813,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2035,Node.java,nextSibling,Node nextSibling(),459,467,15439,15439,BinaryOperatorMutator,+,)+,2,0.001370285,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2036,Node.java,nextSibling,Node nextSibling(),459,467,15439,15439,BinaryOperatorMutator,+,-,4,2.9919533E-5,index <mask> 1,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2037,Node.java,nextSibling,Node nextSibling(),459,467,15434,15438,IdentifierMutator-Variable,index,Index,2,1.8276772E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
2038,Node.java,nextSibling,Node nextSibling(),459,467,15434,15438,IdentifierMutator-Variable,index,i,3,1.0225483E-5,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
2039,Node.java,nextSibling,Node nextSibling(),459,467,15434,15438,IdentifierMutator-Variable,index,x,4,9.945304E-6,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(<mask>+1);
        else
            return null;
    }"
2040,Node.java,nextSibling,Node nextSibling(),459,467,15440,15440,IdentifierMutator-Literal,1,2,1,0.004820987,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
2041,Node.java,nextSibling,Node nextSibling(),459,467,15440,15440,IdentifierMutator-Literal,1,0,3,3.442998E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
2042,Node.java,nextSibling,Node nextSibling(),459,467,15440,15440,IdentifierMutator-Literal,1,3,4,1.2013961E-4,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+<mask>);
        else
            return null;
    }"
2043,Node.java,nextSibling,Node nextSibling(),459,469,15476,15479,IdentifierMutator-Literal,null,sibling,1,0.066986375,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
2044,Node.java,nextSibling,Node nextSibling(),459,469,15476,15479,IdentifierMutator-Literal,null,parent,2,0.0139356125,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
2045,Node.java,nextSibling,Node nextSibling(),459,469,15476,15479,IdentifierMutator-Literal,null,node,3,0.011974564,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
2046,Node.java,nextSibling,Node nextSibling(),459,469,15476,15479,IdentifierMutator-Literal,null,root,4,0.0070348526,<mask>,"Node nextSibling() {
        if (parentNode == null)
            return null; // root
        
        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (siblings.size() > index+1)
            return siblings.get(index+1);
        else
            return<mask>;
    }"
2047,Node.java,previousSibling,Node previousSibling(),476,477,15674,15677,BinaryOperatorMutator,==,=,2,0.023713194,parentNode <mask> null,"Node previousSibling() {
        if (parentNode<mask>null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2048,Node.java,previousSibling,Node previousSibling(),476,477,15674,15677,BinaryOperatorMutator,==,!=,3,0.0053922976,parentNode <mask> null,"Node previousSibling() {
        if (parentNode<mask>null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2049,Node.java,previousSibling,Node previousSibling(),476,477,15674,15677,BinaryOperatorMutator,==,===,4,0.0042313733,parentNode <mask> null,"Node previousSibling() {
        if (parentNode<mask>null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2050,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,IdentifierMutator-Variable,parentNode,parent,0,0.8729048,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2051,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,IdentifierMutator-Variable,parentNode,root,1,0.061278418,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2052,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,IdentifierMutator-Variable,parentNode,node,2,0.018788507,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2053,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,IdentifierMutator-Variable,parentNode,this,3,0.0052047423,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2054,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,IdentifierMutator-Variable,parentNode,tree,4,0.003348754,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2055,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,FieldReferenceMutator,parentNode,parent,0,0.8729048,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2056,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,FieldReferenceMutator,parentNode,root,1,0.061278418,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2057,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,FieldReferenceMutator,parentNode,node,2,0.018788507,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2058,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,FieldReferenceMutator,parentNode,this,3,0.0052047423,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2059,Node.java,previousSibling,Node previousSibling(),476,477,15664,15673,FieldReferenceMutator,parentNode,tree,4,0.003348754,<mask>,"Node previousSibling() {
        if (<mask> == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2060,Node.java,previousSibling,Node previousSibling(),476,477,15678,15681,IdentifierMutator-Literal,null,root,1,0.02429231,<mask>,"Node previousSibling() {
        if (parentNode ==<mask>)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2061,Node.java,previousSibling,Node previousSibling(),476,477,15678,15681,IdentifierMutator-Literal,null,this,2,0.020671682,<mask>,"Node previousSibling() {
        if (parentNode ==<mask>)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2062,Node.java,previousSibling,Node previousSibling(),476,477,15678,15681,IdentifierMutator-Literal,null,node,3,0.0057672067,<mask>,"Node previousSibling() {
        if (parentNode ==<mask>)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2063,Node.java,previousSibling,Node previousSibling(),476,477,15678,15681,IdentifierMutator-Literal,null,parent,4,0.0015708342,<mask>,"Node previousSibling() {
        if (parentNode ==<mask>)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2064,Node.java,previousSibling,Node previousSibling(),476,478,15703,15706,IdentifierMutator-Literal,null,this,1,0.0040887184,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return<mask>; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2065,Node.java,previousSibling,Node previousSibling(),476,478,15703,15706,IdentifierMutator-Literal,null,root,2,0.0036147423,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return<mask>; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2066,Node.java,previousSibling,Node previousSibling(),476,478,15703,15706,IdentifierMutator-Literal,null,parent,3,0.001889309,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return<mask>; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2067,Node.java,previousSibling,Node previousSibling(),476,478,15703,15706,IdentifierMutator-Literal,null,node,4,0.0017125683,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return<mask>; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2068,Node.java,previousSibling,Node previousSibling(),476,480,15748,15768,IdentifierMutator-Variable,parentNode.childNodes,siblings,0,0.6391115,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2069,Node.java,previousSibling,Node previousSibling(),476,480,15748,15768,IdentifierMutator-Variable,parentNode.childNodes,children,1,0.061320923,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2070,Node.java,previousSibling,Node previousSibling(),476,480,15748,15768,IdentifierMutator-Variable,parentNode.childNodes,list,2,0.05496174,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2071,Node.java,previousSibling,Node previousSibling(),476,480,15748,15768,IdentifierMutator-Variable,parentNode.childNodes,parents,3,0.03713103,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2072,Node.java,previousSibling,Node previousSibling(),476,480,15748,15768,IdentifierMutator-Variable,parentNode.childNodes,nodes,4,0.027620954,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2073,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,IdentifierMutator-Variable,parentNode,parent,0,0.4955264,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2074,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,IdentifierMutator-Variable,parentNode,node,1,0.29947844,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2075,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,IdentifierMutator-Variable,parentNode,root,2,0.054238442,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2076,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,IdentifierMutator-Variable,parentNode,this,3,0.050084777,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2077,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,IdentifierMutator-Variable,parentNode,sibling,4,0.007888302,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2078,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,FieldReferenceMutator,parentNode,parent,0,0.4955264,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2079,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,FieldReferenceMutator,parentNode,node,1,0.29947844,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2080,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,FieldReferenceMutator,parentNode,root,2,0.054238442,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2081,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,FieldReferenceMutator,parentNode,this,3,0.050084777,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2082,Node.java,previousSibling,Node previousSibling(),476,480,15748,15757,FieldReferenceMutator,parentNode,sibling,4,0.007888302,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings =<mask>.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2083,Node.java,previousSibling,Node previousSibling(),476,480,15759,15768,FieldReferenceMutator,childNodes,children,0,0.93075466,parentNode.<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2084,Node.java,previousSibling,Node previousSibling(),476,480,15759,15768,FieldReferenceMutator,childNodes,siblings,1,0.014208388,parentNode.<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2085,Node.java,previousSibling,Node previousSibling(),476,480,15759,15768,FieldReferenceMutator,childNodes,iblings,2,0.012117064,parentNode.<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2086,Node.java,previousSibling,Node previousSibling(),476,480,15759,15768,FieldReferenceMutator,childNodes,parents,3,0.0108826095,parentNode.<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2087,Node.java,previousSibling,Node previousSibling(),476,480,15759,15768,FieldReferenceMutator,childNodes,child,4,0.0075491415,parentNode.<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.<mask>;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2088,Node.java,previousSibling,Node previousSibling(),476,481,15795,15806,MethodCallMutator,siblingIndex,index,0,0.93912625,<mask>(),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2089,Node.java,previousSibling,Node previousSibling(),476,481,15795,15806,MethodCallMutator,siblingIndex,size,1,0.00962027,<mask>(),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2090,Node.java,previousSibling,Node previousSibling(),476,481,15795,15806,MethodCallMutator,siblingIndex,position,2,0.0055346973,<mask>(),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2091,Node.java,previousSibling,Node previousSibling(),476,481,15795,15806,MethodCallMutator,siblingIndex,previous,3,0.0044995225,<mask>(),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2092,Node.java,previousSibling,Node previousSibling(),476,481,15795,15806,MethodCallMutator,siblingIndex,current,4,0.00437379,<mask>(),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index =<mask>();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2093,Node.java,previousSibling,Node previousSibling(),476,482,15828,15834,MethodCallMutator,notNull,index,0,0.083635,Validate.<mask>(index),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2094,Node.java,previousSibling,Node previousSibling(),476,482,15828,15834,MethodCallMutator,notNull,valid,1,0.06317148,Validate.<mask>(index),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2095,Node.java,previousSibling,Node previousSibling(),476,482,15828,15834,MethodCallMutator,notNull,check,2,0.051700573,Validate.<mask>(index),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2096,Node.java,previousSibling,Node previousSibling(),476,482,15828,15834,MethodCallMutator,notNull,index,3,0.041437604,Validate.<mask>(index),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2097,Node.java,previousSibling,Node previousSibling(),476,482,15828,15834,MethodCallMutator,notNull,negative,4,0.03538098,Validate.<mask>(index),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.<mask>(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2098,Node.java,previousSibling,Node previousSibling(),476,482,15836,15840,IdentifierMutator-Variable,index,parent,1,0.011646542,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2099,Node.java,previousSibling,Node previousSibling(),476,482,15836,15840,IdentifierMutator-Variable,index,child,2,0.001824839,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2100,Node.java,previousSibling,Node previousSibling(),476,482,15836,15840,IdentifierMutator-Variable,index,node,3,0.001171252,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2101,Node.java,previousSibling,Node previousSibling(),476,482,15836,15840,IdentifierMutator-Variable,index,children,4,9.430987E-4,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(<mask>);
        if (index > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2102,Node.java,previousSibling,Node previousSibling(),476,483,15861,15863,BinaryOperatorMutator,>,==,2,0.13271132,index <mask> 0,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
2103,Node.java,previousSibling,Node previousSibling(),476,483,15861,15863,BinaryOperatorMutator,>,-,3,0.029830888,index <mask> 0,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
2104,Node.java,previousSibling,Node previousSibling(),476,483,15861,15863,BinaryOperatorMutator,>,>=,4,0.029106637,index <mask> 0,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index<mask>0)
            return siblings.get(index-1);
        else
            return null;
    }"
2105,Node.java,previousSibling,Node previousSibling(),476,483,15856,15860,IdentifierMutator-Variable,index,Index,2,3.8367356E-4,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2106,Node.java,previousSibling,Node previousSibling(),476,483,15856,15860,IdentifierMutator-Variable,index,parent,3,3.5340523E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2107,Node.java,previousSibling,Node previousSibling(),476,483,15856,15860,IdentifierMutator-Variable,index,size,4,3.225472E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (<mask> > 0)
            return siblings.get(index-1);
        else
            return null;
    }"
2108,Node.java,previousSibling,Node previousSibling(),476,483,15864,15864,IdentifierMutator-Literal,0,1,1,0.057935677,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
2109,Node.java,previousSibling,Node previousSibling(),476,483,15864,15864,IdentifierMutator-Literal,0,null,3,9.836017E-4,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
2110,Node.java,previousSibling,Node previousSibling(),476,483,15864,15864,IdentifierMutator-Literal,0,index,4,4.7360364E-4,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index ><mask>)
            return siblings.get(index-1);
        else
            return null;
    }"
2111,Node.java,previousSibling,Node previousSibling(),476,484,15895,15897,MethodCallMutator,get,item,1,0.080186985,siblings.<mask>(index - 1),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
2112,Node.java,previousSibling,Node previousSibling(),476,484,15895,15897,MethodCallMutator,get,remove,2,0.0065430948,siblings.<mask>(index - 1),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
2113,Node.java,previousSibling,Node previousSibling(),476,484,15895,15897,MethodCallMutator,get,slice,3,0.002247508,siblings.<mask>(index - 1),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
2114,Node.java,previousSibling,Node previousSibling(),476,484,15895,15897,MethodCallMutator,get,column,4,0.0012704076,siblings.<mask>(index - 1),"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.<mask>(index-1);
        else
            return null;
    }"
2115,Node.java,previousSibling,Node previousSibling(),476,484,15886,15893,IdentifierMutator-Variable,siblings,sibling,1,2.6815156E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
2116,Node.java,previousSibling,Node previousSibling(),476,484,15886,15893,IdentifierMutator-Variable,siblings,nodes,2,1.2744082E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
2117,Node.java,previousSibling,Node previousSibling(),476,484,15886,15893,IdentifierMutator-Variable,siblings,children,3,1.1571152E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
2118,Node.java,previousSibling,Node previousSibling(),476,484,15886,15893,IdentifierMutator-Variable,siblings,iblings,4,1.8012178E-6,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return<mask>.get(index-1);
        else
            return null;
    }"
2119,Node.java,previousSibling,Node previousSibling(),476,484,15904,15904,BinaryOperatorMutator,-,+,2,0.013379311,index <mask> 1,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2120,Node.java,previousSibling,Node previousSibling(),476,484,15904,15904,BinaryOperatorMutator,-,)-,3,0.0017422698,index <mask> 1,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2121,Node.java,previousSibling,Node previousSibling(),476,484,15904,15904,BinaryOperatorMutator,-,-$,4,4.61645E-4,index <mask> 1,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index<mask>1);
        else
            return null;
    }"
2122,Node.java,previousSibling,Node previousSibling(),476,484,15899,15903,IdentifierMutator-Variable,index,Index,1,2.7818978E-4,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
2123,Node.java,previousSibling,Node previousSibling(),476,484,15899,15903,IdentifierMutator-Variable,index,x,3,4.062067E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
2124,Node.java,previousSibling,Node previousSibling(),476,484,15899,15903,IdentifierMutator-Variable,index,i,4,2.4388852E-5,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(<mask>-1);
        else
            return null;
    }"
2125,Node.java,previousSibling,Node previousSibling(),476,484,15905,15905,IdentifierMutator-Literal,1,0,2,0.009684278,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
2126,Node.java,previousSibling,Node previousSibling(),476,484,15905,15905,IdentifierMutator-Literal,1,2,3,0.002174967,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
2127,Node.java,previousSibling,Node previousSibling(),476,484,15905,15905,IdentifierMutator-Literal,1,offset,4,0.0017759318,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-<mask>);
        else
            return null;
    }"
2128,Node.java,previousSibling,Node previousSibling(),476,486,15941,15944,IdentifierMutator-Literal,null,sibling,1,0.048346635,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
2129,Node.java,previousSibling,Node previousSibling(),476,486,15941,15944,IdentifierMutator-Literal,null,parent,2,0.009041334,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
2130,Node.java,previousSibling,Node previousSibling(),476,486,15941,15944,IdentifierMutator-Literal,null,node,3,0.0086878035,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
2131,Node.java,previousSibling,Node previousSibling(),476,486,15941,15944,IdentifierMutator-Literal,null,root,4,0.007370262,<mask>,"Node previousSibling() {
        if (parentNode == null)
            return null; // root

        List<Node> siblings = parentNode.childNodes;
        Integer index = siblingIndex();
        Validate.notNull(index);
        if (index > 0)
            return siblings.get(index-1);
        else
            return<mask>;
    }"
2132,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,IdentifierMutator-Variable,siblingIndex,index,0,0.31600043,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2133,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,IdentifierMutator-Variable,siblingIndex,0,1,0.1660996,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2134,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,IdentifierMutator-Variable,siblingIndex,sibling,2,0.15469417,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2135,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,IdentifierMutator-Variable,siblingIndex,i,3,0.13945167,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2136,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,IdentifierMutator-Variable,siblingIndex,1,4,0.07885506,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2137,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,FieldReferenceMutator,siblingIndex,index,0,0.31600043,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2138,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,FieldReferenceMutator,siblingIndex,0,1,0.1660996,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2139,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,FieldReferenceMutator,siblingIndex,sibling,2,0.15469417,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2140,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,FieldReferenceMutator,siblingIndex,i,3,0.13945167,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2141,Node.java,siblingIndex,int siblingIndex(),495,496,16243,16254,FieldReferenceMutator,siblingIndex,1,4,0.07885506,<mask>,"int siblingIndex() {
        return<mask>;
    }"
2142,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16348,16348,AssignmentMutator,this.siblingIndex=siblingIndex,|,0,0.8935026,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
2143,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16348,16348,AssignmentMutator,this.siblingIndex=siblingIndex,^,1,0.052176204,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
2144,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16348,16348,AssignmentMutator,this.siblingIndex=siblingIndex,*,2,0.034481168,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
2145,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16348,16348,AssignmentMutator,this.siblingIndex=siblingIndex,&,3,0.005468068,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
2146,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16348,16348,AssignmentMutator,this.siblingIndex=siblingIndex,/,4,0.0040113283,this.siblingIndex <mask>= siblingIndex,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex<mask>= siblingIndex;
    }"
2147,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16347,IdentifierMutator-Variable,this.siblingIndex,index,0,0.8769896,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
2148,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16347,IdentifierMutator-Variable,this.siblingIndex,sibling,1,0.019961074,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
2149,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16347,IdentifierMutator-Variable,this.siblingIndex,i,2,0.01448176,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
2150,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16347,IdentifierMutator-Variable,this.siblingIndex,offset,3,0.005330489,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
2151,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16347,IdentifierMutator-Variable,this.siblingIndex,position,4,0.0048736604,<mask>,"void setSiblingIndex(int siblingIndex) {<mask> = siblingIndex;
    }"
2152,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16334,IdentifierMutator-ThisAccess,this,style,1,0.011455207,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
2153,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16334,IdentifierMutator-ThisAccess,this,super,2,0.007490424,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
2154,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16334,IdentifierMutator-ThisAccess,this,m,3,0.0043311785,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
2155,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16331,16334,IdentifierMutator-ThisAccess,this,parent,4,0.0042267134,<mask>,"void setSiblingIndex(int siblingIndex) {<mask>.siblingIndex = siblingIndex;
    }"
2156,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16336,16347,FieldReferenceMutator,siblingIndex,index,0,0.9215798,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
2157,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16336,16347,FieldReferenceMutator,siblingIndex,selected,1,0.007338168,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
2158,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16336,16347,FieldReferenceMutator,siblingIndex,offset,2,0.0069815777,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
2159,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16336,16347,FieldReferenceMutator,siblingIndex,child,3,0.0040323357,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
2160,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16336,16347,FieldReferenceMutator,siblingIndex,Index,4,0.0040133563,this.<mask>,"void setSiblingIndex(int siblingIndex) {
        this.<mask> = siblingIndex;
    }"
2161,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16351,16362,IdentifierMutator-Variable,siblingIndex,index,0,0.7735068,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
2162,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16351,16362,IdentifierMutator-Variable,siblingIndex,Index,1,0.0918601,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
2163,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16351,16362,IdentifierMutator-Variable,siblingIndex,sibling,2,0.074713506,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
2164,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16351,16362,IdentifierMutator-Variable,siblingIndex,0,3,0.016289534,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
2165,Node.java,setSiblingIndex,void setSiblingIndex(int siblingIndex),499,500,16351,16362,IdentifierMutator-Variable,siblingIndex,i,4,0.012556835,<mask>,"void setSiblingIndex(int siblingIndex) {
        this.siblingIndex =<mask>;
    }"
2166,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16646,16652,MethodCallMutator,notNull,validate,0,0.50709003,Validate.<mask>(nodeVisitor),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.<mask>(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2167,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16646,16652,MethodCallMutator,notNull,ok,1,0.05651748,Validate.<mask>(nodeVisitor),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.<mask>(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2168,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16646,16652,MethodCallMutator,notNull,check,2,0.05249863,Validate.<mask>(nodeVisitor),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.<mask>(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2169,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16646,16652,MethodCallMutator,notNull,skip,3,0.014855517,Validate.<mask>(nodeVisitor),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.<mask>(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2170,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16646,16652,MethodCallMutator,notNull,apply,4,0.013104259,Validate.<mask>(nodeVisitor),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.<mask>(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2171,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16654,16664,IdentifierMutator-Variable,nodeVisitor,this,0,0.8557003,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(<mask>);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2172,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16654,16664,IdentifierMutator-Variable,nodeVisitor,node,1,0.06265296,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(<mask>);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2173,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16654,16664,IdentifierMutator-Variable,nodeVisitor,self,2,0.0058722533,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(<mask>);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2174,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16654,16664,IdentifierMutator-Variable,nodeVisitor,document,3,0.005443723,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(<mask>);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2175,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,509,16654,16664,IdentifierMutator-Variable,nodeVisitor,doc,4,0.0050948714,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(<mask>);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return this;
    }"
2176,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,510,16720,16730,IdentifierMutator-Variable,nodeVisitor,this,0,0.5161866,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(<mask>);
        traversor.traverse(this);
        return this;
    }"
2177,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,510,16720,16730,IdentifierMutator-Variable,nodeVisitor,node,1,0.07288855,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(<mask>);
        traversor.traverse(this);
        return this;
    }"
2178,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,510,16720,16730,IdentifierMutator-Variable,nodeVisitor,parent,2,0.029265944,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(<mask>);
        traversor.traverse(this);
        return this;
    }"
2179,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,510,16720,16730,IdentifierMutator-Variable,nodeVisitor,null,3,0.02900692,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(<mask>);
        traversor.traverse(this);
        return this;
    }"
2180,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,510,16720,16730,IdentifierMutator-Variable,nodeVisitor,context,4,0.022404617,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(<mask>);
        traversor.traverse(this);
        return this;
    }"
2181,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16752,16759,MethodCallMutator,traverse,walk,1,0.124519035,traversor.<mask>(this),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.<mask>(this);
        return this;
    }"
2182,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16752,16759,MethodCallMutator,traverse,apply,2,0.069014944,traversor.<mask>(this),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.<mask>(this);
        return this;
    }"
2183,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16752,16759,MethodCallMutator,traverse,transform,3,0.05435333,traversor.<mask>(this),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.<mask>(this);
        return this;
    }"
2184,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16752,16759,MethodCallMutator,traverse,trip,4,0.04732596,traversor.<mask>(this),"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.<mask>(this);
        return this;
    }"
2185,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16742,16750,IdentifierMutator-Variable,traversor,traverse,0,0.13093035,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);<mask>.traverse(this);
        return this;
    }"
2186,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16742,16750,IdentifierMutator-Variable,traversor,router,1,0.111979775,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);<mask>.traverse(this);
        return this;
    }"
2187,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16742,16750,IdentifierMutator-Variable,traversor,visitor,2,0.093854025,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);<mask>.traverse(this);
        return this;
    }"
2188,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16742,16750,IdentifierMutator-Variable,traversor,transformer,3,0.07132035,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);<mask>.traverse(this);
        return this;
    }"
2189,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16742,16750,IdentifierMutator-Variable,traversor,super,4,0.043882616,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);<mask>.traverse(this);
        return this;
    }"
2190,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16761,16764,IdentifierMutator-ThisAccess,this,node,1,0.2195851,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(<mask>);
        return this;
    }"
2191,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16761,16764,IdentifierMutator-ThisAccess,this,tree,2,0.0063650706,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(<mask>);
        return this;
    }"
2192,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,511,16761,16764,IdentifierMutator-ThisAccess,this,context,4,0.0048615066,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(<mask>);
        return this;
    }"
2193,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,512,16783,16786,IdentifierMutator-ThisAccess,this,node,1,0.10766319,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return<mask>;
    }"
2194,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,512,16783,16786,IdentifierMutator-ThisAccess,this,null,2,0.051980507,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return<mask>;
    }"
2195,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,512,16783,16786,IdentifierMutator-ThisAccess,this,root,3,0.015180778,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return<mask>;
    }"
2196,Node.java,traverse,Node traverse(NodeVisitor nodeVisitor),508,512,16783,16786,IdentifierMutator-ThisAccess,this,true,4,0.013025463,<mask>,"Node traverse(NodeVisitor nodeVisitor) {
        Validate.notNull(nodeVisitor);
        NodeTraversor traversor = new NodeTraversor(nodeVisitor);
        traversor.traverse(this);
        return<mask>;
    }"
2197,Node.java,outerHtml,String outerHtml(),519,520,16948,16950,IdentifierMutator-Literal,128,html,0,0.2883253,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
2198,Node.java,outerHtml,String outerHtml(),519,520,16948,16950,IdentifierMutator-Literal,128,output,1,0.075468004,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
2199,Node.java,outerHtml,String outerHtml(),519,520,16948,16950,IdentifierMutator-Literal,128,content,2,0.03894649,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
2200,Node.java,outerHtml,String outerHtml(),519,520,16948,16950,IdentifierMutator-Literal,128,this,3,0.03481612,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
2201,Node.java,outerHtml,String outerHtml(),519,520,16948,16950,IdentifierMutator-Literal,128,text,4,0.02524402,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(<mask>);
        outerHtml(accum);
        return accum.toString();
    }"
2202,Node.java,outerHtml,String outerHtml(),519,521,16962,16970,MethodCallMutator,outerHtml,print,0,0.21116365,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);<mask>(accum);
        return accum.toString();
    }"
2203,Node.java,outerHtml,String outerHtml(),519,521,16962,16970,MethodCallMutator,outerHtml,html,1,0.12334052,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);<mask>(accum);
        return accum.toString();
    }"
2204,Node.java,outerHtml,String outerHtml(),519,521,16962,16970,MethodCallMutator,outerHtml,output,2,0.10157216,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);<mask>(accum);
        return accum.toString();
    }"
2205,Node.java,outerHtml,String outerHtml(),519,521,16962,16970,MethodCallMutator,outerHtml,append,3,0.044391412,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);<mask>(accum);
        return accum.toString();
    }"
2206,Node.java,outerHtml,String outerHtml(),519,521,16962,16970,MethodCallMutator,outerHtml,render,4,0.04302358,<mask>(accum),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);<mask>(accum);
        return accum.toString();
    }"
2207,Node.java,outerHtml,String outerHtml(),519,521,16972,16976,IdentifierMutator-Variable,accum,acc,1,0.08965383,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(<mask>);
        return accum.toString();
    }"
2208,Node.java,outerHtml,String outerHtml(),519,521,16972,16976,IdentifierMutator-Variable,accum,ctr,2,0.042652648,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(<mask>);
        return accum.toString();
    }"
2209,Node.java,outerHtml,String outerHtml(),519,521,16972,16976,IdentifierMutator-Variable,accum,app,3,0.016057804,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(<mask>);
        return accum.toString();
    }"
2210,Node.java,outerHtml,String outerHtml(),519,521,16972,16976,IdentifierMutator-Variable,accum,true,4,0.012603915,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(<mask>);
        return accum.toString();
    }"
2211,Node.java,outerHtml,String outerHtml(),519,522,17001,17008,MethodCallMutator,toString,String,0,0.28250787,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return accum.<mask>();
    }"
2212,Node.java,outerHtml,String outerHtml(),519,522,17001,17008,MethodCallMutator,toString,build,1,0.1959437,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return accum.<mask>();
    }"
2213,Node.java,outerHtml,String outerHtml(),519,522,17001,17008,MethodCallMutator,toString,string,2,0.13229063,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return accum.<mask>();
    }"
2214,Node.java,outerHtml,String outerHtml(),519,522,17001,17008,MethodCallMutator,toString,html,3,0.07961345,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return accum.<mask>();
    }"
2215,Node.java,outerHtml,String outerHtml(),519,522,17001,17008,MethodCallMutator,toString,replace,4,0.03614073,accum.<mask>(),"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return accum.<mask>();
    }"
2216,Node.java,outerHtml,String outerHtml(),519,522,16995,16999,IdentifierMutator-Variable,accum,result,1,5.5348675E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return<mask>.toString();
    }"
2217,Node.java,outerHtml,String outerHtml(),519,522,16995,16999,IdentifierMutator-Variable,accum,buf,2,5.529317E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return<mask>.toString();
    }"
2218,Node.java,outerHtml,String outerHtml(),519,522,16995,16999,IdentifierMutator-Variable,accum,acc,3,2.4802584E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return<mask>.toString();
    }"
2219,Node.java,outerHtml,String outerHtml(),519,522,16995,16999,IdentifierMutator-Variable,accum,out,4,2.419437E-4,<mask>,"String outerHtml() {
        StringBuilder accum = new StringBuilder(128);
        outerHtml(accum);
        return<mask>.toString();
    }"
2220,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17148,17155,MethodCallMutator,traverse,walk,0,0.17194602,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
2221,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17148,17155,MethodCallMutator,traverse,exit,1,0.071009494,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
2222,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17148,17155,MethodCallMutator,traverse,next,2,0.05123341,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
2223,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17148,17155,MethodCallMutator,traverse,exec,3,0.040636867,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
2224,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17148,17155,MethodCallMutator,traverse,output,4,0.036300734,"new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this)","void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).<mask>(this);
    }"
2225,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17119,17123,IdentifierMutator-Variable,accum,acc,0,0.09720921,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
2226,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17119,17123,IdentifierMutator-Variable,accum,output,2,0.04253034,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
2227,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17119,17123,IdentifierMutator-Variable,accum,app,3,0.04130607,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
2228,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17119,17123,IdentifierMutator-Variable,accum,builder,4,0.033845402,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(<mask>, getOutputSettings())).traverse(this);
    }"
2229,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17126,17142,MethodCallMutator,getOutputSettings,context,0,0.08083521,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
2230,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17126,17142,MethodCallMutator,getOutputSettings,indent,1,0.04579899,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
2231,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17126,17142,MethodCallMutator,getOutputSettings,build,2,0.033088222,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
2232,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17126,17142,MethodCallMutator,getOutputSettings,root,3,0.031719103,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
2233,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17126,17142,MethodCallMutator,getOutputSettings,builder,4,0.027731484,<mask>(),"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum,<mask>())).traverse(this);
    }"
2234,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17157,17160,IdentifierMutator-ThisAccess,this,node,0,0.2735717,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
2235,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17157,17160,IdentifierMutator-ThisAccess,this,true,2,0.023887314,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
2236,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17157,17160,IdentifierMutator-ThisAccess,this,output,3,0.0236126,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
2237,Node.java,outerHtml,void outerHtml(StringBuilder accum),525,526,17157,17160,IdentifierMutator-ThisAccess,this,false,4,0.015515514,<mask>,"void outerHtml(StringBuilder accum) {
        new NodeTraversor(new OuterHtmlVisitor(accum, getOutputSettings())).traverse(<mask>);
    }"
2238,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17425,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",settings,0,0.5464257,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
2239,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17425,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",null,1,0.17945637,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
2240,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17425,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",s,2,0.044713866,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
2241,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17425,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",this,3,0.017299436,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
2242,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17425,IdentifierMutator-Conditional,"ownerDocument()!=null?ownerDocument().outputSettings():neworg.jsoup.nodes.Document("""").outputSettings()",output,4,0.014836076,<mask>,"Document.OutputSettings getOutputSettings() {
        return<mask>;
    }"
2243,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17345,17348,BinaryOperatorMutator,!=,==,1,0.0557868,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2244,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17345,17348,BinaryOperatorMutator,!=,==,2,0.0013111217,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2245,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17345,17348,BinaryOperatorMutator,!=,=,3,4.8892316E-4,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2246,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17345,17348,BinaryOperatorMutator,!=,->,4,2.0678117E-4,ownerDocument() <mask> null,"Document.OutputSettings getOutputSettings() {
        return ownerDocument()<mask>null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2247,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17342,MethodCallMutator,ownerDocument,owner,0,0.81401825,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2248,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17342,MethodCallMutator,ownerDocument,parent,1,0.051494755,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2249,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17342,MethodCallMutator,ownerDocument,document,2,0.039915245,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2250,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17342,MethodCallMutator,ownerDocument,Owner,3,0.008672801,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2251,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17330,17342,MethodCallMutator,ownerDocument,element,4,0.0063771694,<mask>(),"Document.OutputSettings getOutputSettings() {
        return<mask>() != null ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2252,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17349,17352,IdentifierMutator-Literal,null,NULL,2,1.4811882E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2253,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17349,17352,IdentifierMutator-Literal,null,this,3,1.2713949E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2254,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17349,17352,IdentifierMutator-Literal,null,nil,4,1.2465887E-4,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() !=<mask> ? ownerDocument().outputSettings() : (new Document("""")).outputSettings();
    }"
2255,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17372,17385,MethodCallMutator,outputSettings,settings,0,0.538389,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
2256,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17372,17385,MethodCallMutator,outputSettings,output,1,0.11503483,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
2257,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17372,17385,MethodCallMutator,outputSettings,properties,2,0.04676871,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
2258,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17372,17385,MethodCallMutator,outputSettings,style,3,0.03019897,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
2259,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17372,17385,MethodCallMutator,outputSettings,write,4,0.018230408,ownerDocument().<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().<mask>() : (new Document("""")).outputSettings();
    }"
2260,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17356,17368,MethodCallMutator,ownerDocument,owner,0,0.9313738,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
2261,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17356,17368,MethodCallMutator,ownerDocument,parent,1,0.045982227,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
2262,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17356,17368,MethodCallMutator,ownerDocument,document,2,0.006950519,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
2263,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17356,17368,MethodCallMutator,ownerDocument,this,3,0.0025324447,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
2264,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17356,17368,MethodCallMutator,ownerDocument,owner,4,0.001603221,<mask>(),"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ?<mask>().outputSettings() : (new Document("""")).outputSettings();
    }"
2265,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17410,17423,MethodCallMutator,outputSettings,settings,0,0.30889645,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
2266,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17410,17423,MethodCallMutator,outputSettings,write,1,0.092279576,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
2267,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17410,17423,MethodCallMutator,outputSettings,output,2,0.081696406,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
2268,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17410,17423,MethodCallMutator,outputSettings,build,3,0.061201204,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
2269,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17410,17423,MethodCallMutator,outputSettings,style,4,0.04152668,"new Document("""").<mask>()","Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document("""")).<mask>();
    }"
2270,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17405,17406,IdentifierMutator-Literal,"""""",document,0,0.47351158,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
2271,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17405,17406,IdentifierMutator-Literal,"""""",this,1,0.120171115,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
2272,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17405,17406,IdentifierMutator-Literal,"""""",doc,2,0.07412486,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
2273,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17405,17406,IdentifierMutator-Literal,"""""",null,3,0.04003899,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
2274,Node.java,getOutputSettings,Document.OutputSettings getOutputSettings(),530,531,17405,17406,IdentifierMutator-Literal,"""""",writer,4,0.03119611,<mask>,"Document.OutputSettings getOutputSettings() {
        return ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(<mask>)).outputSettings();
    }"
2275,Node.java,toString,String toString(),542,543,17774,17782,MethodCallMutator,outerHtml,trim,0,0.10235256,<mask>(),"String toString() {
        return<mask>();
    }"
2276,Node.java,toString,String toString(),542,543,17774,17782,MethodCallMutator,outerHtml,string,1,0.09324054,<mask>(),"String toString() {
        return<mask>();
    }"
2277,Node.java,toString,String toString(),542,543,17774,17782,MethodCallMutator,outerHtml,get,2,0.07307521,<mask>(),"String toString() {
        return<mask>();
    }"
2278,Node.java,toString,String toString(),542,543,17774,17782,MethodCallMutator,outerHtml,str,3,0.072158255,<mask>(),"String toString() {
        return<mask>();
    }"
2279,Node.java,toString,String toString(),542,543,17774,17782,MethodCallMutator,outerHtml,print,4,0.03767136,<mask>(),"String toString() {
        return<mask>();
    }"
2280,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17910,17915,MethodCallMutator,append,join,1,4.5754682E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
2281,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17910,17915,MethodCallMutator,append,write,2,2.7536493E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
2282,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17910,17915,MethodCallMutator,append,end,4,1.3647057E-4,"accum.<mask>(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()))","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").<mask>(StringUtil.padding(depth * out.indentAmount()));
    }"
2283,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17897,17902,MethodCallMutator,append,repeat,1,0.0025820967,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2284,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17897,17902,MethodCallMutator,append,write,3,0.0013110061,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2285,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17897,17902,MethodCallMutator,append,join,4,9.008016E-4,"accum.<mask>(""\n"")","void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.<mask>(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2286,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17891,17895,IdentifierMutator-Variable,accum,accumulate,1,7.4977754E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2287,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17891,17895,IdentifierMutator-Variable,accum,acc,2,6.987336E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2288,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17891,17895,IdentifierMutator-Variable,accum,buf,3,5.8310932E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2289,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17891,17895,IdentifierMutator-Variable,accum,out,4,2.8867516E-5,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {<mask>.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));
    }"
2290,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17904,17907,IdentifierMutator-Literal,"""\n""",indent,0,0.60602236,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
2291,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17904,17907,IdentifierMutator-Literal,"""\n""",prefix,1,0.023271369,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
2292,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17904,17907,IdentifierMutator-Literal,"""\n""",prefix,2,0.017306747,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
2293,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17904,17907,IdentifierMutator-Literal,"""\n""",line,3,0.009626411,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
2294,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17904,17907,IdentifierMutator-Literal,"""\n""",padding,4,0.008668526,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(<mask>).append(StringUtil.padding(depth * out.indentAmount()));
    }"
2295,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17928,17934,MethodCallMutator,padding,escape,0,0.24266127,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
2296,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17928,17934,MethodCallMutator,padding,round,1,0.12092673,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
2297,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17928,17934,MethodCallMutator,padding,repeat,2,0.10426703,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
2298,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17928,17934,MethodCallMutator,padding,format,3,0.0726625,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
2299,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17928,17934,MethodCallMutator,padding,pad,4,0.04116962,StringUtil.<mask>(depth * out.indentAmount()),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.<mask>(depth * out.indentAmount()));
    }"
2300,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17941,17943,BinaryOperatorMutator,*,",",0,0.8032967,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
2301,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17941,17943,BinaryOperatorMutator,*,+,2,0.06293622,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
2302,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17941,17943,BinaryOperatorMutator,*,-,3,0.021362264,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
2303,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17941,17943,BinaryOperatorMutator,*,+,4,0.006506746,depth <mask> out.indentAmount(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth<mask>out.indentAmount()));
    }"
2304,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17936,17940,IdentifierMutator-Variable,depth,Depth,1,0.0029291494,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
2305,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17936,17940,IdentifierMutator-Variable,depth,3,3,2.3578151E-4,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
2306,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17936,17940,IdentifierMutator-Variable,depth,2,4,1.5573182E-4,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(<mask> * out.indentAmount()));
    }"
2307,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17948,17959,MethodCallMutator,indentAmount,width,0,0.28623593,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
2308,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17948,17959,MethodCallMutator,indentAmount,length,1,0.18004155,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
2309,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17948,17959,MethodCallMutator,indentAmount,size,2,0.0890723,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
2310,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17948,17959,MethodCallMutator,indentAmount,depth,3,0.07979138,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
2311,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17948,17959,MethodCallMutator,indentAmount,padding,4,0.079239175,out.<mask>(),"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth * out.<mask>()));
    }"
2312,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17944,17946,IdentifierMutator-Variable,out,in,1,0.005084241,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
2313,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17944,17946,IdentifierMutator-Variable,out,this,2,0.0025068994,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
2314,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17944,17946,IdentifierMutator-Variable,out,Out,3,0.0020659047,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
2315,Node.java,indent,"void indent(StringBuilder accum, int depth, Document.OutputSettings out)",546,547,17944,17946,IdentifierMutator-Variable,out,doc,4,0.0017829671,<mask>,"void indent(StringBuilder accum, int depth, Document.OutputSettings out) {
        accum.append(""\n"").append(StringUtil.padding(depth *<mask>.indentAmount()));
    }"
2316,Node.java,equals,boolean equals(Object o),551,552,18041,18044,BinaryOperatorMutator,==,.,2,0.05710723,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2317,Node.java,equals,boolean equals(Object o),551,552,18041,18044,BinaryOperatorMutator,==,===,3,0.046707988,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2318,Node.java,equals,boolean equals(Object o),551,552,18041,18044,BinaryOperatorMutator,==,~,4,0.022419846,this <mask> o,"boolean equals(Object o) {
        if (this<mask>o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2319,Node.java,equals,boolean equals(Object o),551,552,18037,18040,IdentifierMutator-ThisAccess,this,n,0,0.19662511,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2320,Node.java,equals,boolean equals(Object o),551,552,18037,18040,IdentifierMutator-ThisAccess,this,c,2,0.10647061,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2321,Node.java,equals,boolean equals(Object o),551,552,18037,18040,IdentifierMutator-ThisAccess,this,node,3,0.08615085,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2322,Node.java,equals,boolean equals(Object o),551,552,18037,18040,IdentifierMutator-ThisAccess,this,parent,4,0.043321103,<mask>,"boolean equals(Object o) {
        if (<mask> == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2323,Node.java,equals,boolean equals(Object o),551,552,18045,18045,IdentifierMutator-Variable,o,other,1,2.3669617E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2324,Node.java,equals,boolean equals(Object o),551,552,18045,18045,IdentifierMutator-Variable,o,b,2,1.9543318E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2325,Node.java,equals,boolean equals(Object o),551,552,18045,18045,IdentifierMutator-Variable,o,obj,3,1.6423948E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2326,Node.java,equals,boolean equals(Object o),551,552,18045,18045,IdentifierMutator-Variable,o,n,4,1.2403382E-4,<mask>,"boolean equals(Object o) {
        if (this ==<mask>) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2327,Node.java,equals,boolean equals(Object o),551,552,18055,18058,IdentifierMutator-Literal,true,false,1,0.0064867586,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2328,Node.java,equals,boolean equals(Object o),551,552,18055,18058,IdentifierMutator-Literal,true,1,2,1.7415364E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2329,Node.java,equals,boolean equals(Object o),551,552,18055,18058,IdentifierMutator-Literal,true,this,3,1.3084931E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return<mask>;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return false;
    }"
2330,Node.java,equals,boolean equals(Object o),551,554,18171,18175,IdentifierMutator-Literal,false,true,1,0.1033134,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
2331,Node.java,equals,boolean equals(Object o),551,554,18171,18175,IdentifierMutator-Literal,false,False,2,3.8889408E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
2332,Node.java,equals,boolean equals(Object o),551,554,18171,18175,IdentifierMutator-Literal,false,null,3,1.7651658E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
2333,Node.java,equals,boolean equals(Object o),551,554,18171,18175,IdentifierMutator-Literal,false,0,4,1.7279087E-4,<mask>,"boolean equals(Object o) {
        if (this == o) return true;
        // todo: have nodes hold a child index, compare against that and parent (not children)
        return<mask>;
    }"
2334,Node.java,hashCode,int hashCode(),558,559,18248,18293,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,0,0,0.5492478,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2335,Node.java,hashCode,int hashCode(),558,559,18248,18293,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,31,1,0.28381833,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2336,Node.java,hashCode,int hashCode(),558,559,18248,18293,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,1,2,0.035167463,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2337,Node.java,hashCode,int hashCode(),558,559,18248,18293,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,32,3,0.015385917,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2338,Node.java,hashCode,int hashCode(),558,559,18248,18293,IdentifierMutator-Conditional,(parentNode!=null)?parentNode.hashCode():0,33,4,0.013728844,<mask>,"int hashCode() {
        int result =<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2339,Node.java,hashCode,int hashCode(),558,559,18258,18261,BinaryOperatorMutator,!=,==,1,0.0068828803,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2340,Node.java,hashCode,int hashCode(),558,559,18258,18261,BinaryOperatorMutator,!=,=,2,3.6754075E-4,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2341,Node.java,hashCode,int hashCode(),558,559,18258,18261,BinaryOperatorMutator,!=,==,3,6.524981E-5,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2342,Node.java,hashCode,int hashCode(),558,559,18258,18261,BinaryOperatorMutator,!=,N,4,2.3924626E-5,parentNode <mask> null,"int hashCode() {
        int result = parentNode<mask>null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2343,Node.java,hashCode,int hashCode(),558,559,18248,18257,IdentifierMutator-Variable,parentNode,parent,0,0.92472035,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2344,Node.java,hashCode,int hashCode(),558,559,18248,18257,IdentifierMutator-Variable,parentNode,node,1,0.0437377,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2345,Node.java,hashCode,int hashCode(),558,559,18248,18257,IdentifierMutator-Variable,parentNode,parents,2,0.0035413567,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2346,Node.java,hashCode,int hashCode(),558,559,18248,18257,IdentifierMutator-Variable,parentNode,attributes,3,0.003424351,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2347,Node.java,hashCode,int hashCode(),558,559,18248,18257,IdentifierMutator-Variable,parentNode,child,4,0.0015613304,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2348,Node.java,hashCode,int hashCode(),558,559,18248,18257,FieldReferenceMutator,parentNode,parent,0,0.92472035,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2349,Node.java,hashCode,int hashCode(),558,559,18248,18257,FieldReferenceMutator,parentNode,node,1,0.0437377,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2350,Node.java,hashCode,int hashCode(),558,559,18248,18257,FieldReferenceMutator,parentNode,parents,2,0.0035413567,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2351,Node.java,hashCode,int hashCode(),558,559,18248,18257,FieldReferenceMutator,parentNode,attributes,3,0.003424351,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2352,Node.java,hashCode,int hashCode(),558,559,18248,18257,FieldReferenceMutator,parentNode,child,4,0.0015613304,<mask>,"int hashCode() {
        int result =<mask> != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2353,Node.java,hashCode,int hashCode(),558,559,18262,18265,IdentifierMutator-Literal,null,root,2,2.488496E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2354,Node.java,hashCode,int hashCode(),558,559,18262,18265,IdentifierMutator-Literal,null,parent,3,1.6131914E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2355,Node.java,hashCode,int hashCode(),558,559,18262,18265,IdentifierMutator-Literal,null,0,4,1.4809392E-4,<mask>,"int hashCode() {
        int result = parentNode !=<mask> ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2356,Node.java,hashCode,int hashCode(),558,559,18280,18287,MethodCallMutator,hashCode,size,0,0.29312184,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2357,Node.java,hashCode,int hashCode(),558,559,18280,18287,MethodCallMutator,hashCode,hash,1,0.19141188,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2358,Node.java,hashCode,int hashCode(),558,559,18280,18287,MethodCallMutator,hashCode,length,2,0.101367846,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2359,Node.java,hashCode,int hashCode(),558,559,18280,18287,MethodCallMutator,hashCode,id,3,0.060609102,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2360,Node.java,hashCode,int hashCode(),558,559,18280,18287,MethodCallMutator,hashCode,code,4,0.059272666,parentNode.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.<mask>() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2361,Node.java,hashCode,int hashCode(),558,559,18269,18278,IdentifierMutator-Variable,parentNode,parent,0,0.6357488,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2362,Node.java,hashCode,int hashCode(),558,559,18269,18278,IdentifierMutator-Variable,parentNode,node,1,0.30845648,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2363,Node.java,hashCode,int hashCode(),558,559,18269,18278,IdentifierMutator-Variable,parentNode,root,2,0.007747188,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2364,Node.java,hashCode,int hashCode(),558,559,18269,18278,IdentifierMutator-Variable,parentNode,this,3,0.0067382404,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2365,Node.java,hashCode,int hashCode(),558,559,18269,18278,IdentifierMutator-Variable,parentNode,nodes,4,0.004380552,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2366,Node.java,hashCode,int hashCode(),558,559,18269,18278,FieldReferenceMutator,parentNode,parent,0,0.6357488,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2367,Node.java,hashCode,int hashCode(),558,559,18269,18278,FieldReferenceMutator,parentNode,node,1,0.30845648,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2368,Node.java,hashCode,int hashCode(),558,559,18269,18278,FieldReferenceMutator,parentNode,root,2,0.007747188,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2369,Node.java,hashCode,int hashCode(),558,559,18269,18278,FieldReferenceMutator,parentNode,this,3,0.0067382404,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2370,Node.java,hashCode,int hashCode(),558,559,18269,18278,FieldReferenceMutator,parentNode,nodes,4,0.004380552,<mask>,"int hashCode() {
        int result = parentNode != null ?<mask>.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2371,Node.java,hashCode,int hashCode(),558,559,18293,18293,IdentifierMutator-Literal,0,31,1,0.015452935,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2372,Node.java,hashCode,int hashCode(),558,559,18293,18293,IdentifierMutator-Literal,0,1,2,0.009385175,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2373,Node.java,hashCode,int hashCode(),558,559,18293,18293,IdentifierMutator-Literal,0,result,3,0.004605409,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2374,Node.java,hashCode,int hashCode(),558,559,18293,18293,IdentifierMutator-Literal,0,32,4,0.0012518544,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() :<mask>;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2375,Node.java,hashCode,int hashCode(),558,561,18385,18385,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),/,0,0.20716682,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2376,Node.java,hashCode,int hashCode(),558,561,18385,18385,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),|,1,0.17633605,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2377,Node.java,hashCode,int hashCode(),558,561,18385,18385,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),^,2,0.17230856,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2378,Node.java,hashCode,int hashCode(),558,561,18385,18385,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),*,3,0.14281899,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2379,Node.java,hashCode,int hashCode(),558,561,18385,18385,AssignmentMutator,result=(31*result)+(attributes!=null?attributes.hashCode():0),&,4,0.076136425,result <mask>= (31 * result) + (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result<mask>= 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2380,Node.java,hashCode,int hashCode(),558,561,18379,18384,IdentifierMutator-Variable,result,Result,2,7.831425E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2381,Node.java,hashCode,int hashCode(),558,561,18379,18384,IdentifierMutator-Variable,result,Result,3,5.759313E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2382,Node.java,hashCode,int hashCode(),558,561,18379,18384,IdentifierMutator-Variable,result,root,4,1.570768E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)<mask> = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2383,Node.java,hashCode,int hashCode(),558,561,18399,18401,BinaryOperatorMutator,+,^,1,0.026181787,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2384,Node.java,hashCode,int hashCode(),558,561,18399,18401,BinaryOperatorMutator,+,-,2,0.021312395,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2385,Node.java,hashCode,int hashCode(),558,561,18399,18401,BinaryOperatorMutator,+,%,3,0.007716078,(31 * result) <mask> (attributes != null ? attributes.hashCode() : 0),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result<mask>(attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2386,Node.java,hashCode,int hashCode(),558,561,18390,18392,BinaryOperatorMutator,*,(,1,0.22132441,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2387,Node.java,hashCode,int hashCode(),558,561,18390,18392,BinaryOperatorMutator,*,-(,2,0.12131694,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2388,Node.java,hashCode,int hashCode(),558,561,18390,18392,BinaryOperatorMutator,*,-,3,0.060256574,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2389,Node.java,hashCode,int hashCode(),558,561,18390,18392,BinaryOperatorMutator,*,+,4,0.015465668,31 <mask> result,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31<mask>result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2390,Node.java,hashCode,int hashCode(),558,561,18388,18389,IdentifierMutator-Literal,31,2,0,0.18932007,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2391,Node.java,hashCode,int hashCode(),558,561,18388,18389,IdentifierMutator-Literal,31,result,1,0.17856202,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2392,Node.java,hashCode,int hashCode(),558,561,18388,18389,IdentifierMutator-Literal,31,256,2,0.05527601,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2393,Node.java,hashCode,int hashCode(),558,561,18388,18389,IdentifierMutator-Literal,31,10,3,0.0492313,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2394,Node.java,hashCode,int hashCode(),558,561,18388,18389,IdentifierMutator-Literal,31,16,4,0.04506689,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result =<mask> * result + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2395,Node.java,hashCode,int hashCode(),558,561,18393,18398,IdentifierMutator-Variable,result,31,1,0.0030361828,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2396,Node.java,hashCode,int hashCode(),558,561,18393,18398,IdentifierMutator-Variable,result,count,2,0.0017871878,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2397,Node.java,hashCode,int hashCode(),558,561,18393,18398,IdentifierMutator-Variable,result,32,3,0.0014767329,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2398,Node.java,hashCode,int hashCode(),558,561,18393,18398,IdentifierMutator-Variable,result,2,4,0.0014477574,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 *<mask> + (attributes != null ? attributes.hashCode() : 0);
        return result;
    }"
2399,Node.java,hashCode,int hashCode(),558,561,18402,18449,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),1,0,0.3662169,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
2400,Node.java,hashCode,int hashCode(),558,561,18402,18449,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),result,1,0.22801204,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
2401,Node.java,hashCode,int hashCode(),558,561,18402,18449,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),0,2,0.13980724,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
2402,Node.java,hashCode,int hashCode(),558,561,18402,18449,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),31,3,0.038822476,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
2403,Node.java,hashCode,int hashCode(),558,561,18402,18449,IdentifierMutator-Conditional,(attributes!=null?attributes.hashCode():0),2,4,0.017362004,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result +<mask>;
        return result;
    }"
2404,Node.java,hashCode,int hashCode(),558,561,18413,18416,BinaryOperatorMutator,!=,==,1,0.0011443689,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
2405,Node.java,hashCode,int hashCode(),558,561,18413,18416,BinaryOperatorMutator,!=,=,2,1.6116862E-4,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
2406,Node.java,hashCode,int hashCode(),558,561,18413,18416,BinaryOperatorMutator,!=,==,3,7.3613635E-5,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
2407,Node.java,hashCode,int hashCode(),558,561,18413,18416,BinaryOperatorMutator,!=,N,4,2.1926217E-5,attributes <mask> null,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes<mask>null ? attributes.hashCode() : 0);
        return result;
    }"
2408,Node.java,hashCode,int hashCode(),558,561,18403,18412,IdentifierMutator-Variable,attributes,attr,0,0.3590064,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2409,Node.java,hashCode,int hashCode(),558,561,18403,18412,IdentifierMutator-Variable,attributes,attribute,1,0.16794164,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2410,Node.java,hashCode,int hashCode(),558,561,18403,18412,IdentifierMutator-Variable,attributes,Attributes,2,0.1396205,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2411,Node.java,hashCode,int hashCode(),558,561,18403,18412,IdentifierMutator-Variable,attributes,ributes,3,0.11408367,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2412,Node.java,hashCode,int hashCode(),558,561,18403,18412,FieldReferenceMutator,attributes,attr,0,0.3590064,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2413,Node.java,hashCode,int hashCode(),558,561,18403,18412,FieldReferenceMutator,attributes,attribute,1,0.16794164,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2414,Node.java,hashCode,int hashCode(),558,561,18403,18412,FieldReferenceMutator,attributes,Attributes,2,0.1396205,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2415,Node.java,hashCode,int hashCode(),558,561,18403,18412,FieldReferenceMutator,attributes,ributes,3,0.11408367,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (<mask> != null ? attributes.hashCode() : 0);
        return result;
    }"
2416,Node.java,hashCode,int hashCode(),558,561,18417,18420,IdentifierMutator-Literal,null,nil,2,1.3053873E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
2417,Node.java,hashCode,int hashCode(),558,561,18417,18420,IdentifierMutator-Literal,null,0,3,3.1078074E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
2418,Node.java,hashCode,int hashCode(),558,561,18417,18420,IdentifierMutator-Literal,null,NULL,4,2.2807548E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes !=<mask> ? attributes.hashCode() : 0);
        return result;
    }"
2419,Node.java,hashCode,int hashCode(),558,561,18435,18442,MethodCallMutator,hashCode,size,0,0.8072816,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
2420,Node.java,hashCode,int hashCode(),558,561,18435,18442,MethodCallMutator,hashCode,length,1,0.10269701,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
2421,Node.java,hashCode,int hashCode(),558,561,18435,18442,MethodCallMutator,hashCode,hash,2,0.013312274,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
2422,Node.java,hashCode,int hashCode(),558,561,18435,18442,MethodCallMutator,hashCode,height,3,0.009949497,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
2423,Node.java,hashCode,int hashCode(),558,561,18435,18442,MethodCallMutator,hashCode,count,4,0.009947201,attributes.<mask>(),"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.<mask>() : 0);
        return result;
    }"
2424,Node.java,hashCode,int hashCode(),558,561,18424,18433,IdentifierMutator-Variable,attributes,ributes,1,4.5029365E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2425,Node.java,hashCode,int hashCode(),558,561,18424,18433,IdentifierMutator-Variable,attributes,Attributes,2,2.325716E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2426,Node.java,hashCode,int hashCode(),558,561,18424,18433,IdentifierMutator-Variable,attributes,attribute,3,2.0348771E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2427,Node.java,hashCode,int hashCode(),558,561,18424,18433,IdentifierMutator-Variable,attributes,this,4,9.4860254E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2428,Node.java,hashCode,int hashCode(),558,561,18424,18433,FieldReferenceMutator,attributes,ributes,1,4.5029365E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2429,Node.java,hashCode,int hashCode(),558,561,18424,18433,FieldReferenceMutator,attributes,Attributes,2,2.325716E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2430,Node.java,hashCode,int hashCode(),558,561,18424,18433,FieldReferenceMutator,attributes,attribute,3,2.0348771E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2431,Node.java,hashCode,int hashCode(),558,561,18424,18433,FieldReferenceMutator,attributes,this,4,9.4860254E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ?<mask>.hashCode() : 0);
        return result;
    }"
2432,Node.java,hashCode,int hashCode(),558,561,18448,18448,IdentifierMutator-Literal,0,result,1,0.035571,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
2433,Node.java,hashCode,int hashCode(),558,561,18448,18448,IdentifierMutator-Literal,0,1,2,0.010863048,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
2434,Node.java,hashCode,int hashCode(),558,561,18448,18448,IdentifierMutator-Literal,0,31,3,0.0052357614,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
2435,Node.java,hashCode,int hashCode(),558,561,18448,18448,IdentifierMutator-Literal,0,32,4,6.2935485E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() :<mask>);
        return result;
    }"
2436,Node.java,hashCode,int hashCode(),558,562,18467,18472,IdentifierMutator-Variable,result,0,1,7.2233443E-4,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
2437,Node.java,hashCode,int hashCode(),558,562,18467,18472,IdentifierMutator-Variable,result,root,2,6.723705E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
2438,Node.java,hashCode,int hashCode(),558,562,18467,18472,IdentifierMutator-Variable,result,count,3,5.8172063E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
2439,Node.java,hashCode,int hashCode(),558,562,18467,18472,IdentifierMutator-Variable,result,true,4,5.5868244E-5,<mask>,"int hashCode() {
        int result = parentNode != null ? parentNode.hashCode() : 0;
        // not children, or will block stack as they go back up to parent)
        result = 31 * result + (attributes != null ? attributes.hashCode() : 0);
        return<mask>;
    }"
2440,Node.java,clone,Node clone(),574,575,18981,18987,MethodCallMutator,doClone,split,0,0.2910709,<mask>(null),"Node clone() {
        return<mask>(null); // splits for orphan
    }"
2441,Node.java,clone,Node clone(),574,575,18981,18987,MethodCallMutator,doClone,clone,1,0.08165508,<mask>(null),"Node clone() {
        return<mask>(null); // splits for orphan
    }"
2442,Node.java,clone,Node clone(),574,575,18981,18987,MethodCallMutator,doClone,create,2,0.040906522,<mask>(null),"Node clone() {
        return<mask>(null); // splits for orphan
    }"
2443,Node.java,clone,Node clone(),574,575,18981,18987,MethodCallMutator,doClone,copy,3,0.03564706,<mask>(null),"Node clone() {
        return<mask>(null); // splits for orphan
    }"
2444,Node.java,clone,Node clone(),574,575,18981,18987,MethodCallMutator,doClone,merge,4,0.02013283,<mask>(null),"Node clone() {
        return<mask>(null); // splits for orphan
    }"
2445,Node.java,clone,Node clone(),574,575,18989,18992,IdentifierMutator-Literal,null,node,0,0.6214794,<mask>,"Node clone() {
        return doClone(<mask>); // splits for orphan
    }"
2446,Node.java,clone,Node clone(),574,575,18989,18992,IdentifierMutator-Literal,null,clone,1,0.047926817,<mask>,"Node clone() {
        return doClone(<mask>); // splits for orphan
    }"
2447,Node.java,clone,Node clone(),574,575,18989,18992,IdentifierMutator-Literal,null,parent,2,0.040639833,<mask>,"Node clone() {
        return doClone(<mask>); // splits for orphan
    }"
2448,Node.java,clone,Node clone(),574,575,18989,18992,IdentifierMutator-Literal,null,this,3,0.021006718,<mask>,"Node clone() {
        return doClone(<mask>); // splits for orphan
    }"
2449,Node.java,clone,Node clone(),574,575,18989,18992,IdentifierMutator-Literal,null,self,4,0.019763762,<mask>,"Node clone() {
        return doClone(<mask>); // splits for orphan
    }"
2450,Node.java,doClone,Node doClone(Node parent),578,581,19117,19117,AssignmentMutator,clone=((org.jsoup.nodes.Node)(super.clone())),|,0,0.34968114,clone <mask>= ((org.jsoup.nodes.Node) (super.clone())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone<mask>= (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2451,Node.java,doClone,Node doClone(Node parent),578,581,19117,19117,AssignmentMutator,clone=((org.jsoup.nodes.Node)(super.clone())),//,1,0.10600991,clone <mask>= ((org.jsoup.nodes.Node) (super.clone())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone<mask>= (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2452,Node.java,doClone,Node doClone(Node parent),578,581,19117,19117,AssignmentMutator,clone=((org.jsoup.nodes.Node)(super.clone())),&,2,0.08300152,clone <mask>= ((org.jsoup.nodes.Node) (super.clone())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone<mask>= (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2453,Node.java,doClone,Node doClone(Node parent),578,581,19117,19117,AssignmentMutator,clone=((org.jsoup.nodes.Node)(super.clone())),*,3,0.07171916,clone <mask>= ((org.jsoup.nodes.Node) (super.clone())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone<mask>= (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2454,Node.java,doClone,Node doClone(Node parent),578,581,19117,19117,AssignmentMutator,clone=((org.jsoup.nodes.Node)(super.clone())),!,4,0.050069284,clone <mask>= ((org.jsoup.nodes.Node) (super.clone())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone<mask>= (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2455,Node.java,doClone,Node doClone(Node parent),578,581,19112,19116,IdentifierMutator-Variable,clone,copy,2,1.3521052E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {<mask> = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2456,Node.java,doClone,Node doClone(Node parent),578,581,19112,19116,IdentifierMutator-Variable,clone,cloning,3,9.6171294E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {<mask> = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2457,Node.java,doClone,Node doClone(Node parent),578,581,19112,19116,IdentifierMutator-Variable,clone,child,4,4.397306E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {<mask> = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2458,Node.java,doClone,Node doClone(Node parent),578,581,19133,19137,MethodCallMutator,clone,copy,1,2.7260373E-4,((Node) (super.<mask>())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.<mask>();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2459,Node.java,doClone,Node doClone(Node parent),578,581,19133,19137,MethodCallMutator,clone,call,2,1.7508844E-4,((Node) (super.<mask>())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.<mask>();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2460,Node.java,doClone,Node doClone(Node parent),578,581,19133,19137,MethodCallMutator,clone,pop,3,1.176603E-4,((Node) (super.<mask>())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.<mask>();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2461,Node.java,doClone,Node doClone(Node parent),578,581,19133,19137,MethodCallMutator,clone,next,4,8.953429E-5,((Node) (super.<mask>())),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.<mask>();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2462,Node.java,doClone,Node doClone(Node parent),578,581,19127,19131,IdentifierMutator-Variable,super,parent,0,0.45338544,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node)<mask>.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2463,Node.java,doClone,Node doClone(Node parent),578,581,19127,19131,IdentifierMutator-Variable,super,parent,1,0.16785936,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node)<mask>.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2464,Node.java,doClone,Node doClone(Node parent),578,581,19127,19131,IdentifierMutator-Variable,super,source,2,0.06643866,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node)<mask>.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2465,Node.java,doClone,Node doClone(Node parent),578,581,19127,19131,IdentifierMutator-Variable,super,node,3,0.056451127,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node)<mask>.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2466,Node.java,doClone,Node doClone(Node parent),578,581,19127,19131,IdentifierMutator-Variable,super,node,4,0.0150085585,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node)<mask>.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2467,Node.java,doClone,Node doClone(Node parent),578,583,19230,19230,IdentifierMutator-Variable,e,de,1,3.5464912E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(<mask>);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2468,Node.java,doClone,Node doClone(Node parent),578,583,19230,19230,IdentifierMutator-Variable,e,ee,3,1.10146335E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(<mask>);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2469,Node.java,doClone,Node doClone(Node parent),578,583,19230,19230,IdentifierMutator-Variable,e,es,4,9.530553E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(<mask>);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2470,Node.java,doClone,Node doClone(Node parent),578,586,19269,19269,AssignmentMutator,clone.parentNode=parent,|,0,0.22898884,clone.parentNode <mask>= parent,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode<mask>= parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2471,Node.java,doClone,Node doClone(Node parent),578,586,19269,19269,AssignmentMutator,clone.parentNode=parent,!,1,0.21001819,clone.parentNode <mask>= parent,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode<mask>= parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2472,Node.java,doClone,Node doClone(Node parent),578,586,19269,19269,AssignmentMutator,clone.parentNode=parent,||,2,0.20936784,clone.parentNode <mask>= parent,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode<mask>= parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2473,Node.java,doClone,Node doClone(Node parent),578,586,19269,19269,AssignmentMutator,clone.parentNode=parent,*,3,0.10084511,clone.parentNode <mask>= parent,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode<mask>= parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2474,Node.java,doClone,Node doClone(Node parent),578,586,19269,19269,AssignmentMutator,clone.parentNode=parent,|,4,0.050395854,clone.parentNode <mask>= parent,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode<mask>= parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2475,Node.java,doClone,Node doClone(Node parent),578,586,19253,19268,IdentifierMutator-Variable,clone.parentNode,clone,0,0.94909066,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2476,Node.java,doClone,Node doClone(Node parent),578,586,19253,19268,IdentifierMutator-Variable,clone.parentNode,clone,1,0.019514361,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2477,Node.java,doClone,Node doClone(Node parent),578,586,19253,19268,IdentifierMutator-Variable,clone.parentNode,copy,2,0.0065844045,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2478,Node.java,doClone,Node doClone(Node parent),578,586,19253,19268,IdentifierMutator-Variable,clone.parentNode,parent,3,0.0061923396,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2479,Node.java,doClone,Node doClone(Node parent),578,586,19253,19268,IdentifierMutator-Variable,clone.parentNode,child,4,0.002745029,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2480,Node.java,doClone,Node doClone(Node parent),578,586,19253,19257,IdentifierMutator-Variable,clone,copy,2,7.4455724E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask>.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2481,Node.java,doClone,Node doClone(Node parent),578,586,19253,19257,IdentifierMutator-Variable,clone,child,3,3.443492E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask>.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2482,Node.java,doClone,Node doClone(Node parent),578,586,19253,19257,IdentifierMutator-Variable,clone,parent,4,1.9929175E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }<mask>.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2483,Node.java,doClone,Node doClone(Node parent),578,586,19259,19268,FieldReferenceMutator,parentNode,parent,0,0.9752229,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2484,Node.java,doClone,Node doClone(Node parent),578,586,19259,19268,FieldReferenceMutator,parentNode,node,1,0.005314035,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2485,Node.java,doClone,Node doClone(Node parent),578,586,19259,19268,FieldReferenceMutator,parentNode,parents,2,0.002898823,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2486,Node.java,doClone,Node doClone(Node parent),578,586,19259,19268,FieldReferenceMutator,parentNode,child,3,0.0020316483,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2487,Node.java,doClone,Node doClone(Node parent),578,586,19259,19268,FieldReferenceMutator,parentNode,original,4,0.0017574069,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.<mask> = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2488,Node.java,doClone,Node doClone(Node parent),578,586,19272,19277,IdentifierMutator-Variable,parent,null,1,0.03715942,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode =<mask>; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2489,Node.java,doClone,Node doClone(Node parent),578,586,19272,19277,IdentifierMutator-Variable,parent,this,2,0.015898973,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode =<mask>; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2490,Node.java,doClone,Node doClone(Node parent),578,586,19272,19277,IdentifierMutator-Variable,parent,node,3,0.0019368913,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode =<mask>; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2491,Node.java,doClone,Node doClone(Node parent),578,586,19272,19277,IdentifierMutator-Variable,parent,true,4,0.0010548546,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode =<mask>; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2492,Node.java,doClone,Node doClone(Node parent),578,587,19348,19348,AssignmentMutator,clone.siblingIndex=(parent==null)?0:siblingIndex,|,0,0.5004607,clone.siblingIndex <mask>= (parent == null) ? 0 : siblingIndex,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex<mask>= parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2493,Node.java,doClone,Node doClone(Node parent),578,587,19348,19348,AssignmentMutator,clone.siblingIndex=(parent==null)?0:siblingIndex,*,1,0.24905601,clone.siblingIndex <mask>= (parent == null) ? 0 : siblingIndex,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex<mask>= parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2494,Node.java,doClone,Node doClone(Node parent),578,587,19348,19348,AssignmentMutator,clone.siblingIndex=(parent==null)?0:siblingIndex,^,2,0.04084195,clone.siblingIndex <mask>= (parent == null) ? 0 : siblingIndex,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex<mask>= parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2495,Node.java,doClone,Node doClone(Node parent),578,587,19348,19348,AssignmentMutator,clone.siblingIndex=(parent==null)?0:siblingIndex,/,3,0.035379417,clone.siblingIndex <mask>= (parent == null) ? 0 : siblingIndex,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex<mask>= parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2496,Node.java,doClone,Node doClone(Node parent),578,587,19348,19348,AssignmentMutator,clone.siblingIndex=(parent==null)?0:siblingIndex,||,4,0.027430868,clone.siblingIndex <mask>= (parent == null) ? 0 : siblingIndex,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex<mask>= parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2497,Node.java,doClone,Node doClone(Node parent),578,587,19330,19347,IdentifierMutator-Variable,clone.siblingIndex,Index,0,0.8891148,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2498,Node.java,doClone,Node doClone(Node parent),578,587,19330,19347,IdentifierMutator-Variable,clone.siblingIndex,index,1,0.07789185,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2499,Node.java,doClone,Node doClone(Node parent),578,587,19330,19347,IdentifierMutator-Variable,clone.siblingIndex,Offset,2,0.006232919,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2500,Node.java,doClone,Node doClone(Node parent),578,587,19330,19347,IdentifierMutator-Variable,clone.siblingIndex,Position,3,0.0039418046,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2501,Node.java,doClone,Node doClone(Node parent),578,587,19330,19347,IdentifierMutator-Variable,clone.siblingIndex,Id,4,0.001607836,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2502,Node.java,doClone,Node doClone(Node parent),578,587,19330,19334,IdentifierMutator-Variable,clone,copy,1,6.18782E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask>.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2503,Node.java,doClone,Node doClone(Node parent),578,587,19330,19334,IdentifierMutator-Variable,clone,node,3,1.87427E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask>.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2504,Node.java,doClone,Node doClone(Node parent),578,587,19330,19334,IdentifierMutator-Variable,clone,parent,4,1.550439E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split<mask>.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2505,Node.java,doClone,Node doClone(Node parent),578,587,19336,19347,FieldReferenceMutator,siblingIndex,index,0,0.8581967,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2506,Node.java,doClone,Node doClone(Node parent),578,587,19336,19347,FieldReferenceMutator,siblingIndex,offset,1,0.045900114,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2507,Node.java,doClone,Node doClone(Node parent),578,587,19336,19347,FieldReferenceMutator,siblingIndex,position,2,0.014484797,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2508,Node.java,doClone,Node doClone(Node parent),578,587,19336,19347,FieldReferenceMutator,siblingIndex,child,3,0.0065340293,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2509,Node.java,doClone,Node doClone(Node parent),578,587,19336,19347,FieldReferenceMutator,siblingIndex,parent,4,0.0062438464,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.<mask> = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2510,Node.java,doClone,Node doClone(Node parent),578,587,19351,19383,IdentifierMutator-Conditional,(parent==null)?0:siblingIndex,0,0,0.58405316,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2511,Node.java,doClone,Node doClone(Node parent),578,587,19351,19383,IdentifierMutator-Conditional,(parent==null)?0:siblingIndex,index,1,0.2285179,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2512,Node.java,doClone,Node doClone(Node parent),578,587,19351,19383,IdentifierMutator-Conditional,(parent==null)?0:siblingIndex,1,2,0.052877214,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2513,Node.java,doClone,Node doClone(Node parent),578,587,19351,19383,IdentifierMutator-Conditional,(parent==null)?0:siblingIndex,i,3,0.018884866,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2514,Node.java,doClone,Node doClone(Node parent),578,587,19351,19383,IdentifierMutator-Conditional,(parent==null)?0:siblingIndex,sibling,4,0.014816726,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2515,Node.java,doClone,Node doClone(Node parent),578,587,19357,19360,BinaryOperatorMutator,==,=,2,0.038384747,parent <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent<mask>null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2516,Node.java,doClone,Node doClone(Node parent),578,587,19357,19360,BinaryOperatorMutator,==,!=,3,0.008411915,parent <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent<mask>null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2517,Node.java,doClone,Node doClone(Node parent),578,587,19357,19360,BinaryOperatorMutator,==,.,4,0.004112664,parent <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent<mask>null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2518,Node.java,doClone,Node doClone(Node parent),578,587,19351,19356,IdentifierMutator-Variable,parent,index,1,0.17249577,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask> == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2519,Node.java,doClone,Node doClone(Node parent),578,587,19351,19356,IdentifierMutator-Variable,parent,siblings,2,0.07584427,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask> == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2520,Node.java,doClone,Node doClone(Node parent),578,587,19351,19356,IdentifierMutator-Variable,parent,attributes,3,0.053023227,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask> == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2521,Node.java,doClone,Node doClone(Node parent),578,587,19351,19356,IdentifierMutator-Variable,parent,sibling,4,0.04541857,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex =<mask> == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2522,Node.java,doClone,Node doClone(Node parent),578,587,19361,19364,IdentifierMutator-Literal,null,this,1,0.0051890207,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent ==<mask> ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2523,Node.java,doClone,Node doClone(Node parent),578,587,19361,19364,IdentifierMutator-Literal,null,node,3,0.0011513482,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent ==<mask> ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2524,Node.java,doClone,Node doClone(Node parent),578,587,19361,19364,IdentifierMutator-Literal,null,root,4,7.6817104E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent ==<mask> ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2525,Node.java,doClone,Node doClone(Node parent),578,587,19368,19368,IdentifierMutator-Literal,0,null,1,0.20444371,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ?<mask> : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2526,Node.java,doClone,Node doClone(Node parent),578,587,19368,19368,IdentifierMutator-Literal,0,1,2,0.065761305,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ?<mask> : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2527,Node.java,doClone,Node doClone(Node parent),578,587,19368,19368,IdentifierMutator-Literal,0,"""""",3,0.00443364,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ?<mask> : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2528,Node.java,doClone,Node doClone(Node parent),578,587,19368,19368,IdentifierMutator-Literal,0,undefined,4,0.0027502775,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ?<mask> : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2529,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,IdentifierMutator-Variable,siblingIndex,parent,0,0.654417,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2530,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,IdentifierMutator-Variable,siblingIndex,1,1,0.123820804,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2531,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,IdentifierMutator-Variable,siblingIndex,index,2,0.09494811,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2532,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,IdentifierMutator-Variable,siblingIndex,0,3,0.059097156,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2533,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,IdentifierMutator-Variable,siblingIndex,null,4,0.008782181,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2534,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,FieldReferenceMutator,siblingIndex,parent,0,0.654417,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2535,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,FieldReferenceMutator,siblingIndex,1,1,0.123820804,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2536,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,FieldReferenceMutator,siblingIndex,index,2,0.09494811,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2537,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,FieldReferenceMutator,siblingIndex,0,3,0.059097156,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2538,Node.java,doClone,Node doClone(Node parent),578,587,19372,19383,FieldReferenceMutator,siblingIndex,null,4,0.008782181,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 :<mask>;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2539,Node.java,doClone,Node doClone(Node parent),578,588,19410,19410,AssignmentMutator,clone.attributes=(attributes!=null)?attributes.clone():null,||,0,0.23064463,clone.attributes <mask>= (attributes != null) ? attributes.clone() : null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes<mask>= attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2540,Node.java,doClone,Node doClone(Node parent),578,588,19410,19410,AssignmentMutator,clone.attributes=(attributes!=null)?attributes.clone():null,||,1,0.13571215,clone.attributes <mask>= (attributes != null) ? attributes.clone() : null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes<mask>= attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2541,Node.java,doClone,Node doClone(Node parent),578,588,19410,19410,AssignmentMutator,clone.attributes=(attributes!=null)?attributes.clone():null,!,2,0.08311969,clone.attributes <mask>= (attributes != null) ? attributes.clone() : null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes<mask>= attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2542,Node.java,doClone,Node doClone(Node parent),578,588,19410,19410,AssignmentMutator,clone.attributes=(attributes!=null)?attributes.clone():null,*,3,0.07786101,clone.attributes <mask>= (attributes != null) ? attributes.clone() : null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes<mask>= attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2543,Node.java,doClone,Node doClone(Node parent),578,588,19410,19410,AssignmentMutator,clone.attributes=(attributes!=null)?attributes.clone():null,|,4,0.06593582,clone.attributes <mask>= (attributes != null) ? attributes.clone() : null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes<mask>= attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2544,Node.java,doClone,Node doClone(Node parent),578,588,19394,19409,IdentifierMutator-Variable,clone.attributes,attributes,0,0.34444755,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2545,Node.java,doClone,Node doClone(Node parent),578,588,19394,19409,IdentifierMutator-Variable,clone.attributes,//,1,0.2200058,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2546,Node.java,doClone,Node doClone(Node parent),578,588,19394,19409,IdentifierMutator-Variable,clone.attributes,clone,2,0.21960185,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2547,Node.java,doClone,Node doClone(Node parent),578,588,19394,19409,IdentifierMutator-Variable,clone.attributes,parent,3,0.07012888,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2548,Node.java,doClone,Node doClone(Node parent),578,588,19394,19409,IdentifierMutator-Variable,clone.attributes,original,4,0.014610018,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2549,Node.java,doClone,Node doClone(Node parent),578,588,19394,19398,IdentifierMutator-Variable,clone,copy,2,2.65604E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask>.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2550,Node.java,doClone,Node doClone(Node parent),578,588,19394,19398,IdentifierMutator-Variable,clone,parent,3,1.1096631E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask>.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2551,Node.java,doClone,Node doClone(Node parent),578,588,19394,19398,IdentifierMutator-Variable,clone,node,4,8.8365836E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;<mask>.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2552,Node.java,doClone,Node doClone(Node parent),578,588,19400,19409,FieldReferenceMutator,attributes,attr,0,0.1551094,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2553,Node.java,doClone,Node doClone(Node parent),578,588,19400,19409,FieldReferenceMutator,attributes,properties,1,0.14302436,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2554,Node.java,doClone,Node doClone(Node parent),578,588,19400,19409,FieldReferenceMutator,attributes,metadata,2,0.09396276,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2555,Node.java,doClone,Node doClone(Node parent),578,588,19400,19409,FieldReferenceMutator,attributes,attribute,3,0.07609206,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2556,Node.java,doClone,Node doClone(Node parent),578,588,19400,19409,FieldReferenceMutator,attributes,ributes,4,0.07538134,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.<mask> = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2557,Node.java,doClone,Node doClone(Node parent),578,588,19413,19458,IdentifierMutator-Conditional,(attributes!=null)?attributes.clone():null,attributes,0,0.99765164,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2558,Node.java,doClone,Node doClone(Node parent),578,588,19413,19458,IdentifierMutator-Conditional,(attributes!=null)?attributes.clone():null,attribute,1,4.9779925E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2559,Node.java,doClone,Node doClone(Node parent),578,588,19413,19458,IdentifierMutator-Conditional,(attributes!=null)?attributes.clone():null,ributes,2,2.7643386E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2560,Node.java,doClone,Node doClone(Node parent),578,588,19413,19458,IdentifierMutator-Conditional,(attributes!=null)?attributes.clone():null,properties,3,1.9087664E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2561,Node.java,doClone,Node doClone(Node parent),578,588,19413,19458,IdentifierMutator-Conditional,(attributes!=null)?attributes.clone():null,Attributes,4,1.5244843E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2562,Node.java,doClone,Node doClone(Node parent),578,588,19423,19426,BinaryOperatorMutator,!=,==,1,0.0037222335,attributes <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes<mask>null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2563,Node.java,doClone,Node doClone(Node parent),578,588,19423,19426,BinaryOperatorMutator,!=,==,2,7.140018E-4,attributes <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes<mask>null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2564,Node.java,doClone,Node doClone(Node parent),578,588,19423,19426,BinaryOperatorMutator,!=,.,3,2.2751246E-4,attributes <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes<mask>null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2565,Node.java,doClone,Node doClone(Node parent),578,588,19423,19426,BinaryOperatorMutator,!=,=,4,1.4943672E-4,attributes <mask> null,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes<mask>null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2566,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,IdentifierMutator-Variable,attributes,parent,1,0.00760077,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2567,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,IdentifierMutator-Variable,attributes,attribute,2,9.5384434E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2568,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,IdentifierMutator-Variable,attributes,options,3,1.2738802E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2569,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,IdentifierMutator-Variable,attributes,children,4,1.03115635E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2570,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,FieldReferenceMutator,attributes,parent,1,0.00760077,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2571,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,FieldReferenceMutator,attributes,attribute,2,9.5384434E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2572,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,FieldReferenceMutator,attributes,options,3,1.2738802E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2573,Node.java,doClone,Node doClone(Node parent),578,588,19413,19422,FieldReferenceMutator,attributes,children,4,1.03115635E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes =<mask> != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2574,Node.java,doClone,Node doClone(Node parent),578,588,19427,19430,IdentifierMutator-Literal,null,nil,2,4.462285E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes !=<mask> ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2575,Node.java,doClone,Node doClone(Node parent),578,588,19427,19430,IdentifierMutator-Literal,null,NULL,3,4.1617073E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes !=<mask> ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2576,Node.java,doClone,Node doClone(Node parent),578,588,19427,19430,IdentifierMutator-Literal,null,this,4,1.12904745E-5,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes !=<mask> ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2577,Node.java,doClone,Node doClone(Node parent),578,588,19445,19449,MethodCallMutator,clone,copy,1,0.032972276,attributes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.<mask>() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2578,Node.java,doClone,Node doClone(Node parent),578,588,19445,19449,MethodCallMutator,clone,children,2,0.006995181,attributes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.<mask>() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2579,Node.java,doClone,Node doClone(Node parent),578,588,19445,19449,MethodCallMutator,clone,values,3,0.0066435775,attributes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.<mask>() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2580,Node.java,doClone,Node doClone(Node parent),578,588,19445,19449,MethodCallMutator,clone,node,4,0.0039693094,attributes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.<mask>() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2581,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,IdentifierMutator-Variable,attributes,parent,1,0.0013526786,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2582,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,IdentifierMutator-Variable,attributes,attribute,2,4.9223815E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2583,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,IdentifierMutator-Variable,attributes,this,3,1.7394804E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2584,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,IdentifierMutator-Variable,attributes,super,4,1.0931466E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2585,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,FieldReferenceMutator,attributes,parent,1,0.0013526786,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2586,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,FieldReferenceMutator,attributes,attribute,2,4.9223815E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2587,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,FieldReferenceMutator,attributes,this,3,1.7394804E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2588,Node.java,doClone,Node doClone(Node parent),578,588,19434,19443,FieldReferenceMutator,attributes,super,4,1.0931466E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ?<mask>.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2589,Node.java,doClone,Node doClone(Node parent),578,588,19455,19458,IdentifierMutator-Literal,null,attributes,1,0.42035523,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() :<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2590,Node.java,doClone,Node doClone(Node parent),578,588,19455,19458,IdentifierMutator-Literal,null,"""""",2,0.019245567,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() :<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2591,Node.java,doClone,Node doClone(Node parent),578,588,19455,19458,IdentifierMutator-Literal,null,undefined,3,0.009218137,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() :<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2592,Node.java,doClone,Node doClone(Node parent),578,588,19455,19458,IdentifierMutator-Literal,null,nil,4,0.004240672,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() :<mask>;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2593,Node.java,doClone,Node doClone(Node parent),578,589,19482,19482,AssignmentMutator,clone.baseUri=baseUri,||,0,0.4588013,clone.baseUri <mask>= baseUri,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri<mask>= baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2594,Node.java,doClone,Node doClone(Node parent),578,589,19482,19482,AssignmentMutator,clone.baseUri=baseUri,+,1,0.050166,clone.baseUri <mask>= baseUri,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri<mask>= baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2595,Node.java,doClone,Node doClone(Node parent),578,589,19482,19482,AssignmentMutator,clone.baseUri=baseUri,*,2,0.049533624,clone.baseUri <mask>= baseUri,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri<mask>= baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2596,Node.java,doClone,Node doClone(Node parent),578,589,19482,19482,AssignmentMutator,clone.baseUri=baseUri,||,3,0.04070346,clone.baseUri <mask>= baseUri,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri<mask>= baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2597,Node.java,doClone,Node doClone(Node parent),578,589,19482,19482,AssignmentMutator,clone.baseUri=baseUri,URL,4,0.035493486,clone.baseUri <mask>= baseUri,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri<mask>= baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2598,Node.java,doClone,Node doClone(Node parent),578,589,19469,19481,IdentifierMutator-Variable,clone.baseUri,url,0,0.3103145,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2599,Node.java,doClone,Node doClone(Node parent),578,589,19469,19481,IdentifierMutator-Variable,clone.baseUri,parent,1,0.20916407,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2600,Node.java,doClone,Node doClone(Node parent),578,589,19469,19481,IdentifierMutator-Variable,clone.baseUri,href,2,0.065732464,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2601,Node.java,doClone,Node doClone(Node parent),578,589,19469,19481,IdentifierMutator-Variable,clone.baseUri,URI,3,0.048539456,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2602,Node.java,doClone,Node doClone(Node parent),578,589,19469,19481,IdentifierMutator-Variable,clone.baseUri,source,4,0.034517452,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2603,Node.java,doClone,Node doClone(Node parent),578,589,19469,19473,IdentifierMutator-Variable,clone,copy,2,4.378739E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask>.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2604,Node.java,doClone,Node doClone(Node parent),578,589,19469,19473,IdentifierMutator-Variable,clone,parent,3,1.8694614E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask>.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2605,Node.java,doClone,Node doClone(Node parent),578,589,19469,19473,IdentifierMutator-Variable,clone,node,4,1.2513011E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;<mask>.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2606,Node.java,doClone,Node doClone(Node parent),578,589,19475,19481,FieldReferenceMutator,baseUri,uri,0,0.60530216,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2607,Node.java,doClone,Node doClone(Node parent),578,589,19475,19481,FieldReferenceMutator,baseUri,url,1,0.12403558,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2608,Node.java,doClone,Node doClone(Node parent),578,589,19475,19481,FieldReferenceMutator,baseUri,href,2,0.0861894,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2609,Node.java,doClone,Node doClone(Node parent),578,589,19475,19481,FieldReferenceMutator,baseUri,path,3,0.047968425,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2610,Node.java,doClone,Node doClone(Node parent),578,589,19475,19481,FieldReferenceMutator,baseUri,base,4,0.03383553,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.<mask> = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2611,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,IdentifierMutator-Variable,baseUri,url,0,0.28330883,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2612,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,IdentifierMutator-Variable,baseUri,"""""",1,0.20850593,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2613,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,IdentifierMutator-Variable,baseUri,base,2,0.106941715,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2614,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,IdentifierMutator-Variable,baseUri,null,3,0.106477246,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2615,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,IdentifierMutator-Variable,baseUri,path,4,0.035110194,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2616,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,FieldReferenceMutator,baseUri,url,0,0.28330883,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2617,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,FieldReferenceMutator,baseUri,"""""",1,0.20850593,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2618,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,FieldReferenceMutator,baseUri,base,2,0.106941715,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2619,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,FieldReferenceMutator,baseUri,null,3,0.106477246,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2620,Node.java,doClone,Node doClone(Node parent),578,589,19485,19491,FieldReferenceMutator,baseUri,path,4,0.035110194,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri =<mask>;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2621,Node.java,doClone,Node doClone(Node parent),578,590,19518,19518,AssignmentMutator,clone.childNodes=newjava.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),||,0,0.40687767,clone.childNodes <mask>= new java.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes<mask>= new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2622,Node.java,doClone,Node doClone(Node parent),578,590,19518,19518,AssignmentMutator,clone.childNodes=newjava.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),*,1,0.19652964,clone.childNodes <mask>= new java.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes<mask>= new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2623,Node.java,doClone,Node doClone(Node parent),578,590,19518,19518,AssignmentMutator,clone.childNodes=newjava.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),|,2,0.19151695,clone.childNodes <mask>= new java.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes<mask>= new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2624,Node.java,doClone,Node doClone(Node parent),578,590,19518,19518,AssignmentMutator,clone.childNodes=newjava.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),||,3,0.055819504,clone.childNodes <mask>= new java.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes<mask>= new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2625,Node.java,doClone,Node doClone(Node parent),578,590,19518,19518,AssignmentMutator,clone.childNodes=newjava.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),[],4,0.029218713,clone.childNodes <mask>= new java.util.ArrayList<org.jsoup.nodes.Node>(childNodes.size()),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes<mask>= new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2626,Node.java,doClone,Node doClone(Node parent),578,590,19502,19517,IdentifierMutator-Variable,clone.childNodes,clone,0,0.5119129,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2627,Node.java,doClone,Node doClone(Node parent),578,590,19502,19517,IdentifierMutator-Variable,clone.childNodes,clones,1,0.15281752,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2628,Node.java,doClone,Node doClone(Node parent),578,590,19502,19517,IdentifierMutator-Variable,clone.childNodes,children,2,0.06553353,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2629,Node.java,doClone,Node doClone(Node parent),578,590,19502,19517,IdentifierMutator-Variable,clone.childNodes,clone,3,0.06271821,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2630,Node.java,doClone,Node doClone(Node parent),578,590,19502,19517,IdentifierMutator-Variable,clone.childNodes,//,4,0.023674019,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2631,Node.java,doClone,Node doClone(Node parent),578,590,19502,19506,IdentifierMutator-Variable,clone,copy,2,4.8964436E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask>.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2632,Node.java,doClone,Node doClone(Node parent),578,590,19502,19506,IdentifierMutator-Variable,clone,parent,3,3.6946128E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask>.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2633,Node.java,doClone,Node doClone(Node parent),578,590,19502,19506,IdentifierMutator-Variable,clone,child,4,3.625085E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;<mask>.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2634,Node.java,doClone,Node doClone(Node parent),578,590,19508,19517,FieldReferenceMutator,childNodes,children,0,0.9786849,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2635,Node.java,doClone,Node doClone(Node parent),578,590,19508,19517,FieldReferenceMutator,childNodes,child,1,0.014247891,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2636,Node.java,doClone,Node doClone(Node parent),578,590,19508,19517,FieldReferenceMutator,childNodes,parents,2,0.0022654256,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2637,Node.java,doClone,Node doClone(Node parent),578,590,19508,19517,FieldReferenceMutator,childNodes,Children,3,3.24738E-4,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2638,Node.java,doClone,Node doClone(Node parent),578,590,19508,19517,FieldReferenceMutator,childNodes,parent,4,3.1323527E-4,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.<mask> = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2639,Node.java,doClone,Node doClone(Node parent),578,590,19552,19555,MethodCallMutator,size,length,1,0.0058544627,childNodes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.<mask>());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2640,Node.java,doClone,Node doClone(Node parent),578,590,19552,19555,MethodCallMutator,size,values,2,9.7114104E-4,childNodes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.<mask>());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2641,Node.java,doClone,Node doClone(Node parent),578,590,19552,19555,MethodCallMutator,size,count,3,2.6563194E-4,childNodes.<mask>(),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.<mask>());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2642,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,IdentifierMutator-Variable,childNodes,children,0,0.6163021,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2643,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,IdentifierMutator-Variable,childNodes,parents,1,0.11696825,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2644,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,IdentifierMutator-Variable,childNodes,parent,2,0.05613579,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2645,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,IdentifierMutator-Variable,childNodes,node,3,0.036282446,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2646,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,IdentifierMutator-Variable,childNodes,clone,4,0.022280244,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2647,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,FieldReferenceMutator,childNodes,children,0,0.6163021,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2648,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,FieldReferenceMutator,childNodes,parents,1,0.11696825,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2649,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,FieldReferenceMutator,childNodes,parent,2,0.05613579,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2650,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,FieldReferenceMutator,childNodes,node,3,0.036282446,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2651,Node.java,doClone,Node doClone(Node parent),578,590,19541,19550,FieldReferenceMutator,childNodes,clone,4,0.022280244,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(<mask>.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2652,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,IdentifierMutator-Variable,childNodes,children,0,0.64305633,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2653,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,IdentifierMutator-Variable,childNodes,nodes,1,0.16842662,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2654,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,IdentifierMutator-Variable,childNodes,siblings,2,0.055992413,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2655,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,IdentifierMutator-Variable,childNodes,children,3,0.02325825,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2656,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,IdentifierMutator-Variable,childNodes,child,4,0.00858479,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2657,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,FieldReferenceMutator,childNodes,children,0,0.64305633,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2658,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,FieldReferenceMutator,childNodes,nodes,1,0.16842662,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2659,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,FieldReferenceMutator,childNodes,siblings,2,0.055992413,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2660,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,FieldReferenceMutator,childNodes,children,3,0.02325825,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2661,Node.java,doClone,Node doClone(Node parent),578,591,19586,19595,FieldReferenceMutator,childNodes,child,4,0.00858479,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child:<mask>)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2662,Node.java,doClone,Node doClone(Node parent),578,592,19627,19629,MethodCallMutator,add,push,1,0.015087026,clone.childNodes.<mask>(child.doClone(clone)),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.<mask>(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2663,Node.java,doClone,Node doClone(Node parent),578,592,19627,19629,MethodCallMutator,add,append,2,0.0042712586,clone.childNodes.<mask>(child.doClone(clone)),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.<mask>(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2664,Node.java,doClone,Node doClone(Node parent),578,592,19627,19629,MethodCallMutator,add,remove,3,0.0019114824,clone.childNodes.<mask>(child.doClone(clone)),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.<mask>(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2665,Node.java,doClone,Node doClone(Node parent),578,592,19610,19625,IdentifierMutator-Variable,clone.childNodes,clone,0,0.73550904,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2666,Node.java,doClone,Node doClone(Node parent),578,592,19610,19625,IdentifierMutator-Variable,clone.childNodes,clones,1,0.1398383,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2667,Node.java,doClone,Node doClone(Node parent),578,592,19610,19625,IdentifierMutator-Variable,clone.childNodes,children,2,0.0229519,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2668,Node.java,doClone,Node doClone(Node parent),578,592,19610,19625,IdentifierMutator-Variable,clone.childNodes,parent,3,0.017433282,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2669,Node.java,doClone,Node doClone(Node parent),578,592,19610,19625,IdentifierMutator-Variable,clone.childNodes,parents,4,0.016173985,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2670,Node.java,doClone,Node doClone(Node parent),578,592,19610,19614,IdentifierMutator-Variable,clone,parent,1,0.0014893488,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2671,Node.java,doClone,Node doClone(Node parent),578,592,19610,19614,IdentifierMutator-Variable,clone,copy,3,6.4539106E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2672,Node.java,doClone,Node doClone(Node parent),578,592,19610,19614,IdentifierMutator-Variable,clone,node,4,2.0873123E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)<mask>.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2673,Node.java,doClone,Node doClone(Node parent),578,592,19616,19625,FieldReferenceMutator,childNodes,children,0,0.94455594,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2674,Node.java,doClone,Node doClone(Node parent),578,592,19616,19625,FieldReferenceMutator,childNodes,child,1,0.02461075,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2675,Node.java,doClone,Node doClone(Node parent),578,592,19616,19625,FieldReferenceMutator,childNodes,parents,2,0.013120852,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2676,Node.java,doClone,Node doClone(Node parent),578,592,19616,19625,FieldReferenceMutator,childNodes,parent,3,0.005457351,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2677,Node.java,doClone,Node doClone(Node parent),578,592,19616,19625,FieldReferenceMutator,childNodes,parts,4,0.0011904177,clone.<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.<mask>.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2678,Node.java,doClone,Node doClone(Node parent),578,592,19637,19643,MethodCallMutator,doClone,clone,0,0.9654267,child.<mask>(clone),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.<mask>(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2679,Node.java,doClone,Node doClone(Node parent),578,592,19637,19643,MethodCallMutator,doClone,copy,1,0.016280292,child.<mask>(clone),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.<mask>(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2680,Node.java,doClone,Node doClone(Node parent),578,592,19637,19643,MethodCallMutator,doClone,split,2,0.0024254173,child.<mask>(clone),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.<mask>(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2681,Node.java,doClone,Node doClone(Node parent),578,592,19637,19643,MethodCallMutator,doClone,node,3,0.0015342791,child.<mask>(clone),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.<mask>(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2682,Node.java,doClone,Node doClone(Node parent),578,592,19637,19643,MethodCallMutator,doClone,parent,4,0.0012361126,child.<mask>(clone),"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.<mask>(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2683,Node.java,doClone,Node doClone(Node parent),578,592,19631,19635,IdentifierMutator-Variable,child,Child,2,0.001188345,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(<mask>.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2684,Node.java,doClone,Node doClone(Node parent),578,592,19631,19635,IdentifierMutator-Variable,child,parent,3,5.3040753E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(<mask>.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2685,Node.java,doClone,Node doClone(Node parent),578,592,19631,19635,IdentifierMutator-Variable,child,this,4,1.5580322E-4,<mask>,"Node doClone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(<mask>.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2686,Node.java,doClone,Node doClone(Node parent),578,592,19645,19649,IdentifierMutator-Variable,clone,parent,1,0.18156634,<mask>,"Clone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(<mask>)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2687,Node.java,doClone,Node doClone(Node parent),578,592,19645,19649,IdentifierMutator-Variable,clone,this,2,0.020753479,<mask>,"Clone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(<mask>)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2688,Node.java,doClone,Node doClone(Node parent),578,592,19645,19649,IdentifierMutator-Variable,clone,null,3,0.018364867,<mask>,"Clone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(<mask>)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2689,Node.java,doClone,Node doClone(Node parent),578,592,19645,19649,IdentifierMutator-Variable,clone,node,4,0.009111284,<mask>,"Clone(Node parent) {
        Node clone;
        try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(<mask>)); // clone() creates orphans, doClone() keeps parent

        return clone;
    }"
2690,Node.java,doClone,Node doClone(Node parent),578,594,19721,19725,IdentifierMutator-Variable,clone,copy,1,0.0012377382,<mask>,"    try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return<mask>;
    }"
2691,Node.java,doClone,Node doClone(Node parent),578,594,19721,19725,IdentifierMutator-Variable,clone,parent,2,0.001162824,<mask>,"    try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return<mask>;
    }"
2692,Node.java,doClone,Node doClone(Node parent),578,594,19721,19725,IdentifierMutator-Variable,clone,null,3,8.022418E-4,<mask>,"    try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return<mask>;
    }"
2693,Node.java,doClone,Node doClone(Node parent),578,594,19721,19725,IdentifierMutator-Variable,clone,child,4,6.5706007E-4,<mask>,"    try {
            clone = (Node) super.clone();
        } catch (CloneNotSupportedException e) {
            throw new RuntimeException(e);
        }

        clone.parentNode = parent; // can be null, to create an orphan split
        clone.siblingIndex = parent == null ? 0 : siblingIndex;
        clone.attributes = attributes != null ? attributes.clone() : null;
        clone.baseUri = baseUri;
        clone.childNodes = new ArrayList<Node>(childNodes.size());
        for (Node child: childNodes)
            clone.childNodes.add(child.doClone(clone)); // clone() creates orphans, doClone() keeps parent

        return<mask>;
    }"
2694,Node.java,head,"void head(Node node, int depth)",606,607,20099,20111,MethodCallMutator,outerHtmlHead,head,0,0.69816774,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
2695,Node.java,head,"void head(Node node, int depth)",606,607,20099,20111,MethodCallMutator,outerHtmlHead,append,1,0.05024363,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
2696,Node.java,head,"void head(Node node, int depth)",606,607,20099,20111,MethodCallMutator,outerHtmlHead,tail,2,0.012287606,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
2697,Node.java,head,"void head(Node node, int depth)",606,607,20099,20111,MethodCallMutator,outerHtmlHead,write,3,0.0110100005,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
2698,Node.java,head,"void head(Node node, int depth)",606,607,20099,20111,MethodCallMutator,outerHtmlHead,add,4,0.010923341,"node.<mask>(accum, depth, out)","void head(Node node, int depth) {
            node.<mask>(accum, depth, out);
        }"
2699,Node.java,head,"void head(Node node, int depth)",606,607,20094,20097,IdentifierMutator-Variable,node,super,1,0.1648748,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
2700,Node.java,head,"void head(Node node, int depth)",606,607,20094,20097,IdentifierMutator-Variable,node,writer,2,0.086630076,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
2701,Node.java,head,"void head(Node node, int depth)",606,607,20094,20097,IdentifierMutator-Variable,node,this,3,0.056346808,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
2702,Node.java,head,"void head(Node node, int depth)",606,607,20094,20097,IdentifierMutator-Variable,node,out,4,0.055467628,<mask>,"void head(Node node, int depth) {<mask>.outerHtmlHead(accum, depth, out);
        }"
2703,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,IdentifierMutator-Variable,accum,this,0,0.32898912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2704,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,IdentifierMutator-Variable,accum,head,1,0.16485396,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2705,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,IdentifierMutator-Variable,accum,in,2,0.052464154,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2706,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,IdentifierMutator-Variable,accum,out,3,0.04326912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2707,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,IdentifierMutator-Variable,accum,true,4,0.017703267,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2708,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,FieldReferenceMutator,accum,this,0,0.32898912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2709,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,FieldReferenceMutator,accum,head,1,0.16485396,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2710,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,FieldReferenceMutator,accum,in,2,0.052464154,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2711,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,FieldReferenceMutator,accum,out,3,0.04326912,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2712,Node.java,head,"void head(Node node, int depth)",606,607,20113,20117,FieldReferenceMutator,accum,true,4,0.017703267,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(<mask>, depth, out);
        }"
2713,Node.java,head,"void head(Node node, int depth)",606,607,20120,20124,IdentifierMutator-Variable,depth,0,1,0.0014092699,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
2714,Node.java,head,"void head(Node node, int depth)",606,607,20120,20124,IdentifierMutator-Variable,depth,indent,2,0.0013254012,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
2715,Node.java,head,"void head(Node node, int depth)",606,607,20120,20124,IdentifierMutator-Variable,depth,level,3,9.72916E-4,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
2716,Node.java,head,"void head(Node node, int depth)",606,607,20120,20124,IdentifierMutator-Variable,depth,root,4,8.239867E-4,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum,<mask>, out);
        }"
2717,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,IdentifierMutator-Variable,out,head,0,0.2725821,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2718,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,IdentifierMutator-Variable,out,true,1,0.18142305,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2719,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,IdentifierMutator-Variable,out,false,2,0.16240773,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2720,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,IdentifierMutator-Variable,out,null,3,0.040977977,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2721,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,IdentifierMutator-Variable,out,0,4,0.027512942,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2722,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,FieldReferenceMutator,out,head,0,0.2725821,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2723,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,FieldReferenceMutator,out,true,1,0.18142305,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2724,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,FieldReferenceMutator,out,false,2,0.16240773,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2725,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,FieldReferenceMutator,out,null,3,0.040977977,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2726,Node.java,head,"void head(Node node, int depth)",606,607,20127,20129,FieldReferenceMutator,out,0,4,0.027512942,<mask>,"void head(Node node, int depth) {
            node.outerHtmlHead(accum, depth,<mask>);
        }"
2727,Node.java,tail,"void tail(Node node, int depth)",610,611,20209,20209,UnaryOperatorMutator,!,!!,2,0.0024242762,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2728,Node.java,tail,"void tail(Node node, int depth)",610,611,20209,20209,UnaryOperatorMutator,!,...,3,0.0021599252,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2729,Node.java,tail,"void tail(Node node, int depth)",610,611,20209,20209,UnaryOperatorMutator,!,//,4,0.0018093068,"<mask>node.nodeName().equals(""#text"")","void tail(Node node, int depth) {
            if (<mask>node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2730,Node.java,tail,"void tail(Node node, int depth)",610,611,20226,20231,MethodCallMutator,equals,is,0,0.7561035,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2731,Node.java,tail,"void tail(Node node, int depth)",610,611,20226,20231,MethodCallMutator,equals,match,1,0.17294931,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2732,Node.java,tail,"void tail(Node node, int depth)",610,611,20226,20231,MethodCallMutator,equals,has,2,0.02041645,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2733,Node.java,tail,"void tail(Node node, int depth)",610,611,20226,20231,MethodCallMutator,equals,test,3,0.005637353,"node.nodeName().<mask>(""#text"")","void tail(Node node, int depth) {
            if (!node.nodeName().<mask>(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2734,Node.java,tail,"void tail(Node node, int depth)",610,611,20215,20222,MethodCallMutator,nodeName,tag,0,0.49974057,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2735,Node.java,tail,"void tail(Node node, int depth)",610,611,20215,20222,MethodCallMutator,nodeName,name,1,0.20591074,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2736,Node.java,tail,"void tail(Node node, int depth)",610,611,20215,20222,MethodCallMutator,nodeName,type,2,0.1621093,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2737,Node.java,tail,"void tail(Node node, int depth)",610,611,20215,20222,MethodCallMutator,nodeName,id,3,0.014002651,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2738,Node.java,tail,"void tail(Node node, int depth)",610,611,20215,20222,MethodCallMutator,nodeName,path,4,0.009737705,node.<mask>(),"void tail(Node node, int depth) {
            if (!node.<mask>().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2739,Node.java,tail,"void tail(Node node, int depth)",610,611,20210,20213,IdentifierMutator-Variable,node,Node,2,0.0026625427,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2740,Node.java,tail,"void tail(Node node, int depth)",610,611,20210,20213,IdentifierMutator-Variable,node,parent,3,6.7414774E-4,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2741,Node.java,tail,"void tail(Node node, int depth)",610,611,20210,20213,IdentifierMutator-Variable,node,this,4,6.4780295E-4,<mask>,"void tail(Node node, int depth) {
            if (!<mask>.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2742,Node.java,tail,"void tail(Node node, int depth)",610,611,20233,20239,IdentifierMutator-Literal,"""#text""",name,0,0.16164073,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2743,Node.java,tail,"void tail(Node node, int depth)",610,611,20233,20239,IdentifierMutator-Literal,"""#text""",root,1,0.044017415,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2744,Node.java,tail,"void tail(Node node, int depth)",610,611,20233,20239,IdentifierMutator-Literal,"""#text""",head,2,0.038851608,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2745,Node.java,tail,"void tail(Node node, int depth)",610,611,20233,20239,IdentifierMutator-Literal,"""#text""",prefix,3,0.031315323,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2746,Node.java,tail,"void tail(Node node, int depth)",610,611,20233,20239,IdentifierMutator-Literal,"""#text""",NAME,4,0.025590455,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(<mask>)) // saves a void hit.
                node.outerHtmlTail(accum, depth, out);
        }"
2747,Node.java,tail,"void tail(Node node, int depth)",610,612,20285,20297,MethodCallMutator,outerHtmlTail,tail,0,0.84924555,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
2748,Node.java,tail,"void tail(Node node, int depth)",610,612,20285,20297,MethodCallMutator,outerHtmlTail,append,1,0.020721734,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
2749,Node.java,tail,"void tail(Node node, int depth)",610,612,20285,20297,MethodCallMutator,outerHtmlTail,text,2,0.010500752,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
2750,Node.java,tail,"void tail(Node node, int depth)",610,612,20285,20297,MethodCallMutator,outerHtmlTail,write,3,0.006621314,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
2751,Node.java,tail,"void tail(Node node, int depth)",610,612,20285,20297,MethodCallMutator,outerHtmlTail,output,4,0.0064675617,"node.<mask>(accum, depth, out)","void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.<mask>(accum, depth, out);
        }"
2752,Node.java,tail,"void tail(Node node, int depth)",610,612,20280,20283,IdentifierMutator-Variable,node,super,1,0.099767715,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
2753,Node.java,tail,"void tail(Node node, int depth)",610,612,20280,20283,IdentifierMutator-Variable,node,out,2,0.07395676,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
2754,Node.java,tail,"void tail(Node node, int depth)",610,612,20280,20283,IdentifierMutator-Variable,node,parser,3,0.029631479,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
2755,Node.java,tail,"void tail(Node node, int depth)",610,612,20280,20283,IdentifierMutator-Variable,node,this,4,0.024837771,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.<mask>.outerHtmlTail(accum, depth, out);
        }"
2756,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,IdentifierMutator-Variable,accum,this,0,0.29422018,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2757,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,IdentifierMutator-Variable,accum,true,1,0.05432078,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2758,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,IdentifierMutator-Variable,accum,out,2,0.034790203,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2759,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,IdentifierMutator-Variable,accum,node,3,0.034557045,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2760,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,IdentifierMutator-Variable,accum,tree,4,0.033222284,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2761,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,FieldReferenceMutator,accum,this,0,0.29422018,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2762,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,FieldReferenceMutator,accum,true,1,0.05432078,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2763,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,FieldReferenceMutator,accum,out,2,0.034790203,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2764,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,FieldReferenceMutator,accum,node,3,0.034557045,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2765,Node.java,tail,"void tail(Node node, int depth)",610,612,20299,20303,FieldReferenceMutator,accum,tree,4,0.033222284,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(<mask>, depth, out);
        }"
2766,Node.java,tail,"void tail(Node node, int depth)",610,612,20306,20310,IdentifierMutator-Variable,depth,root,1,0.0027529923,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
2767,Node.java,tail,"void tail(Node node, int depth)",610,612,20306,20310,IdentifierMutator-Variable,depth,0,2,0.002455936,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
2768,Node.java,tail,"void tail(Node node, int depth)",610,612,20306,20310,IdentifierMutator-Variable,depth,indent,3,0.0021718126,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
2769,Node.java,tail,"void tail(Node node, int depth)",610,612,20306,20310,IdentifierMutator-Variable,depth,true,4,0.0020779804,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum,<mask>, out);
        }"
2770,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,IdentifierMutator-Variable,out,true,0,0.19736424,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2771,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,IdentifierMutator-Variable,out,tail,1,0.19088523,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2772,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,IdentifierMutator-Variable,out,false,2,0.14113584,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2773,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,IdentifierMutator-Variable,out,null,3,0.039209206,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2774,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,IdentifierMutator-Variable,out,0,4,0.02657345,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2775,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,FieldReferenceMutator,out,true,0,0.19736424,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2776,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,FieldReferenceMutator,out,tail,1,0.19088523,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2777,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,FieldReferenceMutator,out,false,2,0.14113584,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2778,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,FieldReferenceMutator,out,null,3,0.039209206,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
2779,Node.java,tail,"void tail(Node node, int depth)",610,612,20313,20315,FieldReferenceMutator,out,0,4,0.02657345,<mask>,"void tail(Node node, int depth) {
            if (!node.nodeName().equals(""#text"")) // saves a void hit.
                node.outerHtmlTail(accum, depth,<mask>);
        }"
