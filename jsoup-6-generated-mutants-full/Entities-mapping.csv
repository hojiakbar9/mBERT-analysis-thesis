id,classname,method_name,method_sig,method_def_line,mut_location,mut_start,mut_end,mut_operator,orig_token,pred_token,pred_pos,pred_score,masked_expr,masked_seq
0,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,827,832,MethodCallMutator,escape,esc,2,7.5150054E-4,"<mask>(string, out.encoder(), out.<mask>Mode())","String escape(String string, Document.OutputSettings out) {
        return<mask>(string, out.encoder(), out.escapeMode());
    }"
1,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,827,832,MethodCallMutator,escape,escaped,3,4.509315E-4,"<mask>(string, out.encoder(), out.<mask>Mode())","String escape(String string, Document.OutputSettings out) {
        return<mask>(string, out.encoder(), out.escapeMode());
    }"
2,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,827,832,MethodCallMutator,escape,encode,4,3.6366712E-4,"<mask>(string, out.encoder(), out.<mask>Mode())","String escape(String string, Document.OutputSettings out) {
        return<mask>(string, out.encoder(), out.escapeMode());
    }"
3,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,834,839,IdentifierMutator-Variable,string,String,1,0.0011601249,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(<mask>, out.encoder(), out.escapeMode());
    }"
4,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,834,839,IdentifierMutator-Variable,string,str,3,1.20668126E-4,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(<mask>, out.encoder(), out.escapeMode());
    }"
5,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,834,839,IdentifierMutator-Variable,string,text,4,1.120011E-4,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(<mask>, out.encoder(), out.escapeMode());
    }"
6,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,846,852,MethodCallMutator,encoder,writer,0,0.23446456,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.<mask>(), out.escapeMode());
    }"
7,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,846,852,MethodCallMutator,encoder,escape,1,0.17762567,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.<mask>(), out.escapeMode());
    }"
8,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,846,852,MethodCallMutator,encoder,output,2,0.13336042,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.<mask>(), out.escapeMode());
    }"
9,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,846,852,MethodCallMutator,encoder,settings,3,0.053573,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.<mask>(), out.escapeMode());
    }"
10,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,846,852,MethodCallMutator,encoder,document,4,0.03726981,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.<mask>(), out.escapeMode());
    }"
11,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,842,844,IdentifierMutator-Variable,out,this,1,0.026379079,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string,<mask>.encoder(), out.escapeMode());
    }"
12,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,842,844,IdentifierMutator-Variable,out,in,2,0.025276937,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string,<mask>.encoder(), out.escapeMode());
    }"
13,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,842,844,IdentifierMutator-Variable,out,document,3,0.014386851,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string,<mask>.encoder(), out.escapeMode());
    }"
14,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,842,844,IdentifierMutator-Variable,out,doc,4,0.012778858,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string,<mask>.encoder(), out.escapeMode());
    }"
15,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,861,870,MethodCallMutator,escapeMode,settings,0,0.4822405,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(), out.<mask>());
    }"
16,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,861,870,MethodCallMutator,escapeMode,output,1,0.1335942,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(), out.<mask>());
    }"
17,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,861,870,MethodCallMutator,escapeMode,style,2,0.05546678,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(), out.<mask>());
    }"
18,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,861,870,MethodCallMutator,escapeMode,options,3,0.04295794,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(), out.<mask>());
    }"
19,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,861,870,MethodCallMutator,escapeMode,format,4,0.041312486,out.<mask>(),"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(), out.<mask>());
    }"
20,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,857,859,IdentifierMutator-Variable,out,in,1,0.010761947,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(),<mask>.escapeMode());
    }"
21,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,857,859,IdentifierMutator-Variable,out,this,2,0.006179288,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(),<mask>.escapeMode());
    }"
22,Entities.java,escape,"String escape(String string, Document.OutputSettings out)",24,25,857,859,IdentifierMutator-Variable,out,Out,3,0.002933386,<mask>,"String escape(String string, Document.OutputSettings out) {
        return escape(string, out.encoder(),<mask>.escapeMode());
    }"
23,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1035,1037,BinaryOperatorMutator,*,**,1,0.21503516,string.length() <mask> 2,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length()<mask>2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
24,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1035,1037,BinaryOperatorMutator,*,+,3,0.08971781,string.length() <mask> 2,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length()<mask>2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
25,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1035,1037,BinaryOperatorMutator,*,/,4,0.04280579,string.length() <mask> 2,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length()<mask>2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
26,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1027,1032,MethodCallMutator,length,width,1,8.2547755E-5,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.<mask>() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
27,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1027,1032,MethodCallMutator,length,len,3,8.832258E-6,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.<mask>() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
28,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1027,1032,MethodCallMutator,length,size,4,3.4585837E-6,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.<mask>() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
29,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1020,1025,IdentifierMutator-Variable,string,String,2,0.0025873822,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(<mask>.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
30,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1020,1025,IdentifierMutator-Variable,string,strings,3,7.3301635E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(<mask>.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
31,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1020,1025,IdentifierMutator-Variable,string,str,4,5.0586066E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(<mask>.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
32,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1038,1038,IdentifierMutator-Literal,2,100,1,0.063880704,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() *<mask>);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
33,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1038,1038,IdentifierMutator-Literal,2,4,2,0.058054596,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() *<mask>);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
34,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1038,1038,IdentifierMutator-Literal,2,10,3,0.04725579,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() *<mask>);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
35,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,29,1038,1038,IdentifierMutator-Literal,2,1000,4,0.04400614,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() *<mask>);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
36,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1135,IdentifierMutator-Conditional,(escapeMode==org.jsoup.nodes.Entities.EscapeMode.extended)?org.jsoup.nodes.Entities.fullByVal:org.jsoup.nodes.Entities.baseByVal,map,0,0.39990175,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
37,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1135,IdentifierMutator-Conditional,(escapeMode==org.jsoup.nodes.Entities.EscapeMode.extended)?org.jsoup.nodes.Entities.fullByVal:org.jsoup.nodes.Entities.baseByVal,null,1,0.34692216,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
38,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1135,IdentifierMutator-Conditional,(escapeMode==org.jsoup.nodes.Entities.EscapeMode.extended)?org.jsoup.nodes.Entities.fullByVal:org.jsoup.nodes.Entities.baseByVal,{},2,0.09902766,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
39,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1135,IdentifierMutator-Conditional,(escapeMode==org.jsoup.nodes.Entities.EscapeMode.extended)?org.jsoup.nodes.Entities.fullByVal:org.jsoup.nodes.Entities.baseByVal,this,3,0.023268461,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
40,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1135,IdentifierMutator-Conditional,(escapeMode==org.jsoup.nodes.Entities.EscapeMode.extended)?org.jsoup.nodes.Entities.fullByVal:org.jsoup.nodes.Entities.baseByVal,maps,4,0.021940544,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
41,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1089,1092,BinaryOperatorMutator,==,!=,2,0.06519881,escapeMode <mask> org.jsoup.nodes.Entities.EscapeMode.extended,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode<mask>EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
42,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1089,1092,BinaryOperatorMutator,==,.,3,0.029334147,escapeMode <mask> org.jsoup.nodes.Entities.EscapeMode.extended,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode<mask>EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
43,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1089,1092,BinaryOperatorMutator,==,=,4,0.01742892,escapeMode <mask> org.jsoup.nodes.Entities.EscapeMode.extended,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode<mask>EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
44,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1088,IdentifierMutator-Variable,escapeMode,mode,0,0.9980482,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask> == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
45,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1088,IdentifierMutator-Variable,escapeMode,modes,1,4.2168447E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask> == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
46,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1088,IdentifierMutator-Variable,escapeMode,mode,2,2.855718E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask> == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
47,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1088,IdentifierMutator-Variable,escapeMode,type,3,1.4700579E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask> == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
48,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1079,1088,IdentifierMutator-Variable,escapeMode,Mode,4,7.2939896E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map =<mask> == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
49,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1093,1111,IdentifierMutator-Variable,org.jsoup.nodes.Entities.EscapeMode.extended,null,0,0.6850757,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode ==<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
50,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1093,1111,IdentifierMutator-Variable,org.jsoup.nodes.Entities.EscapeMode.extended,true,1,0.13007861,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode ==<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
51,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1093,1111,IdentifierMutator-Variable,org.jsoup.nodes.Entities.EscapeMode.extended,FULL,2,0.038362384,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode ==<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
52,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1093,1111,IdentifierMutator-Variable,org.jsoup.nodes.Entities.EscapeMode.extended,false,3,0.03284179,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode ==<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
53,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1093,1111,IdentifierMutator-Variable,org.jsoup.nodes.Entities.EscapeMode.extended,1,4,0.032730013,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode ==<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
54,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1104,1111,FieldReferenceMutator,extended,full,0,0.49157226,org.jsoup.nodes.Entities.EscapeMode.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
55,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1104,1111,FieldReferenceMutator,extended,Full,1,0.39460313,org.jsoup.nodes.Entities.EscapeMode.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
56,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1104,1111,FieldReferenceMutator,extended,ALL,2,0.016738873,org.jsoup.nodes.Entities.EscapeMode.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
57,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1104,1111,FieldReferenceMutator,extended,RAW,3,0.008368268,org.jsoup.nodes.Entities.EscapeMode.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
58,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1104,1111,FieldReferenceMutator,extended,FULL,4,0.0074038412,org.jsoup.nodes.Entities.EscapeMode.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.<mask> ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
59,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,IdentifierMutator-Variable,org.jsoup.nodes.Entities.fullByVal,extended,0,0.47129998,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
60,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,IdentifierMutator-Variable,org.jsoup.nodes.Entities.fullByVal,base,1,0.1732376,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
61,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,IdentifierMutator-Variable,org.jsoup.nodes.Entities.fullByVal,null,2,0.054611176,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
62,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,IdentifierMutator-Variable,org.jsoup.nodes.Entities.fullByVal,"""""",3,0.02907678,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
63,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,IdentifierMutator-Variable,org.jsoup.nodes.Entities.fullByVal,extends,4,0.012304583,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
64,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,FieldReferenceMutator,fullByVal,extended,0,0.47129998,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
65,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,FieldReferenceMutator,fullByVal,base,1,0.1732376,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
66,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,FieldReferenceMutator,fullByVal,null,2,0.054611176,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
67,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,FieldReferenceMutator,fullByVal,"""""",3,0.02907678,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
68,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1115,1123,FieldReferenceMutator,fullByVal,extends,4,0.012304583,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ?<mask> : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
69,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,IdentifierMutator-Variable,org.jsoup.nodes.Entities.baseByVal,map,0,0.7683332,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
70,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,IdentifierMutator-Variable,org.jsoup.nodes.Entities.baseByVal,null,1,0.09333001,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
71,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,IdentifierMutator-Variable,org.jsoup.nodes.Entities.baseByVal,full,2,0.026248027,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
72,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,IdentifierMutator-Variable,org.jsoup.nodes.Entities.baseByVal,empty,3,0.019682538,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
73,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,IdentifierMutator-Variable,org.jsoup.nodes.Entities.baseByVal,maps,4,0.0073602786,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
74,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,FieldReferenceMutator,baseByVal,map,0,0.7683332,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
75,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,FieldReferenceMutator,baseByVal,null,1,0.09333001,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
76,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,FieldReferenceMutator,baseByVal,full,2,0.026248027,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
77,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,FieldReferenceMutator,baseByVal,empty,3,0.019682538,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
78,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,30,1127,1135,FieldReferenceMutator,baseByVal,maps,4,0.0073602786,org.jsoup.nodes.Entities.<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal :<mask>;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
79,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1162,1162,IdentifierMutator-Literal,0,1,1,0.050593752,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos =<mask>; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
80,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1162,1162,IdentifierMutator-Literal,0,2,2,0.0051561547,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos =<mask>; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
81,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1162,1162,IdentifierMutator-Literal,0,pos,4,0.0010517386,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos =<mask>; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
82,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1168,1170,BinaryOperatorMutator,<,<=,2,0.0016152994,pos <mask> string.length(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos<mask>string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
83,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1168,1170,BinaryOperatorMutator,<,==,3,3.678477E-4,pos <mask> string.length(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos<mask>string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
84,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1168,1170,BinaryOperatorMutator,<,++,4,3.3618166E-4,pos <mask> string.length(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos<mask>string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
85,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1165,1167,IdentifierMutator-Variable,pos,position,2,9.509703E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0;<mask> < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
86,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1165,1167,IdentifierMutator-Variable,pos,Pos,3,1.8919092E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0;<mask> < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
87,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1165,1167,IdentifierMutator-Variable,pos,i,4,4.8088998E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0;<mask> < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
88,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1178,1183,MethodCallMutator,length,position,1,7.798354E-5,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.<mask>(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
89,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1178,1183,MethodCallMutator,length,width,2,1.6637987E-5,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.<mask>(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
90,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1178,1183,MethodCallMutator,length,size,4,8.194391E-6,string.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.<mask>(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
91,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1171,1176,IdentifierMutator-Variable,string,String,2,1.8963509E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos <<mask>.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
92,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1171,1176,IdentifierMutator-Variable,string,String,3,1.8927574E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos <<mask>.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
93,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1171,1176,IdentifierMutator-Variable,string,source,4,8.800435E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos <<mask>.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
94,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1191,1192,UnaryOperatorMutator,++,++),2,0.0010065946,pos<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos<mask>) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
95,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1191,1192,UnaryOperatorMutator,++,++;,3,4.8388136E-4,pos<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos<mask>) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
96,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1191,1192,UnaryOperatorMutator,++,--,4,2.1070476E-4,pos<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos<mask>) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
97,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1188,1190,IdentifierMutator-Variable,pos,position,2,2.0677442E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length();<mask>++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
98,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1188,1190,IdentifierMutator-Variable,pos,++,3,7.6201875E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length();<mask>++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
99,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,32,1188,1190,IdentifierMutator-Variable,pos,p,4,6.535432E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length();<mask>++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
100,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1230,1235,MethodCallMutator,charAt,get,0,0.8437215,string.<mask>(pos),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.<mask>(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
101,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1230,1235,MethodCallMutator,charAt,item,1,0.042982977,string.<mask>(pos),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.<mask>(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
102,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1230,1235,MethodCallMutator,charAt,at,2,0.034467835,string.<mask>(pos),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.<mask>(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
103,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1230,1235,MethodCallMutator,charAt,char,3,0.028167855,string.<mask>(pos),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.<mask>(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
104,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1230,1235,MethodCallMutator,charAt,At,4,0.023455221,string.<mask>(pos),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.<mask>(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
105,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1223,1228,IdentifierMutator-Variable,string,String,2,1.6051217E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c =<mask>.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
106,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1223,1228,IdentifierMutator-Variable,string,source,3,1.5689879E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c =<mask>.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
107,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1223,1228,IdentifierMutator-Variable,string,str,4,7.864397E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c =<mask>.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
108,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1237,1239,IdentifierMutator-Variable,pos,Pos,2,1.3622809E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(<mask>);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
109,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1237,1239,IdentifierMutator-Variable,pos,position,3,4.323409E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(<mask>);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
110,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,33,1237,1239,IdentifierMutator-Variable,pos,0,4,1.9595855E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(<mask>);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
111,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1263,1273,MethodCallMutator,containsKey,has,0,0.46549803,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.<mask>(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
112,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1263,1273,MethodCallMutator,containsKey,key,1,0.2530671,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.<mask>(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
113,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1263,1273,MethodCallMutator,containsKey,get,2,0.13834518,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.<mask>(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
114,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1263,1273,MethodCallMutator,containsKey,remove,3,0.030360505,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.<mask>(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
115,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1263,1273,MethodCallMutator,containsKey,add,4,0.02725675,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.<mask>(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
116,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1259,1261,IdentifierMutator-Variable,map,Map,1,1.0279687E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (<mask>.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
117,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1259,1261,IdentifierMutator-Variable,map,dict,2,3.3842414E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (<mask>.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
118,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1259,1261,IdentifierMutator-Variable,map,code,4,1.6324593E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (<mask>.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
119,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1275,1275,IdentifierMutator-Variable,c,cc,2,5.5384917E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(<mask>))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
120,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1275,1275,IdentifierMutator-Variable,c,f,3,2.57933E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(<mask>))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
121,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,34,1275,1275,IdentifierMutator-Variable,c,lc,4,1.4453751E-6,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(<mask>))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
122,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1332,1337,MethodCallMutator,append,join,1,1.3803183E-4,"accum.<mask>('&').<mask>(map.get(c)).<mask>(';')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).<mask>(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
123,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1332,1337,MethodCallMutator,append,end,2,1.1522854E-4,"accum.<mask>('&').<mask>(map.get(c)).<mask>(';')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).<mask>(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
124,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1332,1337,MethodCallMutator,append,replace,3,1.2333667E-5,"accum.<mask>('&').<mask>(map.get(c)).<mask>(';')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).<mask>(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
125,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1332,1337,MethodCallMutator,append,escape,4,1.23142045E-5,"accum.<mask>('&').<mask>(map.get(c)).<mask>(';')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).<mask>(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
126,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1313,1318,MethodCallMutator,append,end,1,2.0685203E-4,"accum.<mask>('&').<mask>(map.get(c))","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').<mask>(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
127,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1313,1318,MethodCallMutator,append,join,2,1.1410454E-4,"accum.<mask>('&').<mask>(map.get(c))","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').<mask>(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
128,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1313,1318,MethodCallMutator,append,escape,4,4.366178E-5,"accum.<mask>('&').<mask>(map.get(c))","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').<mask>(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
129,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1301,1306,MethodCallMutator,append,end,1,4.1269337E-5,"accum.<mask>('&')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.<mask>('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
130,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1301,1306,MethodCallMutator,append,join,3,6.3272523E-6,"accum.<mask>('&')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.<mask>('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
131,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1301,1306,MethodCallMutator,append,open,4,4.7349085E-6,"accum.<mask>('&')","String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.<mask>('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
132,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1295,1299,IdentifierMutator-Variable,accum,acc,1,2.677244E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))<mask>.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
133,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1295,1299,IdentifierMutator-Variable,accum,accumulate,2,1.4455739E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))<mask>.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
134,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1295,1299,IdentifierMutator-Variable,accum,buf,3,9.224423E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))<mask>.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
135,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1295,1299,IdentifierMutator-Variable,accum,result,4,6.119247E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))<mask>.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
136,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1308,1310,IdentifierMutator-Literal,"'&'",c,0,0.45689198,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append(<mask>).append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
137,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1308,1310,IdentifierMutator-Literal,"'&'",&,1,0.33345675,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append(<mask>).append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
138,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1308,1310,IdentifierMutator-Literal,"'&'",#,2,0.042114854,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append(<mask>).append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
139,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1308,1310,IdentifierMutator-Literal,"'&'","\\",3,0.024454392,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append(<mask>).append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
140,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1308,1310,IdentifierMutator-Literal,"'&'","\""",4,0.020705877,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append(<mask>).append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
141,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1324,1326,MethodCallMutator,get,remove,2,1.7971896E-4,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.<mask>(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
142,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1324,1326,MethodCallMutator,get,Get,3,1.07442065E-4,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.<mask>(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
143,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1324,1326,MethodCallMutator,get,pop,4,7.132886E-5,map.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.<mask>(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
144,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1320,1322,IdentifierMutator-Variable,map,Map,2,3.8448916E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(<mask>.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
145,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1320,1322,IdentifierMutator-Variable,map,MAP,3,4.3668802E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(<mask>.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
146,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1320,1322,IdentifierMutator-Variable,map,code,4,2.0108111E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(<mask>.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
147,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1328,1328,IdentifierMutator-Variable,c,f,2,1.7126551E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(<mask>)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
148,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1328,1328,IdentifierMutator-Variable,c,lc,3,1.7105398E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(<mask>)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
149,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1328,1328,IdentifierMutator-Variable,c,C,4,1.1532926E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(<mask>)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
150,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1339,1341,IdentifierMutator-Literal,"';'",;,0,0.75723755,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(<mask>);
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
151,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1339,1341,IdentifierMutator-Literal,"';'",c,1,0.10371152,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(<mask>);
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
152,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1339,1341,IdentifierMutator-Literal,"';'",;;,2,0.032878377,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(<mask>);
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
153,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1339,1341,IdentifierMutator-Literal,"';'",);,3,0.014780744,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(<mask>);
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
154,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,35,1339,1341,IdentifierMutator-Literal,"';'",();,4,0.008520088,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(<mask>);
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
155,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1374,1382,MethodCallMutator,canEncode,escape,0,0.87182546,encoder.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.<mask>(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
156,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1374,1382,MethodCallMutator,canEncode,enabled,1,0.014888962,encoder.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.<mask>(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
157,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1374,1382,MethodCallMutator,canEncode,check,2,0.006042714,encoder.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.<mask>(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
158,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1374,1382,MethodCallMutator,canEncode,allowed,3,0.0044570076,encoder.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.<mask>(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
159,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1374,1382,MethodCallMutator,canEncode,transform,4,0.0043380824,encoder.<mask>(c),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.<mask>(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
160,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1366,1372,IdentifierMutator-Variable,encoder,oder,0,0.19745308,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (<mask>.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
161,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1366,1372,IdentifierMutator-Variable,encoder,enc,1,0.08251488,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (<mask>.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
162,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1366,1372,IdentifierMutator-Variable,encoder,map,2,0.07607639,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (<mask>.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
163,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1366,1372,IdentifierMutator-Variable,encoder,code,3,0.03833315,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (<mask>.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
164,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1366,1372,IdentifierMutator-Variable,encoder,conv,4,0.031091396,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (<mask>.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
165,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1384,1384,IdentifierMutator-Variable,c,f,2,1.650559E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(<mask>))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
166,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1384,1384,IdentifierMutator-Variable,c,C,3,1.1131576E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(<mask>))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
167,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,36,1384,1384,IdentifierMutator-Variable,c,char,4,1.0122183E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(<mask>))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
168,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1410,1415,MethodCallMutator,append,end,1,2.146975E-4,accum.<mask>(c.charValue()),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.<mask>(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
169,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1410,1415,MethodCallMutator,append,push,3,1.0093868E-4,accum.<mask>(c.charValue()),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.<mask>(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
170,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1410,1415,MethodCallMutator,append,add,4,8.347897E-5,accum.<mask>(c.charValue()),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.<mask>(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
171,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1404,1408,IdentifierMutator-Variable,accum,acc,1,2.6535525E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))<mask>.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
172,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1404,1408,IdentifierMutator-Variable,accum,accumulate,2,1.14995564E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))<mask>.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
173,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1404,1408,IdentifierMutator-Variable,accum,buf,3,5.4811553E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))<mask>.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
174,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1404,1408,IdentifierMutator-Variable,accum,result,4,5.291221E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))<mask>.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
175,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1419,1427,MethodCallMutator,charValue,escape,0,0.5093464,c.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.<mask>());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
176,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1419,1427,MethodCallMutator,charValue,length,1,0.06552758,c.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.<mask>());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
177,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1419,1427,MethodCallMutator,charValue,reverse,2,0.04231174,c.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.<mask>());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
178,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1419,1427,MethodCallMutator,charValue,char,3,0.037323248,c.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.<mask>());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
179,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1419,1427,MethodCallMutator,charValue,string,4,0.03464672,c.<mask>(),"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.<mask>());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
180,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1417,1417,IdentifierMutator-Variable,c,f,2,1.2992487E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(<mask>.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
181,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1417,1417,IdentifierMutator-Variable,c,C,3,9.6362004E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(<mask>.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
182,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,37,1417,1417,IdentifierMutator-Variable,c,cc,4,7.909834E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(<mask>.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
183,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1501,1506,MethodCallMutator,append,end,1,3.9210703E-4,"accum.<mask>(""&#"").<mask>(((int) (c))).<mask>(';')"," EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).<mask>(';');
        }

        return accum.toString();
    }"
184,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1501,1506,MethodCallMutator,append,join,2,2.439589E-4,"accum.<mask>(""&#"").<mask>(((int) (c))).<mask>(';')"," EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).<mask>(';');
        }

        return accum.toString();
    }"
185,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1501,1506,MethodCallMutator,append,escape,3,3.3768083E-5,"accum.<mask>(""&#"").<mask>(((int) (c))).<mask>(';')"," EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).<mask>(';');
        }

        return accum.toString();
    }"
186,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1501,1506,MethodCallMutator,append,add,4,2.8065027E-5,"accum.<mask>(""&#"").<mask>(((int) (c))).<mask>(';')"," EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).<mask>(';');
        }

        return accum.toString();
    }"
187,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1485,1490,MethodCallMutator,append,join,1,8.837143E-4,"accum.<mask>(""&#"").<mask>(((int) (c)))","etEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").<mask>((int) c).append(';');
        }

        return accum.toString();
    }"
188,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1485,1490,MethodCallMutator,append,end,2,4.976201E-4,"accum.<mask>(""&#"").<mask>(((int) (c)))","etEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").<mask>((int) c).append(';');
        }

        return accum.toString();
    }"
189,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1485,1490,MethodCallMutator,append,add,3,2.9600778E-4,"accum.<mask>(""&#"").<mask>(((int) (c)))","etEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").<mask>((int) c).append(';');
        }

        return accum.toString();
    }"
190,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1472,1477,MethodCallMutator,append,end,1,4.8524853E-5,"accum.<mask>(""&#"")","String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.<mask>(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
191,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1472,1477,MethodCallMutator,append,replace,3,3.9832787E-5,"accum.<mask>(""&#"")","String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.<mask>(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
192,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1472,1477,MethodCallMutator,append,join,4,3.850996E-5,"accum.<mask>(""&#"")","String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.<mask>(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
193,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1466,1470,IdentifierMutator-Variable,accum,acc,1,1.6905766E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else<mask>.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
194,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1466,1470,IdentifierMutator-Variable,accum,accumulate,2,1.09535365E-4,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else<mask>.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
195,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1466,1470,IdentifierMutator-Variable,accum,result,3,7.0875896E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else<mask>.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
196,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1466,1470,IdentifierMutator-Variable,accum,buf,4,3.5016186E-5,<mask>,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else<mask>.append(""&#"").append((int) c).append(';');
        }

        return accum.toString();
    }"
197,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1479,1482,IdentifierMutator-Literal,"""&#""",&,0,0.97989804,<mask>,", CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(<mask>).append((int) c).append(';');
        }

        return accum.toString();
    }"
198,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1479,1482,IdentifierMutator-Literal,"""&#""","\\",1,0.0016406893,<mask>,", CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(<mask>).append((int) c).append(';');
        }

        return accum.toString();
    }"
199,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1479,1482,IdentifierMutator-Literal,"""&#""","\'",2,0.0014056732,<mask>,", CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(<mask>).append((int) c).append(';');
        }

        return accum.toString();
    }"
200,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1479,1482,IdentifierMutator-Literal,"""&#""",and,3,0.0012576842,<mask>,", CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(<mask>).append((int) c).append(';');
        }

        return accum.toString();
    }"
201,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1479,1482,IdentifierMutator-Literal,"""&#""",&&,4,9.524522E-4,<mask>,", CharsetEncoder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(<mask>).append((int) c).append(';');
        }

        return accum.toString();
    }"
202,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1492,1498,IdentifierMutator-Variable,((int)(c)),c,0,0.9978642,<mask>,"oder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append(<mask>).append(';');
        }

        return accum.toString();
    }"
203,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1492,1498,IdentifierMutator-Variable,((int)(c)),c,1,4.5048626E-4,<mask>,"oder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append(<mask>).append(';');
        }

        return accum.toString();
    }"
204,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1492,1498,IdentifierMutator-Variable,((int)(c)),lc,2,1.4075091E-4,<mask>,"oder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append(<mask>).append(';');
        }

        return accum.toString();
    }"
205,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1492,1498,IdentifierMutator-Variable,((int)(c)),C,3,1.3547661E-4,<mask>,"oder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append(<mask>).append(';');
        }

        return accum.toString();
    }"
206,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1492,1498,IdentifierMutator-Variable,((int)(c)),s,4,8.226905E-5,<mask>,"oder encoder, EscapeMode escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append(<mask>).append(';');
        }

        return accum.toString();
    }"
207,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1508,1510,IdentifierMutator-Literal,"';'",;,0,0.87075174,<mask>," escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(<mask>);
        }

        return accum.toString();
    }"
208,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1508,1510,IdentifierMutator-Literal,"';'",);,1,0.018750908,<mask>," escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(<mask>);
        }

        return accum.toString();
    }"
209,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1508,1510,IdentifierMutator-Literal,"';'",;;,2,0.013094189,<mask>," escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(<mask>);
        }

        return accum.toString();
    }"
210,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1508,1510,IdentifierMutator-Literal,"';'","';",3,0.012116684,<mask>," escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(<mask>);
        }

        return accum.toString();
    }"
211,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,39,1508,1510,IdentifierMutator-Literal,"';'",&,4,0.011467754,<mask>," escapeMode) {
        StringBuilder accum = new StringBuilder(string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(<mask>);
        }

        return accum.toString();
    }"
212,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1546,1553,MethodCallMutator,toString,string,0,0.28702816,accum.<mask>(),"length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.<mask>();
    }"
213,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1546,1553,MethodCallMutator,toString,value,1,0.20276973,accum.<mask>(),"length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.<mask>();
    }"
214,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1546,1553,MethodCallMutator,toString,join,2,0.14971448,accum.<mask>(),"length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.<mask>();
    }"
215,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1546,1553,MethodCallMutator,toString,build,3,0.09232477,accum.<mask>(),"length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.<mask>();
    }"
216,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1546,1553,MethodCallMutator,toString,format,4,0.049672853,accum.<mask>(),"length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return accum.<mask>();
    }"
217,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1540,1544,IdentifierMutator-Variable,accum,string,1,0.044818748,<mask>,"string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return<mask>.toString();
    }"
218,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1540,1544,IdentifierMutator-Variable,accum,str,2,0.004503634,<mask>,"string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return<mask>.toString();
    }"
219,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1540,1544,IdentifierMutator-Variable,accum,acc,3,0.004464267,<mask>,"string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return<mask>.toString();
    }"
220,Entities.java,escape,"String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode)",28,42,1540,1544,IdentifierMutator-Variable,accum,result,4,0.004322606,<mask>,"string.length() * 2);
        Map<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;

        for (int pos = 0; pos < string.length(); pos++) {
            Character c = string.charAt(pos);
            if (map.containsKey(c))
                accum.append('&').append(map.get(c)).append(';');
            else if (encoder.canEncode(c))
                accum.append(c.charValue());
            else
                accum.append(""&#"").append((int) c).append(';');
        }

        return<mask>.toString();
    }"
221,Entities.java,unescape,String unescape(String string),45,46,1621,1621,UnaryOperatorMutator,!,!!,2,0.004607944,"<mask>string.contains(""&"")","String unescape(String string) {
        if (<mask>string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
  "
222,Entities.java,unescape,String unescape(String string),45,46,1621,1621,UnaryOperatorMutator,!,?,3,0.0035052514,"<mask>string.contains(""&"")","String unescape(String string) {
        if (<mask>string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
  "
223,Entities.java,unescape,String unescape(String string),45,46,1621,1621,UnaryOperatorMutator,!,...,4,0.003061834,"<mask>string.contains(""&"")","String unescape(String string) {
        if (<mask>string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
  "
224,Entities.java,unescape,String unescape(String string),45,46,1629,1636,MethodCallMutator,contains,has,0,0.40007758,"string.<mask>(""&"")","String unescape(String string) {
        if (!string.<mask>(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
225,Entities.java,unescape,String unescape(String string),45,46,1629,1636,MethodCallMutator,contains,match,1,0.34209615,"string.<mask>(""&"")","String unescape(String string) {
        if (!string.<mask>(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
226,Entities.java,unescape,String unescape(String string),45,46,1629,1636,MethodCallMutator,contains,split,2,0.06604684,"string.<mask>(""&"")","String unescape(String string) {
        if (!string.<mask>(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
227,Entities.java,unescape,String unescape(String string),45,46,1629,1636,MethodCallMutator,contains,append,3,0.026409024,"string.<mask>(""&"")","String unescape(String string) {
        if (!string.<mask>(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
228,Entities.java,unescape,String unescape(String string),45,46,1629,1636,MethodCallMutator,contains,include,4,0.020310776,"string.<mask>(""&"")","String unescape(String string) {
        if (!string.<mask>(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
229,Entities.java,unescape,String unescape(String string),45,46,1622,1627,IdentifierMutator-Variable,string,String,2,0.0010941221,<mask>,"String unescape(String string) {
        if (!<mask>.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
230,Entities.java,unescape,String unescape(String string),45,46,1622,1627,IdentifierMutator-Variable,string,str,3,2.866261E-4,<mask>,"String unescape(String string) {
        if (!<mask>.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
231,Entities.java,unescape,String unescape(String string),45,46,1622,1627,IdentifierMutator-Variable,string,pattern,4,2.7566904E-4,<mask>,"String unescape(String string) {
        if (!<mask>.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
232,Entities.java,unescape,String unescape(String string),45,46,1638,1640,IdentifierMutator-Literal,"""&""",escape,0,0.35812765,<mask>,"String unescape(String string) {
        if (!string.contains(<mask>))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
233,Entities.java,unescape,String unescape(String string),45,46,1638,1640,IdentifierMutator-Literal,"""&""",pattern,1,0.07101814,<mask>,"String unescape(String string) {
        if (!string.contains(<mask>))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
234,Entities.java,unescape,String unescape(String string),45,46,1638,1640,IdentifierMutator-Literal,"""&""","\\",2,0.06589781,<mask>,"String unescape(String string) {
        if (!string.contains(<mask>))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
235,Entities.java,unescape,String unescape(String string),45,46,1638,1640,IdentifierMutator-Literal,"""&""","\\\\",3,0.051534418,<mask>,"String unescape(String string) {
        if (!string.contains(<mask>))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
236,Entities.java,unescape,String unescape(String string),45,46,1638,1640,IdentifierMutator-Literal,"""&""","''",4,0.04208504,<mask>,"String unescape(String string) {
        if (!string.contains(<mask>))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
237,Entities.java,unescape,String unescape(String string),45,47,1663,1668,IdentifierMutator-Variable,string,null,1,0.06397381,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return<mask>;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
238,Entities.java,unescape,String unescape(String string),45,47,1663,1668,IdentifierMutator-Variable,string,"""""",2,0.027324243,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return<mask>;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
239,Entities.java,unescape,String unescape(String string),45,47,1663,1668,IdentifierMutator-Variable,string,"''",3,0.0064177816,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return<mask>;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
240,Entities.java,unescape,String unescape(String string),45,47,1663,1668,IdentifierMutator-Variable,string,str,4,0.0027523937,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return<mask>;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
241,Entities.java,unescape,String unescape(String string),45,49,1708,1714,MethodCallMutator,matcher,match,0,0.7058424,unescapePattern.<mask>(string),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.<mask>(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
242,Entities.java,unescape,String unescape(String string),45,49,1708,1714,MethodCallMutator,matcher,exec,1,0.061919574,unescapePattern.<mask>(string),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.<mask>(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
243,Entities.java,unescape,String unescape(String string),45,49,1708,1714,MethodCallMutator,matcher,cher,2,0.05216021,unescapePattern.<mask>(string),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.<mask>(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
244,Entities.java,unescape,String unescape(String string),45,49,1708,1714,MethodCallMutator,matcher,matched,3,0.033352748,unescapePattern.<mask>(string),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.<mask>(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
245,Entities.java,unescape,String unescape(String string),45,49,1708,1714,MethodCallMutator,matcher,parse,4,0.023740215,unescapePattern.<mask>(string),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.<mask>(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
    "
246,Entities.java,unescape,String unescape(String string),45,49,1692,1706,IdentifierMutator-Variable,org.jsoup.nodes.Entities.unescapePattern,pattern,0,0.41088474,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
247,Entities.java,unescape,String unescape(String string),45,49,1692,1706,IdentifierMutator-Variable,org.jsoup.nodes.Entities.unescapePattern,regex,1,0.20260797,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
248,Entities.java,unescape,String unescape(String string),45,49,1692,1706,IdentifierMutator-Variable,org.jsoup.nodes.Entities.unescapePattern,re,2,0.09667032,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
249,Entities.java,unescape,String unescape(String string),45,49,1692,1706,IdentifierMutator-Variable,org.jsoup.nodes.Entities.unescapePattern,escape,3,0.037176616,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
250,Entities.java,unescape,String unescape(String string),45,49,1692,1706,IdentifierMutator-Variable,org.jsoup.nodes.Entities.unescapePattern,r,4,0.022211518,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
251,Entities.java,unescape,String unescape(String string),45,49,1692,1706,FieldReferenceMutator,unescapePattern,pattern,0,0.41088474,org.jsoup.nodes.Entities.<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
252,Entities.java,unescape,String unescape(String string),45,49,1692,1706,FieldReferenceMutator,unescapePattern,regex,1,0.20260797,org.jsoup.nodes.Entities.<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
253,Entities.java,unescape,String unescape(String string),45,49,1692,1706,FieldReferenceMutator,unescapePattern,re,2,0.09667032,org.jsoup.nodes.Entities.<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
254,Entities.java,unescape,String unescape(String string),45,49,1692,1706,FieldReferenceMutator,unescapePattern,escape,3,0.037176616,org.jsoup.nodes.Entities.<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
255,Entities.java,unescape,String unescape(String string),45,49,1692,1706,FieldReferenceMutator,unescapePattern,r,4,0.022211518,org.jsoup.nodes.Entities.<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m =<mask>.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
     "
256,Entities.java,unescape,String unescape(String string),45,49,1716,1721,IdentifierMutator-Variable,string,String,1,4.9360964E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(<mask>); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
257,Entities.java,unescape,String unescape(String string),45,49,1716,1721,IdentifierMutator-Variable,string,str,2,3.2409705E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(<mask>); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
258,Entities.java,unescape,String unescape(String string),45,49,1716,1721,IdentifierMutator-Variable,string,word,4,1.0780063E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(<mask>); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
259,Entities.java,unescape,String unescape(String string),45,50,1818,1823,MethodCallMutator,length,string,1,0.014669804,string.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.<mask>()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
260,Entities.java,unescape,String unescape(String string),45,50,1818,1823,MethodCallMutator,length,split,2,0.0123518,string.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.<mask>()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
261,Entities.java,unescape,String unescape(String string),45,50,1818,1823,MethodCallMutator,length,bytes,3,0.005918686,string.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.<mask>()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
262,Entities.java,unescape,String unescape(String string),45,50,1818,1823,MethodCallMutator,length,get,4,0.0050243116,string.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.<mask>()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
263,Entities.java,unescape,String unescape(String string),45,50,1811,1816,IdentifierMutator-Variable,string,String,1,0.0037857867,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(<mask>.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
264,Entities.java,unescape,String unescape(String string),45,50,1811,1816,IdentifierMutator-Variable,string,str,3,7.2975067E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(<mask>.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
265,Entities.java,unescape,String unescape(String string),45,50,1811,1816,IdentifierMutator-Variable,string,s,4,2.9095323E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(<mask>.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
266,Entities.java,unescape,String unescape(String string),45,53,2011,2014,MethodCallMutator,find,next,1,0.022926692,m.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.<mask>()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
267,Entities.java,unescape,String unescape(String string),45,53,2011,2014,MethodCallMutator,find,search,2,0.012814846,m.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.<mask>()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
268,Entities.java,unescape,String unescape(String string),45,53,2011,2014,MethodCallMutator,find,more,3,0.012296563,m.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.<mask>()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
269,Entities.java,unescape,String unescape(String string),45,53,2011,2014,MethodCallMutator,find,matched,4,0.0075145164,m.<mask>(),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.<mask>()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
270,Entities.java,unescape,String unescape(String string),45,53,2009,2009,IdentifierMutator-Variable,m,fm,1,0.0066987197,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (<mask>.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
271,Entities.java,unescape,String unescape(String string),45,53,2009,2009,IdentifierMutator-Variable,m,match,2,0.005095796,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (<mask>.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
272,Entities.java,unescape,String unescape(String string),45,53,2009,2009,IdentifierMutator-Variable,m,mc,3,0.0037687952,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (<mask>.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
273,Entities.java,unescape,String unescape(String string),45,53,2009,2009,IdentifierMutator-Variable,m,mi,4,0.0026515624,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (<mask>.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
274,Entities.java,unescape,String unescape(String string),45,54,2047,2047,UnaryOperatorMutator,-,+,1,9.914157E-4,<mask>1,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval =<mask>1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
275,Entities.java,unescape,String unescape(String string),45,54,2047,2047,UnaryOperatorMutator,-,$,2,7.5370003E-4,<mask>1,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval =<mask>1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
276,Entities.java,unescape,String unescape(String string),45,54,2047,2047,UnaryOperatorMutator,-,.,3,1.7798004E-4,<mask>1,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval =<mask>1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
277,Entities.java,unescape,String unescape(String string),45,54,2048,2048,IdentifierMutator-Literal,1,2,2,0.0016651915,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -<mask>;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
278,Entities.java,unescape,String unescape(String string),45,54,2048,2048,IdentifierMutator-Literal,1,0,3,2.9363966E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -<mask>;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
279,Entities.java,unescape,String unescape(String string),45,54,2048,2048,IdentifierMutator-Literal,1,3,4,2.7978705E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -<mask>;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
280,Entities.java,unescape,String unescape(String string),45,55,2078,2082,MethodCallMutator,group,groups,2,4.3207905E-4,m.<mask>(3),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.<mask>(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
281,Entities.java,unescape,String unescape(String string),45,55,2078,2082,MethodCallMutator,group,get,3,2.379064E-4,m.<mask>(3),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.<mask>(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
282,Entities.java,unescape,String unescape(String string),45,55,2078,2082,MethodCallMutator,group,Group,4,1.3008452E-4,m.<mask>(3),"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.<mask>(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
283,Entities.java,unescape,String unescape(String string),45,55,2076,2076,IdentifierMutator-Variable,m,r,2,6.069562E-6,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num =<mask>.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
284,Entities.java,unescape,String unescape(String string),45,55,2076,2076,IdentifierMutator-Variable,m,match,3,3.2155679E-6,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num =<mask>.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
285,Entities.java,unescape,String unescape(String string),45,55,2076,2076,IdentifierMutator-Variable,m,b,4,2.9266635E-6,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num =<mask>.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
286,Entities.java,unescape,String unescape(String string),45,55,2084,2084,IdentifierMutator-Literal,3,1,0,0.5562416,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(<mask>);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
287,Entities.java,unescape,String unescape(String string),45,55,2084,2084,IdentifierMutator-Literal,3,2,1,0.37718248,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(<mask>);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
288,Entities.java,unescape,String unescape(String string),45,55,2084,2084,IdentifierMutator-Literal,3,0,2,0.030386865,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(<mask>);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
289,Entities.java,unescape,String unescape(String string),45,55,2084,2084,IdentifierMutator-Literal,3,4,4,0.009082346,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(<mask>);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
290,Entities.java,unescape,String unescape(String string),45,56,2107,2110,BinaryOperatorMutator,!=,==,1,0.28158045,num <mask> null,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num<mask>null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
291,Entities.java,unescape,String unescape(String string),45,56,2107,2110,BinaryOperatorMutator,!=,=,2,0.062277995,num <mask> null,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num<mask>null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
292,Entities.java,unescape,String unescape(String string),45,56,2107,2110,BinaryOperatorMutator,!=,==,3,0.04517019,num <mask> null,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num<mask>null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
293,Entities.java,unescape,String unescape(String string),45,56,2107,2110,BinaryOperatorMutator,!=,.,4,5.931244E-4,num <mask> null,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num<mask>null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
294,Entities.java,unescape,String unescape(String string),45,56,2104,2106,IdentifierMutator-Variable,num,n,1,3.6852367E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (<mask> != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
295,Entities.java,unescape,String unescape(String string),45,56,2104,2106,IdentifierMutator-Variable,num,Num,2,2.712885E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (<mask> != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
296,Entities.java,unescape,String unescape(String string),45,56,2104,2106,IdentifierMutator-Variable,num,uni,3,2.1450415E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (<mask> != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
297,Entities.java,unescape,String unescape(String string),45,56,2104,2106,IdentifierMutator-Variable,num,mon,4,1.2954076E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (<mask> != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
298,Entities.java,unescape,String unescape(String string),45,56,2111,2114,IdentifierMutator-Literal,null,"""""",1,9.532534E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num !=<mask>) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
299,Entities.java,unescape,String unescape(String string),45,56,2111,2114,IdentifierMutator-Literal,null,NULL,2,4.0073824E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num !=<mask>) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
300,Entities.java,unescape,String unescape(String string),45,56,2111,2114,IdentifierMutator-Literal,null,0,3,1.5220058E-4,<mask>,"String unescape(String string) {
        if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num !=<mask>) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
   "
301,Entities.java,unescape,String unescape(String string),45,58,2172,2199,IdentifierMutator-Conditional,(m.group(2)!=null)?16:10,2,0,0.9024378,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
302,Entities.java,unescape,String unescape(String string),45,58,2172,2199,IdentifierMutator-Conditional,(m.group(2)!=null)?16:10,4,1,0.011712129,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
303,Entities.java,unescape,String unescape(String string),45,58,2172,2199,IdentifierMutator-Conditional,(m.group(2)!=null)?16:10,3,2,0.00997239,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
304,Entities.java,unescape,String unescape(String string),45,58,2172,2199,IdentifierMutator-Conditional,(m.group(2)!=null)?16:10,0,3,0.008777486,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
305,Entities.java,unescape,String unescape(String string),45,58,2172,2199,IdentifierMutator-Conditional,(m.group(2)!=null)?16:10,1,4,0.00857391,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
306,Entities.java,unescape,String unescape(String string),45,58,2182,2185,BinaryOperatorMutator,!=,==,0,0.8366817,m.group(2) <mask> null,"(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2)<mask>null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char)"
307,Entities.java,unescape,String unescape(String string),45,58,2182,2185,BinaryOperatorMutator,!=,==,1,0.12575966,m.group(2) <mask> null,"(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2)<mask>null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char)"
308,Entities.java,unescape,String unescape(String string),45,58,2182,2185,BinaryOperatorMutator,!=,=,3,0.01713055,m.group(2) <mask> null,"(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2)<mask>null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char)"
309,Entities.java,unescape,String unescape(String string),45,58,2182,2185,BinaryOperatorMutator,!=,=>,4,2.3116727E-4,m.group(2) <mask> null,"(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2)<mask>null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char)"
310,Entities.java,unescape,String unescape(String string),45,58,2174,2178,MethodCallMutator,group,arg,1,0.006994508,m.<mask>(2),"string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.<mask>(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.to"
311,Entities.java,unescape,String unescape(String string),45,58,2174,2178,MethodCallMutator,group,get,2,0.005170714,m.<mask>(2),"string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.<mask>(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.to"
312,Entities.java,unescape,String unescape(String string),45,58,2174,2178,MethodCallMutator,group,part,3,0.003023354,m.<mask>(2),"string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.<mask>(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.to"
313,Entities.java,unescape,String unescape(String string),45,58,2172,2172,IdentifierMutator-Variable,m,match,2,6.417522E-5,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character"
314,Entities.java,unescape,String unescape(String string),45,58,2172,2172,IdentifierMutator-Variable,m,n,3,2.5290783E-5,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character"
315,Entities.java,unescape,String unescape(String string),45,58,2172,2172,IdentifierMutator-Variable,m,b,4,2.3053492E-5,<mask>," if (!string.contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base =<mask>.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character"
316,Entities.java,unescape,String unescape(String string),45,58,2180,2180,IdentifierMutator-Literal,2,4,1,0.054893658,<mask>,"contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(<mask>) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(("
317,Entities.java,unescape,String unescape(String string),45,58,2180,2180,IdentifierMutator-Literal,2,1,2,0.049344704,<mask>,"contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(<mask>) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(("
318,Entities.java,unescape,String unescape(String string),45,58,2180,2180,IdentifierMutator-Literal,2,3,3,0.020260142,<mask>,"contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(<mask>) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(("
319,Entities.java,unescape,String unescape(String string),45,58,2180,2180,IdentifierMutator-Literal,2,6,4,0.012119918,<mask>,"contains(""&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(<mask>) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(("
320,Entities.java,unescape,String unescape(String string),45,58,2186,2189,IdentifierMutator-Literal,null,0,1,0.07379214,<mask>,"&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) !=<mask> ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) char"
321,Entities.java,unescape,String unescape(String string),45,58,2186,2189,IdentifierMutator-Literal,null,"""""",2,0.005867967,<mask>,"&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) !=<mask> ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) char"
322,Entities.java,unescape,String unescape(String string),45,58,2186,2189,IdentifierMutator-Literal,null,16,3,0.0038201218,<mask>,"&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) !=<mask> ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) char"
323,Entities.java,unescape,String unescape(String string),45,58,2186,2189,IdentifierMutator-Literal,null,1,4,0.003071976,<mask>,"&""))
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) !=<mask> ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) char"
324,Entities.java,unescape,String unescape(String string),45,58,2193,2194,IdentifierMutator-Literal,16,2,0,0.89489245,<mask>,"
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ?<mask> : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);"
325,Entities.java,unescape,String unescape(String string),45,58,2193,2194,IdentifierMutator-Literal,16,3,1,0.030206222,<mask>,"
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ?<mask> : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);"
326,Entities.java,unescape,String unescape(String string),45,58,2193,2194,IdentifierMutator-Literal,16,1,2,0.0107535375,<mask>,"
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ?<mask> : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);"
327,Entities.java,unescape,String unescape(String string),45,58,2193,2194,IdentifierMutator-Literal,16,8,3,0.009329845,<mask>,"
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ?<mask> : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);"
328,Entities.java,unescape,String unescape(String string),45,58,2193,2194,IdentifierMutator-Literal,16,6,4,0.008537934,<mask>,"
            return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ?<mask> : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);"
329,Entities.java,unescape,String unescape(String string),45,58,2198,2199,IdentifierMutator-Literal,10,2,0,0.7698455,<mask>,"           return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 :<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
330,Entities.java,unescape,String unescape(String string),45,58,2198,2199,IdentifierMutator-Literal,10,0,1,0.116430975,<mask>,"           return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 :<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
331,Entities.java,unescape,String unescape(String string),45,58,2198,2199,IdentifierMutator-Literal,10,1,2,0.02998493,<mask>,"           return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 :<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
332,Entities.java,unescape,String unescape(String string),45,58,2198,2199,IdentifierMutator-Literal,10,8,3,0.01840755,<mask>,"           return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 :<mask>; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
 "
333,Entities.java,unescape,String unescape(String string),45,59,2251,2251,AssignmentMutator,"charval=java.lang.Integer.valueOf(num,base)",|,0,0.6797295,"charval <mask>= java.lang.Integer.valueOf(num, base)","matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval<mask>= Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
334,Entities.java,unescape,String unescape(String string),45,59,2251,2251,AssignmentMutator,"charval=java.lang.Integer.valueOf(num,base)",*,1,0.24031891,"charval <mask>= java.lang.Integer.valueOf(num, base)","matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval<mask>= Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
335,Entities.java,unescape,String unescape(String string),45,59,2251,2251,AssignmentMutator,"charval=java.lang.Integer.valueOf(num,base)",^,2,0.053945538,"charval <mask>= java.lang.Integer.valueOf(num, base)","matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval<mask>= Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
336,Entities.java,unescape,String unescape(String string),45,59,2251,2251,AssignmentMutator,"charval=java.lang.Integer.valueOf(num,base)",/,3,0.005895761,"charval <mask>= java.lang.Integer.valueOf(num, base)","matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval<mask>= Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
337,Entities.java,unescape,String unescape(String string),45,59,2251,2251,AssignmentMutator,"charval=java.lang.Integer.valueOf(num,base)",&,4,0.0055967704,"charval <mask>= java.lang.Integer.valueOf(num, base)","matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval<mask>= Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
338,Entities.java,unescape,String unescape(String string),45,59,2244,2250,IdentifierMutator-Variable,charval,num,0,0.88734627,<mask>,"    return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator<mask> = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
339,Entities.java,unescape,String unescape(String string),45,59,2244,2250,IdentifierMutator-Variable,charval,val,1,0.020318802,<mask>,"    return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator<mask> = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
340,Entities.java,unescape,String unescape(String string),45,59,2244,2250,IdentifierMutator-Variable,charval,value,2,0.015214945,<mask>,"    return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator<mask> = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
341,Entities.java,unescape,String unescape(String string),45,59,2244,2250,IdentifierMutator-Variable,charval,num,3,0.009396865,<mask>,"    return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator<mask> = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
342,Entities.java,unescape,String unescape(String string),45,59,2244,2250,IdentifierMutator-Variable,charval,number,4,0.009288168,<mask>,"    return string;

        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator<mask> = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteRepl"
343,Entities.java,unescape,String unescape(String string),45,59,2262,2268,MethodCallMutator,valueOf,format,0,0.89803106,"Integer.<mask>(num, base)","string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.<mask>(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
"
344,Entities.java,unescape,String unescape(String string),45,59,2262,2268,MethodCallMutator,valueOf,parse,1,0.050585233,"Integer.<mask>(num, base)","string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.<mask>(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
"
345,Entities.java,unescape,String unescape(String string),45,59,2262,2268,MethodCallMutator,valueOf,round,2,0.027527064,"Integer.<mask>(num, base)","string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.<mask>(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
"
346,Entities.java,unescape,String unescape(String string),45,59,2262,2268,MethodCallMutator,valueOf,int,3,0.0053273444,"Integer.<mask>(num, base)","string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.<mask>(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
"
347,Entities.java,unescape,String unescape(String string),45,59,2262,2268,MethodCallMutator,valueOf,digit,4,0.0044841063,"Integer.<mask>(num, base)","string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.<mask>(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
"
348,Entities.java,unescape,String unescape(String string),45,59,2270,2272,IdentifierMutator-Variable,num,number,1,1.7059072E-4,<mask>," &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(<mask>, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
  "
349,Entities.java,unescape,String unescape(String string),45,59,2270,2272,IdentifierMutator-Variable,num,Num,2,1.6188058E-4,<mask>," &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(<mask>, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
  "
350,Entities.java,unescape,String unescape(String string),45,59,2270,2272,IdentifierMutator-Variable,num,n,3,7.321121E-5,<mask>," &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(<mask>, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
  "
351,Entities.java,unescape,String unescape(String string),45,59,2270,2272,IdentifierMutator-Variable,num,uni,4,5.707418E-5,<mask>," &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(<mask>, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
  "
352,Entities.java,unescape,String unescape(String string),45,59,2275,2278,IdentifierMutator-Variable,base,Base,2,5.2698484E-5,<mask>,"#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num,<mask>);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
    "
353,Entities.java,unescape,String unescape(String string),45,59,2275,2278,IdentifierMutator-Variable,base,0,3,4.0099956E-5,<mask>,"#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num,<mask>);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
    "
354,Entities.java,unescape,String unescape(String string),45,59,2275,2278,IdentifierMutator-Variable,base,BASE,4,1.7813009E-5,<mask>,"#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num,<mask>);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
    "
355,Entities.java,unescape,String unescape(String string),45,63,2413,2417,MethodCallMutator,group,get,2,8.75706E-4,m.<mask>(1),", so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.<mask>(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
     "
356,Entities.java,unescape,String unescape(String string),45,63,2413,2417,MethodCallMutator,group,groups,3,7.6238526E-4,m.<mask>(1),", so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.<mask>(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
     "
357,Entities.java,unescape,String unescape(String string),45,63,2413,2417,MethodCallMutator,group,arg,4,6.282128E-4,m.<mask>(1),", so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.<mask>(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
     "
358,Entities.java,unescape,String unescape(String string),45,63,2411,2411,IdentifierMutator-Variable,m,match,1,9.9171164E-5,<mask>," own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name =<mask>.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
   "
359,Entities.java,unescape,String unescape(String string),45,63,2411,2411,IdentifierMutator-Variable,m,r,2,3.9338727E-5,<mask>," own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name =<mask>.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
   "
360,Entities.java,unescape,String unescape(String string),45,63,2411,2411,IdentifierMutator-Variable,m,n,4,2.0119445E-5,<mask>," own impl, so StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name =<mask>.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
   "
361,Entities.java,unescape,String unescape(String string),45,63,2419,2419,IdentifierMutator-Literal,1,2,1,0.36935464,<mask>," StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(<mask>);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
       "
362,Entities.java,unescape,String unescape(String string),45,63,2419,2419,IdentifierMutator-Literal,1,4,2,0.06516737,<mask>," StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(<mask>);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
       "
363,Entities.java,unescape,String unescape(String string),45,63,2419,2419,IdentifierMutator-Literal,1,3,3,0.055044778,<mask>," StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(<mask>);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
       "
364,Entities.java,unescape,String unescape(String string),45,63,2419,2419,IdentifierMutator-Literal,1,0,4,0.021676648,<mask>," StringBuilder and quoteReplacement not required

        while (m.find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(<mask>);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
       "
365,Entities.java,unescape,String unescape(String string),45,64,2448,2458,MethodCallMutator,containsKey,key,0,0.6652856,full.<mask>(name)," {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.<mask>(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
"
366,Entities.java,unescape,String unescape(String string),45,64,2448,2458,MethodCallMutator,containsKey,has,1,0.2211883,full.<mask>(name)," {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.<mask>(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
"
367,Entities.java,unescape,String unescape(String string),45,64,2448,2458,MethodCallMutator,containsKey,get,2,0.054235343,full.<mask>(name)," {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.<mask>(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
"
368,Entities.java,unescape,String unescape(String string),45,64,2448,2458,MethodCallMutator,containsKey,Key,3,0.015635576,full.<mask>(name)," {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.<mask>(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
"
369,Entities.java,unescape,String unescape(String string),45,64,2448,2458,MethodCallMutator,containsKey,contains,4,0.010358501,full.<mask>(name)," {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.<mask>(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
"
370,Entities.java,unescape,String unescape(String string),45,64,2443,2446,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,full,0,0.95098066,<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
371,Entities.java,unescape,String unescape(String string),45,64,2443,2446,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,partial,1,0.0058775637,<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
372,Entities.java,unescape,String unescape(String string),45,64,2443,2446,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,flat,2,0.004544767,<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
373,Entities.java,unescape,String unescape(String string),45,64,2443,2446,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,raw,3,0.0043734866,<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
374,Entities.java,unescape,String unescape(String string),45,64,2443,2446,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,map,4,0.003410944,<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
375,Entities.java,unescape,String unescape(String string),45,64,2443,2446,FieldReferenceMutator,full,partial,1,0.0058775637,org.jsoup.nodes.Entities.<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
376,Entities.java,unescape,String unescape(String string),45,64,2443,2446,FieldReferenceMutator,full,flat,2,0.004544767,org.jsoup.nodes.Entities.<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
377,Entities.java,unescape,String unescape(String string),45,64,2443,2446,FieldReferenceMutator,full,raw,3,0.0043734866,org.jsoup.nodes.Entities.<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
378,Entities.java,unescape,String unescape(String string),45,64,2443,2446,FieldReferenceMutator,full,map,4,0.003410944,org.jsoup.nodes.Entities.<mask>,"find()) {
            int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (<mask>.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum."
379,Entities.java,unescape,String unescape(String string),45,64,2460,2463,IdentifierMutator-Variable,name,Name,1,1.3482581E-4,<mask>,"          int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(<mask>))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
  "
380,Entities.java,unescape,String unescape(String string),45,64,2460,2463,IdentifierMutator-Variable,name,key,3,1.0681718E-5,<mask>,"          int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(<mask>))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
  "
381,Entities.java,unescape,String unescape(String string),45,64,2460,2463,IdentifierMutator-Variable,name,names,4,2.6033276E-6,<mask>,"          int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(<mask>))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
  "
382,Entities.java,unescape,String unescape(String string),45,65,2494,2494,AssignmentMutator,charval=org.jsoup.nodes.Entities.full.get(name),|,0,0.6575647,charval <mask>= org.jsoup.nodes.Entities.full.get(name),"     String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval<mask>= full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
383,Entities.java,unescape,String unescape(String string),45,65,2494,2494,AssignmentMutator,charval=org.jsoup.nodes.Entities.full.get(name),*,1,0.17722097,charval <mask>= org.jsoup.nodes.Entities.full.get(name),"     String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval<mask>= full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
384,Entities.java,unescape,String unescape(String string),45,65,2494,2494,AssignmentMutator,charval=org.jsoup.nodes.Entities.full.get(name),^,2,0.0985757,charval <mask>= org.jsoup.nodes.Entities.full.get(name),"     String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval<mask>= full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
385,Entities.java,unescape,String unescape(String string),45,65,2494,2494,AssignmentMutator,charval=org.jsoup.nodes.Entities.full.get(name),&,3,0.031377867,charval <mask>= org.jsoup.nodes.Entities.full.get(name),"     String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval<mask>= full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
386,Entities.java,unescape,String unescape(String string),45,65,2494,2494,AssignmentMutator,charval=org.jsoup.nodes.Entities.full.get(name),/,4,0.012552445,charval <mask>= org.jsoup.nodes.Entities.full.get(name),"     String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval<mask>= full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
387,Entities.java,unescape,String unescape(String string),45,65,2487,2493,IdentifierMutator-Variable,charval,name,0,0.33096248,<mask>,"        int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))<mask> = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
388,Entities.java,unescape,String unescape(String string),45,65,2487,2493,IdentifierMutator-Variable,charval,accum,1,0.06524506,<mask>,"        int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))<mask> = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
389,Entities.java,unescape,String unescape(String string),45,65,2487,2493,IdentifierMutator-Variable,charval,acc,2,0.059247773,<mask>,"        int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))<mask> = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
390,Entities.java,unescape,String unescape(String string),45,65,2487,2493,IdentifierMutator-Variable,charval,full,3,0.058165632,<mask>,"        int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))<mask> = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
391,Entities.java,unescape,String unescape(String string),45,65,2487,2493,IdentifierMutator-Variable,charval,num,4,0.050228674,<mask>,"        int charval = -1;
            String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))<mask> = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
392,Entities.java,unescape,String unescape(String string),45,65,2502,2504,MethodCallMutator,get,remove,1,0.0016156771,full.<mask>(name),"  String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.<mask>(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
393,Entities.java,unescape,String unescape(String string),45,65,2502,2504,MethodCallMutator,get,pop,2,9.118161E-4,full.<mask>(name),"  String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.<mask>(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
394,Entities.java,unescape,String unescape(String string),45,65,2502,2504,MethodCallMutator,get,key,4,2.3688802E-4,full.<mask>(name),"  String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.<mask>(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
395,Entities.java,unescape,String unescape(String string),45,65,2497,2500,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,full,0,0.98540133,<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
396,Entities.java,unescape,String unescape(String string),45,65,2497,2500,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,partial,1,0.0016872832,<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
397,Entities.java,unescape,String unescape(String string),45,65,2497,2500,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,raw,2,7.0752803E-4,<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
398,Entities.java,unescape,String unescape(String string),45,65,2497,2500,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,total,3,6.4286205E-4,<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
399,Entities.java,unescape,String unescape(String string),45,65,2497,2500,IdentifierMutator-Variable,org.jsoup.nodes.Entities.full,result,4,6.114025E-4,<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
400,Entities.java,unescape,String unescape(String string),45,65,2497,2500,FieldReferenceMutator,full,partial,1,0.0016872832,org.jsoup.nodes.Entities.<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
401,Entities.java,unescape,String unescape(String string),45,65,2497,2500,FieldReferenceMutator,full,raw,2,7.0752803E-4,org.jsoup.nodes.Entities.<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
402,Entities.java,unescape,String unescape(String string),45,65,2497,2500,FieldReferenceMutator,full,total,3,6.4286205E-4,org.jsoup.nodes.Entities.<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
403,Entities.java,unescape,String unescape(String string),45,65,2497,2500,FieldReferenceMutator,full,result,4,6.114025E-4,org.jsoup.nodes.Entities.<mask>,"    String num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval =<mask>.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
404,Entities.java,unescape,String unescape(String string),45,65,2506,2509,IdentifierMutator-Variable,name,Name,1,8.8926194E-5,<mask>," num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(<mask>);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
405,Entities.java,unescape,String unescape(String string),45,65,2506,2509,IdentifierMutator-Variable,name,key,3,9.8888795E-6,<mask>," num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(<mask>);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
406,Entities.java,unescape,String unescape(String string),45,65,2506,2509,IdentifierMutator-Variable,name,names,4,3.7589405E-6,<mask>," num = m.group(3);
            if (num != null) {
                try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(<mask>);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
407,Entities.java,unescape,String unescape(String string),45,68,2557,2560,BinaryOperatorMutator,||,&&,0,0.990816,(charval != (-1)) <mask> (charval > 0xffff),"          try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1<mask>charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
408,Entities.java,unescape,String unescape(String string),45,68,2557,2560,BinaryOperatorMutator,||,&&,1,0.005593627,(charval != (-1)) <mask> (charval > 0xffff),"          try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1<mask>charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
409,Entities.java,unescape,String unescape(String string),45,68,2557,2560,BinaryOperatorMutator,||,&,2,9.794785E-4,(charval != (-1)) <mask> (charval > 0xffff),"          try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1<mask>charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
410,Entities.java,unescape,String unescape(String string),45,68,2557,2560,BinaryOperatorMutator,||,AND,3,9.177319E-4,(charval != (-1)) <mask> (charval > 0xffff),"          try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1<mask>charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
411,Entities.java,unescape,String unescape(String string),45,68,2557,2560,BinaryOperatorMutator,||,and,4,5.246892E-4,(charval != (-1)) <mask> (charval > 0xffff),"          try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1<mask>charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
412,Entities.java,unescape,String unescape(String string),45,68,2551,2554,BinaryOperatorMutator,!=,<,0,0.9342608,charval <mask> (-1),"             try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval<mask>-1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
413,Entities.java,unescape,String unescape(String string),45,68,2551,2554,BinaryOperatorMutator,!=,<=,1,0.034653552,charval <mask> (-1),"             try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval<mask>-1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
414,Entities.java,unescape,String unescape(String string),45,68,2551,2554,BinaryOperatorMutator,!=,<,2,0.017564949,charval <mask> (-1),"             try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval<mask>-1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
415,Entities.java,unescape,String unescape(String string),45,68,2551,2554,BinaryOperatorMutator,!=,==,3,0.012041799,charval <mask> (-1),"             try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval<mask>-1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
416,Entities.java,unescape,String unescape(String string),45,68,2551,2554,BinaryOperatorMutator,!=,===,4,0.0011533945,charval <mask> (-1),"             try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval<mask>-1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
417,Entities.java,unescape,String unescape(String string),45,68,2544,2550,IdentifierMutator-Variable,charval,char,0,0.122243345,<mask>,"               try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (<mask> != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
418,Entities.java,unescape,String unescape(String string),45,68,2544,2550,IdentifierMutator-Variable,charval,value,1,0.07620922,<mask>,"               try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (<mask> != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
419,Entities.java,unescape,String unescape(String string),45,68,2544,2550,IdentifierMutator-Variable,charval,num,2,0.07005506,<mask>,"               try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (<mask> != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
420,Entities.java,unescape,String unescape(String string),45,68,2544,2550,IdentifierMutator-Variable,charval,val,3,0.057337813,<mask>,"               try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (<mask> != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
421,Entities.java,unescape,String unescape(String string),45,68,2544,2550,IdentifierMutator-Variable,charval,name,4,0.0565506,<mask>,"               try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (<mask> != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
422,Entities.java,unescape,String unescape(String string),45,68,2555,2555,UnaryOperatorMutator,-,$,1,0.24769183,<mask>1,"            try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval !=<mask>1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
423,Entities.java,unescape,String unescape(String string),45,68,2555,2555,UnaryOperatorMutator,-,Na,2,0.004942216,<mask>1,"            try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval !=<mask>1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
424,Entities.java,unescape,String unescape(String string),45,68,2555,2555,UnaryOperatorMutator,-,C,3,0.004717456,<mask>1,"            try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval !=<mask>1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
425,Entities.java,unescape,String unescape(String string),45,68,2555,2555,UnaryOperatorMutator,-,111,4,0.0043316036,<mask>1,"            try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval !=<mask>1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
426,Entities.java,unescape,String unescape(String string),45,68,2556,2556,IdentifierMutator-Literal,1,VALUE,2,0.004991692,<mask>,"           try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -<mask> || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
427,Entities.java,unescape,String unescape(String string),45,68,2556,2556,IdentifierMutator-Literal,1,2,3,0.0011047836,<mask>,"           try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -<mask> || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
428,Entities.java,unescape,String unescape(String string),45,68,2556,2556,IdentifierMutator-Literal,1,10,4,9.915256E-4,<mask>,"           try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -<mask> || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
429,Entities.java,unescape,String unescape(String string),45,68,2568,2570,BinaryOperatorMutator,>,<=,2,0.060078565,charval <mask> 0xffff,"       try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval<mask>0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
430,Entities.java,unescape,String unescape(String string),45,68,2568,2570,BinaryOperatorMutator,>,<,3,0.05645786,charval <mask> 0xffff,"       try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval<mask>0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
431,Entities.java,unescape,String unescape(String string),45,68,2568,2570,BinaryOperatorMutator,>,<,4,0.041777924,charval <mask> 0xffff,"       try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval<mask>0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
432,Entities.java,unescape,String unescape(String string),45,68,2561,2567,IdentifierMutator-Variable,charval,c,0,0.38615775,<mask>,"         try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 ||<mask> > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
433,Entities.java,unescape,String unescape(String string),45,68,2561,2567,IdentifierMutator-Variable,charval,num,1,0.12800416,<mask>,"         try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 ||<mask> > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
434,Entities.java,unescape,String unescape(String string),45,68,2561,2567,IdentifierMutator-Variable,charval,val,2,0.09624105,<mask>,"         try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 ||<mask> > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
435,Entities.java,unescape,String unescape(String string),45,68,2561,2567,IdentifierMutator-Variable,charval,char,3,0.076559015,<mask>,"         try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 ||<mask> > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
436,Entities.java,unescape,String unescape(String string),45,68,2561,2567,IdentifierMutator-Variable,charval,value,4,0.055406064,<mask>,"         try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 ||<mask> > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
437,Entities.java,unescape,String unescape(String string),45,68,2571,2576,IdentifierMutator-Literal,0xffff,255,0,0.39956567,<mask>,"      try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval ><mask>) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
438,Entities.java,unescape,String unescape(String string),45,68,2571,2576,IdentifierMutator-Literal,0xffff,0,1,0.16131786,<mask>,"      try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval ><mask>) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
439,Entities.java,unescape,String unescape(String string),45,68,2571,2576,IdentifierMutator-Literal,0xffff,127,2,0.12099076,<mask>,"      try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval ><mask>) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
440,Entities.java,unescape,String unescape(String string),45,68,2571,2576,IdentifierMutator-Literal,0xffff,256,3,0.06675222,<mask>,"      try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval ><mask>) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
441,Entities.java,unescape,String unescape(String string),45,68,2571,2576,IdentifierMutator-Literal,0xffff,max,4,0.032063946,<mask>,"      try {
                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval ><mask>) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
442,Entities.java,unescape,String unescape(String string),45,69,2634,2641,MethodCallMutator,toString,escape,0,0.53946733,Character.<mask>(((char) (charval)))," m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.<mask>((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
443,Entities.java,unescape,String unescape(String string),45,69,2634,2641,MethodCallMutator,toString,name,1,0.27870268,Character.<mask>(((char) (charval)))," m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.<mask>((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
444,Entities.java,unescape,String unescape(String string),45,69,2634,2641,MethodCallMutator,toString,format,2,0.02472924,Character.<mask>(((char) (charval)))," m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.<mask>((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
445,Entities.java,unescape,String unescape(String string),45,69,2634,2641,MethodCallMutator,toString,get,3,0.02096431,Character.<mask>(((char) (charval)))," m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.<mask>((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
446,Entities.java,unescape,String unescape(String string),45,69,2634,2641,MethodCallMutator,toString,string,4,0.017893016,Character.<mask>(((char) (charval)))," m.group(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.<mask>((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
447,Entities.java,unescape,String unescape(String string),45,69,2643,2656,IdentifierMutator-Variable,((char)(charval)),name,0,0.4219016,<mask>,"(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(<mask>);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
448,Entities.java,unescape,String unescape(String string),45,69,2643,2656,IdentifierMutator-Variable,((char)(charval)),char,1,0.23386842,<mask>,"(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(<mask>);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
449,Entities.java,unescape,String unescape(String string),45,69,2643,2656,IdentifierMutator-Variable,((char)(charval)),num,2,0.08191223,<mask>,"(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(<mask>);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
450,Entities.java,unescape,String unescape(String string),45,69,2643,2656,IdentifierMutator-Variable,((char)(charval)),c,3,0.033447795,<mask>,"(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(<mask>);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
451,Entities.java,unescape,String unescape(String string),45,69,2643,2656,IdentifierMutator-Variable,((char)(charval)),value,4,0.01838702,<mask>,"(2) != null ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString(<mask>);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
452,Entities.java,unescape,String unescape(String string),45,70,2678,2694,MethodCallMutator,appendReplacement,replace,0,0.8147649,"m.<mask>(accum, Matcher.quoteReplacement(c))","             charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.<mask>(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
453,Entities.java,unescape,String unescape(String string),45,70,2678,2694,MethodCallMutator,appendReplacement,append,1,0.17237054,"m.<mask>(accum, Matcher.quoteReplacement(c))","             charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.<mask>(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
454,Entities.java,unescape,String unescape(String string),45,70,2678,2694,MethodCallMutator,appendReplacement,insert,2,0.0032729118,"m.<mask>(accum, Matcher.quoteReplacement(c))","             charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.<mask>(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
455,Entities.java,unescape,String unescape(String string),45,70,2678,2694,MethodCallMutator,appendReplacement,add,3,0.0010709764,"m.<mask>(accum, Matcher.quoteReplacement(c))","             charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.<mask>(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
456,Entities.java,unescape,String unescape(String string),45,70,2678,2694,MethodCallMutator,appendReplacement,match,4,8.3452446E-4,"m.<mask>(accum, Matcher.quoteReplacement(c))","             charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.<mask>(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
457,Entities.java,unescape,String unescape(String string),45,70,2676,2676,IdentifierMutator-Variable,m,b,2,2.5353895E-4,<mask>," ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);<mask>.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
458,Entities.java,unescape,String unescape(String string),45,70,2676,2676,IdentifierMutator-Variable,m,c,3,2.2282296E-4,<mask>," ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);<mask>.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
459,Entities.java,unescape,String unescape(String string),45,70,2676,2676,IdentifierMutator-Variable,m,p,4,1.0953488E-4,<mask>," ? 16 : 10; // 2 is hex indicator
                    charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);<mask>.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
460,Entities.java,unescape,String unescape(String string),45,70,2696,2700,IdentifierMutator-Variable,accum,acc,0,0.9548072,<mask>,"         charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(<mask>, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
461,Entities.java,unescape,String unescape(String string),45,70,2696,2700,IdentifierMutator-Variable,accum,ac,1,0.006705343,<mask>,"         charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(<mask>, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
462,Entities.java,unescape,String unescape(String string),45,70,2696,2700,IdentifierMutator-Variable,accum,cum,2,0.0033622915,<mask>,"         charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(<mask>, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
463,Entities.java,unescape,String unescape(String string),45,70,2696,2700,IdentifierMutator-Variable,accum,c,3,0.0026251513,<mask>,"         charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(<mask>, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
464,Entities.java,unescape,String unescape(String string),45,70,2696,2700,IdentifierMutator-Variable,accum,uc,4,0.0016411085,<mask>,"         charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(<mask>, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
465,Entities.java,unescape,String unescape(String string),45,70,2711,2726,MethodCallMutator,quoteReplacement,quote,0,0.52829176,Matcher.<mask>(c),"   charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.<mask>(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
466,Entities.java,unescape,String unescape(String string),45,70,2711,2726,MethodCallMutator,quoteReplacement,escape,1,0.43694797,Matcher.<mask>(c),"   charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.<mask>(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
467,Entities.java,unescape,String unescape(String string),45,70,2711,2726,MethodCallMutator,quoteReplacement,replace,2,0.008888721,Matcher.<mask>(c),"   charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.<mask>(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
468,Entities.java,unescape,String unescape(String string),45,70,2711,2726,MethodCallMutator,quoteReplacement,match,3,0.0027691766,Matcher.<mask>(c),"   charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.<mask>(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
469,Entities.java,unescape,String unescape(String string),45,70,2711,2726,MethodCallMutator,quoteReplacement,escape,4,0.0016998445,Matcher.<mask>(c),"   charval = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.<mask>(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
470,Entities.java,unescape,String unescape(String string),45,70,2728,2728,IdentifierMutator-Variable,c,lc,2,7.729299E-5,<mask>," = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
471,Entities.java,unescape,String unescape(String string),45,70,2728,2728,IdentifierMutator-Variable,c,s,3,6.835331E-5,<mask>," = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
472,Entities.java,unescape,String unescape(String string),45,70,2728,2728,IdentifierMutator-Variable,c,cc,4,4.3107422E-5,<mask>," = Integer.valueOf(num, base);
                } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
473,Entities.java,unescape,String unescape(String string),45,72,2772,2788,MethodCallMutator,appendReplacement,replace,0,0.9883079,"m.<mask>(accum, Matcher.quoteReplacement(m.group(0)))","
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.<mask>(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
474,Entities.java,unescape,String unescape(String string),45,72,2772,2788,MethodCallMutator,appendReplacement,append,1,0.008222063,"m.<mask>(accum, Matcher.quoteReplacement(m.group(0)))","
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.<mask>(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
475,Entities.java,unescape,String unescape(String string),45,72,2772,2788,MethodCallMutator,appendReplacement,insert,2,0.0011791132,"m.<mask>(accum, Matcher.quoteReplacement(m.group(0)))","
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.<mask>(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
476,Entities.java,unescape,String unescape(String string),45,72,2772,2788,MethodCallMutator,appendReplacement,replace,3,5.0120766E-4,"m.<mask>(accum, Matcher.quoteReplacement(m.group(0)))","
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.<mask>(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
477,Entities.java,unescape,String unescape(String string),45,72,2772,2788,MethodCallMutator,appendReplacement,place,4,1.449288E-4,"m.<mask>(accum, Matcher.quoteReplacement(m.group(0)))","
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.<mask>(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
478,Entities.java,unescape,String unescape(String string),45,72,2770,2770,IdentifierMutator-Variable,m,accum,2,9.305393E-4,<mask>,"          } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {<mask>.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
479,Entities.java,unescape,String unescape(String string),45,72,2770,2770,IdentifierMutator-Variable,m,b,3,2.1076095E-4,<mask>,"          } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {<mask>.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
480,Entities.java,unescape,String unescape(String string),45,72,2770,2770,IdentifierMutator-Variable,m,c,4,1.8868486E-4,<mask>,"          } catch (NumberFormatException e) {
                } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {<mask>.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
481,Entities.java,unescape,String unescape(String string),45,72,2790,2794,IdentifierMutator-Variable,accum,acc,0,0.90663767,<mask>,"             } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(<mask>, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
482,Entities.java,unescape,String unescape(String string),45,72,2790,2794,IdentifierMutator-Variable,accum,ac,1,0.004671401,<mask>,"             } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(<mask>, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
483,Entities.java,unescape,String unescape(String string),45,72,2790,2794,IdentifierMutator-Variable,accum,original,2,0.0045736968,<mask>,"             } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(<mask>, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
484,Entities.java,unescape,String unescape(String string),45,72,2790,2794,IdentifierMutator-Variable,accum,result,3,0.0045477264,<mask>,"             } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(<mask>, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
485,Entities.java,unescape,String unescape(String string),45,72,2790,2794,IdentifierMutator-Variable,accum,orig,4,0.0033986073,<mask>,"             } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(<mask>, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
486,Entities.java,unescape,String unescape(String string),45,72,2805,2820,MethodCallMutator,quoteReplacement,quote,0,0.8613263,Matcher.<mask>(m.group(0)),"       } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.<mask>(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
487,Entities.java,unescape,String unescape(String string),45,72,2805,2820,MethodCallMutator,quoteReplacement,escape,1,0.13157696,Matcher.<mask>(m.group(0)),"       } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.<mask>(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
488,Entities.java,unescape,String unescape(String string),45,72,2805,2820,MethodCallMutator,quoteReplacement,replace,2,0.0013951382,Matcher.<mask>(m.group(0)),"       } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.<mask>(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
489,Entities.java,unescape,String unescape(String string),45,72,2805,2820,MethodCallMutator,quoteReplacement,match,3,4.1592048E-4,Matcher.<mask>(m.group(0)),"       } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.<mask>(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
490,Entities.java,unescape,String unescape(String string),45,72,2805,2820,MethodCallMutator,quoteReplacement,none,4,3.4699697E-4,Matcher.<mask>(m.group(0)),"       } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.<mask>(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
491,Entities.java,unescape,String unescape(String string),45,72,2824,2828,MethodCallMutator,group,arg,1,0.011899663,m.<mask>(0)," } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.<mask>(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
492,Entities.java,unescape,String unescape(String string),45,72,2824,2828,MethodCallMutator,group,get,3,0.00205181,m.<mask>(0)," } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.<mask>(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
493,Entities.java,unescape,String unescape(String string),45,72,2824,2828,MethodCallMutator,group,value,4,0.0016786231,m.<mask>(0)," } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.<mask>(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
494,Entities.java,unescape,String unescape(String string),45,72,2822,2822,IdentifierMutator-Variable,m,match,1,0.0010035004,<mask>,"   } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
495,Entities.java,unescape,String unescape(String string),45,72,2822,2822,IdentifierMutator-Variable,m,c,3,9.8347315E-5,<mask>,"   } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
496,Entities.java,unescape,String unescape(String string),45,72,2822,2822,IdentifierMutator-Variable,m,s,4,8.602385E-5,<mask>,"   } // skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(<mask>.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
497,Entities.java,unescape,String unescape(String string),45,72,2830,2830,IdentifierMutator-Literal,0,2,0,0.46636376,<mask>," skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(<mask>))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
498,Entities.java,unescape,String unescape(String string),45,72,2830,2830,IdentifierMutator-Literal,0,1,1,0.46304968,<mask>," skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(<mask>))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
499,Entities.java,unescape,String unescape(String string),45,72,2830,2830,IdentifierMutator-Literal,0,3,2,0.039529286,<mask>," skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(<mask>))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
500,Entities.java,unescape,String unescape(String string),45,72,2830,2830,IdentifierMutator-Literal,0,4,4,0.0074843154,<mask>," skip
            } else {
                String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(<mask>))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.toString();
   "
501,Entities.java,unescape,String unescape(String string),45,75,2902,2911,MethodCallMutator,appendTail,append,0,0.5101758,m.<mask>(accum),");
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.<mask>(accum);
        return accum.toString();
   "
502,Entities.java,unescape,String unescape(String string),45,75,2902,2911,MethodCallMutator,appendTail,replace,1,0.19628406,m.<mask>(accum),");
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.<mask>(accum);
        return accum.toString();
   "
503,Entities.java,unescape,String unescape(String string),45,75,2902,2911,MethodCallMutator,appendTail,update,2,0.07187442,m.<mask>(accum),");
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.<mask>(accum);
        return accum.toString();
   "
504,Entities.java,unescape,String unescape(String string),45,75,2902,2911,MethodCallMutator,appendTail,remove,3,0.043116238,m.<mask>(accum),");
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.<mask>(accum);
        return accum.toString();
   "
505,Entities.java,unescape,String unescape(String string),45,75,2902,2911,MethodCallMutator,appendTail,match,4,0.02603943,m.<mask>(accum),");
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.<mask>(accum);
        return accum.toString();
   "
506,Entities.java,unescape,String unescape(String string),45,75,2900,2900,IdentifierMutator-Variable,m,accum,0,0.75574785,<mask>,"   String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }<mask>.appendTail(accum);
        return accum.toString();
   "
507,Entities.java,unescape,String unescape(String string),45,75,2900,2900,IdentifierMutator-Variable,m,acc,2,0.039298777,<mask>,"   String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }<mask>.appendTail(accum);
        return accum.toString();
   "
508,Entities.java,unescape,String unescape(String string),45,75,2900,2900,IdentifierMutator-Variable,m,c,3,0.0044118003,<mask>,"   String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }<mask>.appendTail(accum);
        return accum.toString();
   "
509,Entities.java,unescape,String unescape(String string),45,75,2900,2900,IdentifierMutator-Variable,m,b,4,0.0035959745,<mask>,"   String name = m.group(1);
                if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }<mask>.appendTail(accum);
        return accum.toString();
   "
510,Entities.java,unescape,String unescape(String string),45,75,2913,2917,IdentifierMutator-Variable,accum,string,0,0.08487078,<mask>,"              if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(<mask>);
        return accum.toString();
   "
511,Entities.java,unescape,String unescape(String string),45,75,2913,2917,IdentifierMutator-Variable,accum,word,1,0.06961514,<mask>,"              if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(<mask>);
        return accum.toString();
   "
512,Entities.java,unescape,String unescape(String string),45,75,2913,2917,IdentifierMutator-Variable,accum,str,2,0.036677744,<mask>,"              if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(<mask>);
        return accum.toString();
   "
513,Entities.java,unescape,String unescape(String string),45,75,2913,2917,IdentifierMutator-Variable,accum,match,3,0.02631241,<mask>,"              if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(<mask>);
        return accum.toString();
   "
514,Entities.java,unescape,String unescape(String string),45,75,2913,2917,IdentifierMutator-Variable,accum,end,4,0.022994237,<mask>,"              if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(<mask>);
        return accum.toString();
   "
515,Entities.java,unescape,String unescape(String string),45,76,2942,2949,MethodCallMutator,toString,join,0,0.4713308,accum.<mask>()," (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.<mask>();
   "
516,Entities.java,unescape,String unescape(String string),45,76,2942,2949,MethodCallMutator,toString,value,1,0.15627469,accum.<mask>()," (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.<mask>();
   "
517,Entities.java,unescape,String unescape(String string),45,76,2942,2949,MethodCallMutator,toString,build,2,0.04386945,accum.<mask>()," (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.<mask>();
   "
518,Entities.java,unescape,String unescape(String string),45,76,2942,2949,MethodCallMutator,toString,string,3,0.031166656,accum.<mask>()," (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.<mask>();
   "
519,Entities.java,unescape,String unescape(String string),45,76,2942,2949,MethodCallMutator,toString,replace,4,0.024697356,accum.<mask>()," (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return accum.<mask>();
   "
520,Entities.java,unescape,String unescape(String string),45,76,2936,2940,IdentifierMutator-Variable,accum,m,0,0.9872289,<mask>,"  if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return<mask>.toString();
   "
521,Entities.java,unescape,String unescape(String string),45,76,2936,2940,IdentifierMutator-Variable,accum,b,1,0.0015628841,<mask>,"  if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return<mask>.toString();
   "
522,Entities.java,unescape,String unescape(String string),45,76,2936,2940,IdentifierMutator-Variable,accum,c,2,0.001188569,<mask>,"  if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return<mask>.toString();
   "
523,Entities.java,unescape,String unescape(String string),45,76,2936,2940,IdentifierMutator-Variable,accum,s,3,0.0010603359,<mask>,"  if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return<mask>.toString();
   "
524,Entities.java,unescape,String unescape(String string),45,76,2936,2940,IdentifierMutator-Variable,accum,r,4,7.105343E-4,<mask>,"  if (full.containsKey(name))
                    charval = full.get(name);
            }

            if (charval != -1 || charval > 0xFFFF) { // out of range
                String c = Character.toString((char) charval);
                m.appendReplacement(accum, Matcher.quoteReplacement(c));
            } else {
                m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0))); // replace with original string
            }
        }
        m.appendTail(accum);
        return<mask>.toString();
   "
